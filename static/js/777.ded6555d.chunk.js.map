{"version":3,"file":"static/js/777.ded6555d.chunk.js","mappings":"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","sources":["../node_modules/localforage/dist/localforage.js","../node_modules/onnxruntime-common/lib/backend-impl.ts","../node_modules/onnxruntime-common/lib/env.ts","../node_modules/onnxruntime-common/lib/env-impl.ts","../node_modules/onnxruntime-common/lib/tensor-impl.ts","../node_modules/onnxruntime-common/lib/tensor.ts","../node_modules/onnxruntime-common/lib/inference-session-impl.ts","../node_modules/onnxruntime-common/lib/inference-session.ts","../onnxruntime-web/webpack/universalModuleDefinition","../onnxruntime-web/lib/wasm/binding/ort-wasm-threaded.min.js","../onnxruntime-web/lib/wasm/binding/ort-wasm.js","../onnxruntime-web/node_modules/@protobufjs/aspromise/index.js","../onnxruntime-web/node_modules/@protobufjs/base64/index.js","../onnxruntime-web/node_modules/@protobufjs/eventemitter/index.js","../onnxruntime-web/node_modules/@protobufjs/float/index.js","../onnxruntime-web/node_modules/@protobufjs/inquire/index.js","../onnxruntime-web/node_modules/@protobufjs/pool/index.js","../onnxruntime-web/node_modules/@protobufjs/utf8/index.js","../onnxruntime-web/node_modules/guid-typescript/dist/guid.js","../onnxruntime-web/node_modules/long/src/long.js","../onnxruntime-web/node_modules/onnx-proto/dist/onnx.js","../onnxruntime-web/node_modules/protobufjs/minimal.js","../onnxruntime-web/node_modules/protobufjs/src/index-minimal.js","../onnxruntime-web/node_modules/protobufjs/src/reader.js","../onnxruntime-web/node_modules/protobufjs/src/reader_buffer.js","../onnxruntime-web/node_modules/protobufjs/src/roots.js","../onnxruntime-web/node_modules/protobufjs/src/rpc.js","../onnxruntime-web/node_modules/protobufjs/src/rpc/service.js","../onnxruntime-web/node_modules/protobufjs/src/util/longbits.js","../onnxruntime-web/node_modules/protobufjs/src/util/minimal.js","../onnxruntime-web/node_modules/protobufjs/src/writer.js","../onnxruntime-web/node_modules/protobufjs/src/writer_buffer.js","../onnxruntime-web/lib/backend-onnxjs.ts","../onnxruntime-web/lib/backend-wasm.ts","../onnxruntime-web/lib/index.ts","../onnxruntime-web/lib/onnxjs/attribute-with-cache-key.ts","../onnxruntime-web/lib/onnxjs/attribute.ts","../onnxruntime-web/lib/onnxjs/backend.ts","../onnxruntime-web/lib/onnxjs/backends/backend-webgl.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/glsl-coordinate-lib.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/glsl-definitions.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/glsl-encoding-lib.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/glsl-fragcolor-lib.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/glsl-function-inliner.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/glsl-preprocessor.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/glsl-registered-libs.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/glsl-shape-utils-lib.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/glsl-source.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/glsl-vec-lib.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/inference-handler.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/op-resolve-rules.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/batch-normalization.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/binary-op.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/cast.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/concat-packed.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/concat.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/conv-grouped.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/conv-pack.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/conv-transpose.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/conv.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/depth-to-space.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/dot-product.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/flatten.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/fuse-utils.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/gather.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/gemm.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/im2col-pack.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/im2col.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/image-scaler.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/instance-normalization.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/matmul-pack.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/matmul.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/pack.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/packing-utils.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/pad.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/pool.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/reduce.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/reshape-packed.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/reshape.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/resize-packed.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/shape.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/slice.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/softmax.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/split.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/squeeze.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/sum.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/tile.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/transpose.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/uint8-encode.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/unary-op.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/unpack.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/unsqueeze.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/ops/upsample.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/program-manager.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/session-handler.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/texture-data-encoder.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/texture-layout-strategy.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/texture-layout.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/texture-manager.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/types.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/utils.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/webgl-context-factory.ts","../onnxruntime-web/lib/onnxjs/backends/webgl/webgl-context.ts","../onnxruntime-web/lib/onnxjs/execution-plan.ts","../onnxruntime-web/lib/onnxjs/graph.ts","../onnxruntime-web/lib/onnxjs/instrument.ts","../onnxruntime-web/lib/onnxjs/model.ts","../onnxruntime-web/lib/onnxjs/operators.ts","../onnxruntime-web/lib/onnxjs/opset.ts","../onnxruntime-web/lib/onnxjs/ort-schema/ort-generated.ts","../onnxruntime-web/lib/onnxjs/session-handler.ts","../onnxruntime-web/lib/onnxjs/session.ts","../onnxruntime-web/lib/onnxjs/tensor.ts","../onnxruntime-web/lib/onnxjs/util.ts","../onnxruntime-web/lib/wasm/options-utils.ts","../onnxruntime-web/lib/wasm/proxy-wrapper.ts","../onnxruntime-web/lib/wasm/run-options.ts","../onnxruntime-web/lib/wasm/session-handler.ts","../onnxruntime-web/lib/wasm/session-options.ts","../onnxruntime-web/lib/wasm/string-utils.ts","../onnxruntime-web/lib/wasm/wasm-core-impl.ts","../onnxruntime-web/lib/wasm/wasm-factory.ts","../onnxruntime-web/lib/wasm/proxy-worker/main.ts","../onnxruntime-web/node_modules/worker-loader/dist/runtime/inline.js","../onnxruntime-web/external umd {\"commonjs\":\"onnxruntime-common\",\"commonjs2\":\"onnxruntime-common\",\"root\":\"ort\"}","../onnxruntime-web/node_modules/flatbuffers/js/flatbuffers.mjs","../onnxruntime-web/webpack/bootstrap","../onnxruntime-web/webpack/runtime/compat get default export","../onnxruntime-web/webpack/runtime/define property getters","../onnxruntime-web/webpack/runtime/global","../onnxruntime-web/webpack/runtime/hasOwnProperty shorthand","../onnxruntime-web/webpack/runtime/make namespace object","../onnxruntime-web/webpack/startup","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/createSuper.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/comlink/src/comlink.ts","../node_modules/pako/dist/pako.esm.mjs","../../src/session.ts","../../src/session.worker.ts"],"sourcesContent":["/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Backend} from './backend';\n\ninterface BackendInfo {\n  backend: Backend;\n  priority: number;\n\n  initPromise?: Promise<void>;\n  initialized?: boolean;\n  aborted?: boolean;\n}\n\nconst backends: {[name: string]: BackendInfo} = {};\nconst backendsSortedByPriority: string[] = [];\n\n/**\n * Register a backend.\n *\n * @param name - the name as a key to lookup as an execution provider.\n * @param backend - the backend object.\n * @param priority - an integer indicating the priority of the backend. Higher number means higher priority. if priority\n * < 0, it will be considered as a 'beta' version and will not be used as a fallback backend by default.\n *\n * @internal\n */\nexport const registerBackend = (name: string, backend: Backend, priority: number): void => {\n  if (backend && typeof backend.init === 'function' && typeof backend.createSessionHandler === 'function') {\n    const currentBackend = backends[name];\n    if (currentBackend === undefined) {\n      backends[name] = {backend, priority};\n    } else if (currentBackend.priority > priority) {\n      // same name is already registered with a higher priority. skip registeration.\n      return;\n    } else if (currentBackend.priority === priority) {\n      if (currentBackend.backend !== backend) {\n        throw new Error(`cannot register backend \"${name}\" using priority ${priority}`);\n      }\n    }\n\n    if (priority >= 0) {\n      const i = backendsSortedByPriority.indexOf(name);\n      if (i !== -1) {\n        backendsSortedByPriority.splice(i, 1);\n      }\n\n      for (let i = 0; i < backendsSortedByPriority.length; i++) {\n        if (backends[backendsSortedByPriority[i]].priority <= priority) {\n          backendsSortedByPriority.splice(i, 0, name);\n          return;\n        }\n      }\n      backendsSortedByPriority.push(name);\n    }\n    return;\n  }\n\n  throw new TypeError('not a valid backend');\n};\n\n/**\n * Resolve backend by specified hints.\n *\n * @param backendHints - a list of execution provider names to lookup. If omitted use registered backends as list.\n * @returns a promise that resolves to the backend.\n *\n * @internal\n */\nexport const resolveBackend = async(backendHints: readonly string[]): Promise<Backend> => {\n  const backendNames = backendHints.length === 0 ? backendsSortedByPriority : backendHints;\n  const errors = [];\n  for (const backendName of backendNames) {\n    const backendInfo = backends[backendName];\n    if (backendInfo) {\n      if (backendInfo.initialized) {\n        return backendInfo.backend;\n      } else if (backendInfo.aborted) {\n        continue;  // current backend is unavailable; try next\n      }\n\n      const isInitializing = !!backendInfo.initPromise;\n      try {\n        if (!isInitializing) {\n          backendInfo.initPromise = backendInfo.backend.init();\n        }\n        await backendInfo.initPromise;\n        backendInfo.initialized = true;\n        return backendInfo.backend;\n      } catch (e) {\n        if (!isInitializing) {\n          errors.push({name: backendName, err: e});\n        }\n        backendInfo.aborted = true;\n      } finally {\n        delete backendInfo.initPromise;\n      }\n    }\n  }\n\n  throw new Error(`no available backend found. ERR: ${errors.map(e => `[${e.name}] ${e.err}`).join(', ')}`);\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {EnvImpl} from './env-impl';\nexport declare namespace Env {\n  export type WasmPrefixOrFilePaths = string|{\n    'ort-wasm.wasm'?: string;\n    'ort-wasm-threaded.wasm'?: string;\n    'ort-wasm-simd.wasm'?: string;\n    'ort-wasm-simd-threaded.wasm'?: string;\n  };\n  export interface WebAssemblyFlags {\n    /**\n     * set or get number of thread(s). If omitted or set to 0, number of thread(s) will be determined by system. If set\n     * to 1, no worker thread will be spawned.\n     *\n     * This setting is available only when WebAssembly multithread feature is available in current context.\n     *\n     * @defaultValue `0`\n     */\n    numThreads?: number;\n\n    /**\n     * set or get a boolean value indicating whether to enable SIMD. If set to false, SIMD will be forcely disabled.\n     *\n     * This setting is available only when WebAssembly SIMD feature is available in current context.\n     *\n     * @defaultValue `true`\n     */\n    simd?: boolean;\n\n    /**\n     * Set or get a number specifying the timeout for initialization of WebAssembly backend, in milliseconds. A zero\n     * value indicates no timeout is set.\n     *\n     * @defaultValue `0`\n     */\n    initTimeout?: number;\n\n    /**\n     * Set a custom URL prefix to the .wasm files or a set of overrides for each .wasm file. The override path should be\n     * an absolute path.\n     */\n    wasmPaths?: WasmPrefixOrFilePaths;\n\n    /**\n     * Set or get a boolean value indicating whether to proxy the execution of main thread to a worker thread.\n     *\n     * @defaultValue `false`\n     */\n    proxy?: boolean;\n  }\n\n  export interface WebGLFlags {\n    /**\n     * Set or get the WebGL Context ID (webgl or webgl2).\n     *\n     * @defaultValue `'webgl2'`\n     */\n    contextId?: 'webgl'|'webgl2';\n    /**\n     * Set or get the maximum batch size for matmul. 0 means to disable batching.\n     *\n     * @deprecated\n     */\n    matmulMaxBatchSize?: number;\n    /**\n     * Set or get the texture cache mode.\n     *\n     * @defaultValue `'full'`\n     */\n    textureCacheMode?: 'initializerOnly'|'full';\n    /**\n     * Set or get the packed texture mode\n     *\n     * @defaultValue `false`\n     */\n    pack?: boolean;\n    /**\n     * Set or get whether enable async download.\n     *\n     * @defaultValue `false`\n     */\n    async?: boolean;\n  }\n}\n\nexport interface Env {\n  /**\n   * set the severity level for logging.\n   *\n   * @defaultValue `'warning'`\n   */\n  logLevel?: 'verbose'|'info'|'warning'|'error'|'fatal';\n  /**\n   * Indicate whether run in debug mode.\n   *\n   * @defaultValue `false`\n   */\n  debug?: boolean;\n\n  /**\n   * Represent a set of flags for WebAssembly\n   */\n  wasm: Env.WebAssemblyFlags;\n\n  /**\n   * Represent a set of flags for WebGL\n   */\n  webgl: Env.WebGLFlags;\n\n  [name: string]: unknown;\n}\n\n/**\n * Represent a set of flags as a global singleton.\n */\nexport const env: Env = new EnvImpl();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from './env';\n\ntype LogLevelType = Env['logLevel'];\nexport class EnvImpl implements Env {\n  constructor() {\n    this.wasm = {};\n    this.webgl = {};\n    this.logLevelInternal = 'warning';\n  }\n\n  // TODO standadize the getter and setter convention in env for other fields.\n  set logLevel(value: LogLevelType) {\n    if (value === undefined) {\n      return;\n    }\n    if (typeof value !== 'string' || ['verbose', 'info', 'warning', 'error', 'fatal'].indexOf(value) === -1) {\n      throw new Error(`Unsupported logging level: ${value}`);\n    }\n    this.logLevelInternal = value;\n  }\n  get logLevel(): LogLevelType {\n    return this.logLevelInternal;\n  }\n\n  debug?: boolean;\n\n  wasm: Env.WebAssemblyFlags;\n\n  webgl: Env.WebGLFlags;\n\n  [name: string]: unknown;\n\n  private logLevelInternal: Required<LogLevelType>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor as TensorInterface, TensorFromImageOptions, TensorToImageDataOptions} from './tensor';\n\ntype TensorType = TensorInterface.Type;\ntype TensorDataType = TensorInterface.DataType;\n\ntype SupportedTypedArrayConstructors = Float32ArrayConstructor|Uint8ArrayConstructor|Int8ArrayConstructor|\n    Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|Uint8ArrayConstructor|\n    Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor;\ntype SupportedTypedArray = InstanceType<SupportedTypedArrayConstructors>;\n\nconst isBigInt64ArrayAvailable = typeof BigInt64Array !== 'undefined' && typeof BigInt64Array.from === 'function';\nconst isBigUint64ArrayAvailable = typeof BigUint64Array !== 'undefined' && typeof BigUint64Array.from === 'function';\n\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP = new Map<string, SupportedTypedArrayConstructors>([\n  ['float32', Float32Array],\n  ['uint8', Uint8Array],\n  ['int8', Int8Array],\n  ['uint16', Uint16Array],\n  ['int16', Int16Array],\n  ['int32', Int32Array],\n  ['bool', Uint8Array],\n  ['float64', Float64Array],\n  ['uint32', Uint32Array],\n]);\n\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP = new Map<SupportedTypedArrayConstructors, TensorType>([\n  [Float32Array, 'float32'],\n  [Uint8Array, 'uint8'],\n  [Int8Array, 'int8'],\n  [Uint16Array, 'uint16'],\n  [Int16Array, 'int16'],\n  [Int32Array, 'int32'],\n  [Float64Array, 'float64'],\n  [Uint32Array, 'uint32'],\n]);\n\nif (isBigInt64ArrayAvailable) {\n  NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('int64', BigInt64Array);\n  NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array, 'int64');\n}\nif (isBigUint64ArrayAvailable) {\n  NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('uint64', BigUint64Array);\n  NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array, 'uint64');\n}\n\n/**\n * calculate size from dims.\n *\n * @param dims the dims array. May be an illegal input.\n */\nconst calculateSize = (dims: readonly unknown[]): number => {\n  let size = 1;\n  for (let i = 0; i < dims.length; i++) {\n    const dim = dims[i];\n    if (typeof dim !== 'number' || !Number.isSafeInteger(dim)) {\n      throw new TypeError(`dims[${i}] must be an integer, got: ${dim}`);\n    }\n    if (dim < 0) {\n      throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${dim}`);\n    }\n    size *= dim;\n  }\n  return size;\n};\n\nexport class Tensor implements TensorInterface {\n  // #region constructors\n  constructor(type: TensorType, data: TensorDataType|readonly number[]|readonly boolean[], dims?: readonly number[]);\n  constructor(data: TensorDataType|readonly boolean[], dims?: readonly number[]);\n  constructor(\n      arg0: TensorType|TensorDataType|readonly boolean[], arg1?: TensorDataType|readonly number[]|readonly boolean[],\n      arg2?: readonly number[]) {\n    let type: TensorType;\n    let data: TensorDataType;\n    let dims: typeof arg1|typeof arg2;\n    // check whether arg0 is type or data\n    if (typeof arg0 === 'string') {\n      //\n      // Override: constructor(type, data, ...)\n      //\n      type = arg0;\n      dims = arg2;\n      if (arg0 === 'string') {\n        // string tensor\n        if (!Array.isArray(arg1)) {\n          throw new TypeError('A string tensor\\'s data must be a string array.');\n        }\n        // we don't check whether every element in the array is string; this is too slow. we assume it's correct and\n        // error will be populated at inference\n        data = arg1;\n      } else {\n        // numeric tensor\n        const typedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(arg0);\n        if (typedArrayConstructor === undefined) {\n          throw new TypeError(`Unsupported tensor type: ${arg0}.`);\n        }\n        if (Array.isArray(arg1)) {\n          // use 'as any' here because TypeScript's check on type of 'SupportedTypedArrayConstructors.from()' produces\n          // incorrect results.\n          // 'typedArrayConstructor' should be one of the typed array prototype objects.\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          data = (typedArrayConstructor as any).from(arg1);\n        } else if (arg1 instanceof typedArrayConstructor) {\n          data = arg1;\n        } else {\n          throw new TypeError(`A ${type} tensor's data must be type of ${typedArrayConstructor}`);\n        }\n      }\n    } else {\n      //\n      // Override: constructor(data, ...)\n      //\n      dims = arg1;\n      if (Array.isArray(arg0)) {\n        // only boolean[] and string[] is supported\n        if (arg0.length === 0) {\n          throw new TypeError('Tensor type cannot be inferred from an empty array.');\n        }\n        const firstElementType = typeof arg0[0];\n        if (firstElementType === 'string') {\n          type = 'string';\n          data = arg0;\n        } else if (firstElementType === 'boolean') {\n          type = 'bool';\n          // 'arg0' is of type 'boolean[]'. Uint8Array.from(boolean[]) actually works, but typescript thinks this is\n          // wrong type. We use 'as any' to make it happy.\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          data = Uint8Array.from(arg0 as any[]);\n        } else {\n          throw new TypeError(`Invalid element type of data array: ${firstElementType}.`);\n        }\n      } else {\n        // get tensor type from TypedArray\n        const mappedType =\n            NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(arg0.constructor as SupportedTypedArrayConstructors);\n        if (mappedType === undefined) {\n          throw new TypeError(`Unsupported type for tensor data: ${arg0.constructor}.`);\n        }\n        type = mappedType;\n        data = arg0 as SupportedTypedArray;\n      }\n    }\n\n    // type and data is processed, now processing dims\n    if (dims === undefined) {\n      // assume 1-D tensor if dims omitted\n      dims = [data.length];\n    } else if (!Array.isArray(dims)) {\n      throw new TypeError('A tensor\\'s dims must be a number array');\n    }\n\n    // perform check\n    const size = calculateSize(dims);\n    if (size !== data.length) {\n      throw new Error(`Tensor's size(${size}) does not match data length(${data.length}).`);\n    }\n\n    this.dims = dims as readonly number[];\n    this.type = type;\n    this.data = data;\n    this.size = size;\n  }\n  // #endregion\n  /**\n   * Create a new tensor object from image object\n   *\n   * @param buffer - Extracted image buffer data - assuming RGBA format\n   * @param imageFormat - input image configuration - required configurations height, width, format\n   * @param tensorFormat - output tensor configuration - Default is RGB format\n   */\n  private static bufferToTensor(buffer: Uint8ClampedArray|undefined, options: TensorFromImageOptions): Tensor {\n    if (buffer === undefined) {\n      throw new Error('Image buffer must be defined');\n    }\n    if (options.height === undefined || options.width === undefined) {\n      throw new Error('Image height and width must be defined');\n    }\n\n    const {height, width} = options;\n\n    const norm = options.norm;\n    let normMean: number;\n    let normBias: number;\n    if (norm === undefined || norm.mean === undefined) {\n      normMean = 255;\n    } else {\n      normMean = norm.mean;\n    }\n    if (norm === undefined || norm.bias === undefined) {\n      normBias = 0;\n    } else {\n      normBias = norm.bias;\n    }\n\n    const inputformat = options.bitmapFormat !== undefined ? options.bitmapFormat : 'RGBA';\n    // default value is RGBA since imagedata and HTMLImageElement uses it\n\n    const outputformat = options.tensorFormat !== undefined ?\n        (options.tensorFormat !== undefined ? options.tensorFormat : 'RGB') :\n        'RGB';\n    const offset = height * width;\n    const float32Data = outputformat === 'RGBA' ? new Float32Array(offset * 4) : new Float32Array(offset * 3);\n\n    // Default pointer assignments\n    let step = 4, rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n    let rTensorPointer = 0, gTensorPointer = offset, bTensorPointer = offset * 2, aTensorPointer = -1;\n\n    // Updating the pointer assignments based on the input image format\n    if (inputformat === 'RGB') {\n      step = 3;\n      rImagePointer = 0;\n      gImagePointer = 1;\n      bImagePointer = 2;\n      aImagePointer = -1;\n    }\n\n    // Updating the pointer assignments based on the output tensor format\n    if (outputformat === 'RGBA') {\n      aTensorPointer = offset * 3;\n    } else if (outputformat === 'RBG') {\n      rTensorPointer = 0;\n      bTensorPointer = offset;\n      gTensorPointer = offset * 2;\n    } else if (outputformat === 'BGR') {\n      bTensorPointer = 0;\n      gTensorPointer = offset;\n      rTensorPointer = offset * 2;\n    }\n\n    for (let i = 0; i < offset;\n         i++, rImagePointer += step, bImagePointer += step, gImagePointer += step, aImagePointer += step) {\n      float32Data[rTensorPointer++] = (buffer[rImagePointer] + normBias) / normMean;\n      float32Data[gTensorPointer++] = (buffer[gImagePointer] + normBias) / normMean;\n      float32Data[bTensorPointer++] = (buffer[bImagePointer] + normBias) / normMean;\n      if (aTensorPointer !== -1 && aImagePointer !== -1) {\n        float32Data[aTensorPointer++] = (buffer[aImagePointer] + normBias) / normMean;\n      }\n    }\n\n    // Float32Array -> ort.Tensor\n    const outputTensor = outputformat === 'RGBA' ? new Tensor('float32', float32Data, [1, 4, height, width]) :\n                                                   new Tensor('float32', float32Data, [1, 3, height, width]);\n    return outputTensor;\n  }\n\n  // #region factory\n  static async fromImage(imageData: ImageData, options?: TensorFromImageOptions): Promise<Tensor>;\n  static async fromImage(imageElement: HTMLImageElement, options?: TensorFromImageOptions): Promise<Tensor>;\n  static async fromImage(bitmap: ImageBitmap, options: TensorFromImageOptions): Promise<Tensor>;\n  static async fromImage(url: string, options?: TensorFromImageOptions): Promise<Tensor>;\n\n  static async fromImage(image: ImageData|HTMLImageElement|ImageBitmap|string, options?: TensorFromImageOptions):\n      Promise<Tensor> {\n    // checking the type of image object\n    const isHTMLImageEle = typeof (HTMLImageElement) !== 'undefined' && image instanceof HTMLImageElement;\n    const isImageDataEle = typeof (ImageData) !== 'undefined' && image instanceof ImageData;\n    const isImageBitmap = typeof (ImageBitmap) !== 'undefined' && image instanceof ImageBitmap;\n    const isURL = typeof (String) !== 'undefined' && (image instanceof String || typeof image === 'string');\n\n    let data: Uint8ClampedArray|undefined;\n    let tensorConfig: TensorFromImageOptions = {};\n\n    // filling and checking image configuration options\n    if (isHTMLImageEle) {\n      // HTMLImageElement - image object - format is RGBA by default\n      const canvas = document.createElement('canvas');\n      const pixels2DContext = canvas.getContext('2d');\n\n      if (pixels2DContext != null) {\n        let height = image.naturalHeight;\n        let width = image.naturalWidth;\n\n        if (options !== undefined && options.resizedHeight !== undefined && options.resizedWidth !== undefined) {\n          height = options.resizedHeight;\n          width = options.resizedWidth;\n        }\n\n        if (options !== undefined) {\n          tensorConfig = options;\n          if (options.tensorFormat !== undefined) {\n            throw new Error('Image input config format must be RGBA for HTMLImageElement');\n          } else {\n            tensorConfig.tensorFormat = 'RGBA';\n          }\n          if (options.height !== undefined && options.height !== height) {\n            throw new Error('Image input config height doesn\\'t match HTMLImageElement height');\n          } else {\n            tensorConfig.height = height;\n          }\n          if (options.width !== undefined && options.width !== width) {\n            throw new Error('Image input config width doesn\\'t match HTMLImageElement width');\n          } else {\n            tensorConfig.width = width;\n          }\n        } else {\n          tensorConfig.tensorFormat = 'RGBA';\n          tensorConfig.height = height;\n          tensorConfig.width = width;\n        }\n\n        canvas.width = width;\n        canvas.height = height;\n\n        pixels2DContext.drawImage(image, 0, 0, width, height);\n        data = pixels2DContext.getImageData(0, 0, width, height).data;\n      } else {\n        throw new Error('Can not access image data');\n      }\n\n    } else if (isImageDataEle) {\n      // ImageData - image object - format is RGBA by default\n      const format = 'RGBA';\n      let height: number;\n      let width: number;\n\n      if (options !== undefined && options.resizedWidth !== undefined && options.resizedHeight !== undefined) {\n        height = options.resizedHeight;\n        width = options.resizedWidth;\n      } else {\n        height = image.height;\n        width = image.width;\n      }\n\n      if (options !== undefined) {\n        tensorConfig = options;\n        if (options.bitmapFormat !== undefined && options.bitmapFormat !== format) {\n          throw new Error('Image input config format must be RGBA for ImageData');\n        } else {\n          tensorConfig.bitmapFormat = 'RGBA';\n        }\n      } else {\n        tensorConfig.bitmapFormat = 'RGBA';\n      }\n\n      tensorConfig.height = height;\n      tensorConfig.width = width;\n\n      if (options !== undefined) {\n        const tempCanvas = document.createElement('canvas');\n\n        tempCanvas.width = width;\n        tempCanvas.height = height;\n\n        const pixels2DContext = tempCanvas.getContext('2d');\n\n        if (pixels2DContext != null) {\n          pixels2DContext.putImageData(image, 0, 0);\n          data = pixels2DContext.getImageData(0, 0, width, height).data;\n        } else {\n          throw new Error('Can not access image data');\n        }\n      } else {\n        data = image.data;\n      }\n\n    } else if (isImageBitmap) {\n      // ImageBitmap - image object - format must be provided by user\n      if (options === undefined) {\n        throw new Error('Please provide image config with format for Imagebitmap');\n      }\n      if (options.bitmapFormat !== undefined) {\n        throw new Error('Image input config format must be defined for ImageBitmap');\n      }\n\n      const pixels2DContext = document.createElement('canvas').getContext('2d');\n\n      if (pixels2DContext != null) {\n        const height = image.height;\n        const width = image.width;\n        pixels2DContext.drawImage(image, 0, 0, width, height);\n        data = pixels2DContext.getImageData(0, 0, width, height).data;\n        if (options !== undefined) {\n          // using square brackets to avoid TS error - type 'never'\n          if (options.height !== undefined && options.height !== height) {\n            throw new Error('Image input config height doesn\\'t match ImageBitmap height');\n          } else {\n            tensorConfig.height = height;\n          }\n          // using square brackets to avoid TS error - type 'never'\n          if (options.width !== undefined && options.width !== width) {\n            throw new Error('Image input config width doesn\\'t match ImageBitmap width');\n          } else {\n            tensorConfig.width = width;\n          }\n        } else {\n          tensorConfig.height = height;\n          tensorConfig.width = width;\n        }\n        return Tensor.bufferToTensor(data, tensorConfig);\n      } else {\n        throw new Error('Can not access image data');\n      }\n\n    } else if (isURL) {\n      return new Promise((resolve, reject) => {\n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        if (!image || !context) {\n          return reject();\n        }\n        const newImage = new Image();\n        newImage.crossOrigin = 'Anonymous';\n        newImage.src = image as string;\n        newImage.onload = () => {\n          canvas.width = newImage.width;\n          canvas.height = newImage.height;\n          context.drawImage(newImage, 0, 0, canvas.width, canvas.height);\n          const img = context.getImageData(0, 0, canvas.width, canvas.height);\n          if (options !== undefined) {\n            // using square brackets to avoid TS error - type 'never'\n            if (options.height !== undefined && options.height !== canvas.height) {\n              throw new Error('Image input config height doesn\\'t match ImageBitmap height');\n            } else {\n              tensorConfig.height = canvas.height;\n            }\n            // using square brackets to avoid TS error - type 'never'\n            if (options.width !== undefined && options.width !== canvas.width) {\n              throw new Error('Image input config width doesn\\'t match ImageBitmap width');\n            } else {\n              tensorConfig.width = canvas.width;\n            }\n          } else {\n            tensorConfig.height = canvas.height;\n            tensorConfig.width = canvas.width;\n          }\n          resolve(Tensor.bufferToTensor(img.data, tensorConfig));\n        };\n      });\n    } else {\n      throw new Error('Input data provided is not supported - aborted tensor creation');\n    }\n\n    if (data !== undefined) {\n      return Tensor.bufferToTensor(data, tensorConfig);\n    } else {\n      throw new Error('Input data provided is not supported - aborted tensor creation');\n    }\n  }\n\n  toImageData(options?: TensorToImageDataOptions): ImageData {\n    const pixels2DContext = document.createElement('canvas').getContext('2d');\n    let image: ImageData;\n    if (pixels2DContext != null) {\n      // Default values for height and width & format\n      const width = this.dims[3];\n      const height = this.dims[2];\n      const channels = this.dims[1];\n\n      const inputformat = options !== undefined ? (options.format !== undefined ? options.format : 'RGB') : 'RGB';\n      const normMean = options !== undefined ? (options.norm?.mean !== undefined ? options.norm.mean : 255) : 255;\n      const normBias = options !== undefined ? (options.norm?.bias !== undefined ? options.norm.bias : 0) : 0;\n      const offset = height * width;\n\n      if (options !== undefined) {\n        if (options.height !== undefined && options.height !== height) {\n          throw new Error('Image output config height doesn\\'t match tensor height');\n        }\n        if (options.width !== undefined && options.width !== width) {\n          throw new Error('Image output config width doesn\\'t match tensor width');\n        }\n        if (options.format !== undefined && (channels === 4 && options.format !== 'RGBA') ||\n            (channels === 3 && (options.format !== 'RGB' && options.format !== 'BGR'))) {\n          throw new Error('Tensor format doesn\\'t match input tensor dims');\n        }\n      }\n\n      // Default pointer assignments\n      const step = 4;\n      let rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n      let rTensorPointer = 0, gTensorPointer = offset, bTensorPointer = offset * 2, aTensorPointer = -1;\n\n      // Updating the pointer assignments based on the input image format\n      if (inputformat === 'RGBA') {\n        rTensorPointer = 0;\n        gTensorPointer = offset;\n        bTensorPointer = offset * 2;\n        aTensorPointer = offset * 3;\n      } else if (inputformat === 'RGB') {\n        rTensorPointer = 0;\n        gTensorPointer = offset;\n        bTensorPointer = offset * 2;\n      } else if (inputformat === 'RBG') {\n        rTensorPointer = 0;\n        bTensorPointer = offset;\n        gTensorPointer = offset * 2;\n      }\n\n      image = pixels2DContext.createImageData(width, height);\n\n      for (let i = 0; i < height * width;\n           rImagePointer += step, gImagePointer += step, bImagePointer += step, aImagePointer += step, i++) {\n        image.data[rImagePointer] = ((this.data[rTensorPointer++] as number) - normBias) * normMean;  // R value\n        image.data[gImagePointer] = ((this.data[gTensorPointer++] as number) - normBias) * normMean;  // G value\n        image.data[bImagePointer] = ((this.data[bTensorPointer++] as number) - normBias) * normMean;  // B value\n        image.data[aImagePointer] =\n            aTensorPointer === -1 ? 255 : ((this.data[aTensorPointer++] as number) - normBias) * normMean;  // A value\n      }\n\n    } else {\n      throw new Error('Can not access image data');\n    }\n    return image;\n  }\n\n  // #region fields\n  readonly dims: readonly number[];\n  readonly type: TensorType;\n  readonly data: TensorDataType;\n  readonly size: number;\n  // #endregion\n\n  // #region tensor utilities\n  reshape(dims: readonly number[]): Tensor {\n    return new Tensor(this.type, this.data, dims);\n  }\n  // #endregion\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor as TensorImpl} from './tensor-impl';\nimport {TypedTensorUtils} from './tensor-utils';\n\n/* eslint-disable @typescript-eslint/no-redeclare */\n\n/**\n * represent a basic tensor with specified dimensions and data type.\n */\ninterface TypedTensorBase<T extends Tensor.Type> {\n  /**\n   * Get the dimensions of the tensor.\n   */\n  readonly dims: readonly number[];\n  /**\n   * Get the data type of the tensor.\n   */\n  readonly type: T;\n  /**\n   * Get the buffer data of the tensor.\n   */\n  readonly data: Tensor.DataTypeMap[T];\n}\n\nexport declare namespace Tensor {\n  interface DataTypeMap {\n    float32: Float32Array;\n    uint8: Uint8Array;\n    int8: Int8Array;\n    uint16: Uint16Array;\n    int16: Int16Array;\n    int32: Int32Array;\n    int64: BigInt64Array;\n    string: string[];\n    bool: Uint8Array;\n    float16: never;  // hold on using Uint16Array before we have a concrete solution for float 16\n    float64: Float64Array;\n    uint32: Uint32Array;\n    uint64: BigUint64Array;\n    // complex64: never;\n    // complex128: never;\n    // bfloat16: never;\n  }\n\n  interface ElementTypeMap {\n    float32: number;\n    uint8: number;\n    int8: number;\n    uint16: number;\n    int16: number;\n    int32: number;\n    int64: bigint;\n    string: string;\n    bool: boolean;\n    float16: never;  // hold on before we have a concret solution for float 16\n    float64: number;\n    uint32: number;\n    uint64: bigint;\n    // complex64: never;\n    // complex128: never;\n    // bfloat16: never;\n  }\n\n  type DataType = DataTypeMap[Type];\n  type ElementType = ElementTypeMap[Type];\n\n  /**\n   * represent the data type of a tensor\n   */\n  export type Type = keyof DataTypeMap;\n}\n\n/**\n * Represent multi-dimensional arrays to feed to or fetch from model inferencing.\n */\nexport interface TypedTensor<T extends Tensor.Type> extends TypedTensorBase<T>, TypedTensorUtils<T> {}\n/**\n * Represent multi-dimensional arrays to feed to or fetch from model inferencing.\n */\nexport interface Tensor extends TypedTensorBase<Tensor.Type>, TypedTensorUtils<Tensor.Type> {}\n\nexport interface TensorConstructor {\n  // #region specify element type\n  /**\n   * Construct a new string tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the tensor data\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(type: 'string', data: Tensor.DataTypeMap['string']|readonly string[],\n      dims?: readonly number[]): TypedTensor<'string'>;\n\n  /**\n   * Construct a new bool tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the tensor data\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(type: 'bool', data: Tensor.DataTypeMap['bool']|readonly boolean[], dims?: readonly number[]): TypedTensor<'bool'>;\n\n  /**\n   * Construct a new numeric tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the tensor data\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new<T extends Exclude<Tensor.Type, 'string'|'bool'>>(\n      type: T, data: Tensor.DataTypeMap[T]|readonly number[], dims?: readonly number[]): TypedTensor<T>;\n  // #endregion\n\n  // #region infer element types\n\n  /**\n   * Construct a new float32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the tensor data\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Float32Array, dims?: readonly number[]): TypedTensor<'float32'>;\n\n  /**\n   * Construct a new int8 tensor object from the given data and dims.\n   *\n   * @param data - Specify the tensor data\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Int8Array, dims?: readonly number[]): TypedTensor<'int8'>;\n\n  /**\n   * Construct a new uint8 tensor object from the given data and dims.\n   *\n   * @param data - Specify the tensor data\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Uint8Array, dims?: readonly number[]): TypedTensor<'uint8'>;\n\n  /**\n   * Construct a new uint16 tensor object from the given data and dims.\n   *\n   * @param data - Specify the tensor data\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Uint16Array, dims?: readonly number[]): TypedTensor<'uint16'>;\n\n  /**\n   * Construct a new int16 tensor object from the given data and dims.\n   *\n   * @param data - Specify the tensor data\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Int16Array, dims?: readonly number[]): TypedTensor<'int16'>;\n\n  /**\n   * Construct a new int32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the tensor data\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Int32Array, dims?: readonly number[]): TypedTensor<'int32'>;\n\n  /**\n   * Construct a new int64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the tensor data\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: BigInt64Array, dims?: readonly number[]): TypedTensor<'int64'>;\n\n  /**\n   * Construct a new string tensor object from the given data and dims.\n   *\n   * @param data - Specify the tensor data\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: readonly string[], dims?: readonly number[]): TypedTensor<'string'>;\n\n  /**\n   * Construct a new bool tensor object from the given data and dims.\n   *\n   * @param data - Specify the tensor data\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: readonly boolean[], dims?: readonly number[]): TypedTensor<'bool'>;\n\n  /**\n   * Construct a new float64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the tensor data\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Float64Array, dims?: readonly number[]): TypedTensor<'float64'>;\n\n  /**\n   * Construct a new uint32 tensor object from the given data and dims.\n   *\n   * @param data - Specify the tensor data\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Uint32Array, dims?: readonly number[]): TypedTensor<'uint32'>;\n\n  /**\n   * Construct a new uint64 tensor object from the given data and dims.\n   *\n   * @param data - Specify the tensor data\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: BigUint64Array, dims?: readonly number[]): TypedTensor<'uint64'>;\n\n  // #endregion\n\n  // #region fall back to non-generic tensor type declaration\n\n  /**\n   * Construct a new tensor object from the given type, data and dims.\n   *\n   * @param type - Specify the element type.\n   * @param data - Specify the tensor data\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(type: Tensor.Type, data: Tensor.DataType|readonly number[]|readonly boolean[], dims?: readonly number[]): Tensor;\n\n  /**\n   * Construct a new tensor object from the given data and dims.\n   *\n   * @param data - Specify the tensor data\n   * @param dims - Specify the dimension of the tensor. If omitted, a 1-D tensor is assumed.\n   */\n  new(data: Tensor.DataType, dims?: readonly number[]): Tensor;\n  // #endregion\n}\n\n/**\n * Specify the image format. Assume 'RGBA' if omitted.\n */\nexport type ImageFormat = 'RGB'|'RGBA'|'BGR'|'RBG';\n\n/**\n * Describes Tensor configuration to an image data.\n */\nexport interface TensorToImageDataOptions {\n  /**\n   * Describes Tensor channels order.\n   */\n  format?: ImageFormat;\n  /**\n   * Tensor channel layout - default is 'NHWC'\n   */\n  tensorLayout?: 'NHWC'|'NCHW';\n  /**\n   * Describes Tensor Height - can be accessed via tensor dimensions as well\n   */\n  height?: number;\n  /**\n   * Describes Tensor Width - can be accessed via tensor dimensions as well\n   */\n  width?: number;\n  /**\n   * Describes normalization parameters to ImageData conversion from tensor - default values - Bias: 0, Mean: 255\n   */\n  norm?: {\n    bias?: number;  // Todo add support - |[number,number,number]|[number,number,number,number];\n    mean?: number;  // Todo add support - |[number,number,number]|[number,number,number,number];\n  };\n}\n/**\n * Describes Tensor and Image configuration to an image data.\n */\nexport interface TensorFromImageOptions {\n  /**\n   * Describes image data format - will be used only in the case of ImageBitMap\n   */\n  bitmapFormat?: ImageFormat;\n  /**\n   * Describes Tensor channels order - can differ from original image\n   */\n  tensorFormat?: ImageFormat;\n  /**\n   * Tensor data type - default is 'float32'\n   */\n  dataType?: 'float32'|'uint8';\n  /**\n   * Tensor channel layout - default is 'NHWC'\n   */\n  tensorLayout?: 'NHWC'|'NCHW';\n  /**\n   * Describes Image Height - Required only in the case of ImageBitMap\n   */\n  height?: number;\n  /**\n   * Describes Image Width - Required only in the case of ImageBitMap\n   */\n  width?: number;\n  /**\n   * Describes resized height - can be accessed via tensor dimensions as well\n   */\n  resizedHeight?: number;\n  /**\n   * Describes resized width - can be accessed via tensor dimensions as well\n   */\n  resizedWidth?: number;\n  /**\n   * Describes normalization parameters to tensor conversion from image data - default values - Bias: 0, Mean: 255\n   */\n  norm?: {\n    bias?: number;  // Todo add support - |[number,number,number]|[number,number,number,number];\n    mean?: number;  // Todo add support - |[number,number,number]|[number,number,number,number];\n  };\n}\nexport interface TensorFactory {\n  /**\n   * create a tensor from image object - HTMLImageElement, ImageData, ImageBitmap, URL\n   *\n   * @param imageData - {ImageData} - composed of: Uint8ClampedArray, width. height - uses known pixel format RGBA\n   * @param options - Optional - Interface describing input image & output tensor -\n   * Input Defaults: RGBA, 3 channels, 0-255, NHWC - Output Defaults: same as input parameters\n   * @returns A promise that resolves to a tensor object\n   */\n  fromImage(imageData: ImageData, options?: TensorFromImageOptions): Promise<Tensor>;\n\n  /**\n   * create a tensor from image object - HTMLImageElement, ImageData, ImageBitmap, URL\n   *\n   * @param imageElement - {HTMLImageElement} - since the data is stored as ImageData no need for format parameter\n   * @param options - Optional - Interface describing input image & output tensor -\n   * Input Defaults: RGBA, 3 channels, 0-255, NHWC - Output Defaults: same as input parameters\n   * @returns A promise that resolves to a tensor object\n   */\n  fromImage(imageElement: HTMLImageElement, options?: TensorFromImageOptions): Promise<Tensor>;\n\n  /**\n   * create a tensor from image object - HTMLImageElement, ImageData, ImageBitmap, URL\n   *\n   * @param url - {string} - Assuming the string is a URL to an image\n   * @param options - Optional - Interface describing input image & output tensor -\n   * Input Defaults: RGBA, 3 channels, 0-255, NHWC - Output Defaults: same as input parameters\n   * @returns A promise that resolves to a tensor object\n   */\n  fromImage(url: string, options?: TensorFromImageOptions): Promise<Tensor>;\n\n  /**\n   * create a tensor from image object - HTMLImageElement, ImageData, ImageBitmap, URL\n   *\n   * @param bitMap - {ImageBitmap} - since the data is stored as ImageData no need for format parameter\n   * @param options - NOT Optional - Interface describing input image & output tensor -\n   * Output Defaults: same as input parameters\n   * @returns A promise that resolves to a tensor object\n   */\n  fromImage(bitmap: ImageBitmap, options: TensorFromImageOptions): Promise<Tensor>;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Tensor = TensorImpl as TensorConstructor;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from './backend';\nimport {resolveBackend} from './backend-impl';\nimport {InferenceSession as InferenceSessionInterface} from './inference-session';\nimport {OnnxValue} from './onnx-value';\nimport {Tensor} from './tensor';\n\ntype SessionOptions = InferenceSessionInterface.SessionOptions;\ntype RunOptions = InferenceSessionInterface.RunOptions;\ntype FeedsType = InferenceSessionInterface.FeedsType;\ntype FetchesType = InferenceSessionInterface.FetchesType;\ntype ReturnType = InferenceSessionInterface.ReturnType;\n\nexport class InferenceSession implements InferenceSessionInterface {\n  private constructor(handler: SessionHandler) {\n    this.handler = handler;\n  }\n  run(feeds: FeedsType, options?: RunOptions): Promise<ReturnType>;\n  run(feeds: FeedsType, fetches: FetchesType, options?: RunOptions): Promise<ReturnType>;\n  async run(feeds: FeedsType, arg1?: FetchesType|RunOptions, arg2?: RunOptions): Promise<ReturnType> {\n    const fetches: {[name: string]: OnnxValue|null} = {};\n    let options: RunOptions = {};\n    // check inputs\n    if (typeof feeds !== 'object' || feeds === null || feeds instanceof Tensor || Array.isArray(feeds)) {\n      throw new TypeError(\n          '\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n    }\n\n    let isFetchesEmpty = true;\n    // determine which override is being used\n    if (typeof arg1 === 'object') {\n      if (arg1 === null) {\n        throw new TypeError('Unexpected argument[1]: cannot be null.');\n      }\n      if (arg1 instanceof Tensor) {\n        throw new TypeError('\\'fetches\\' cannot be a Tensor');\n      }\n\n      if (Array.isArray(arg1)) {\n        if (arg1.length === 0) {\n          throw new TypeError('\\'fetches\\' cannot be an empty array.');\n        }\n        isFetchesEmpty = false;\n        // output names\n        for (const name of arg1) {\n          if (typeof name !== 'string') {\n            throw new TypeError('\\'fetches\\' must be a string array or an object.');\n          }\n          if (this.outputNames.indexOf(name) === -1) {\n            throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n          }\n          fetches[name] = null;\n        }\n\n        if (typeof arg2 === 'object' && arg2 !== null) {\n          options = arg2;\n        } else if (typeof arg2 !== 'undefined') {\n          throw new TypeError('\\'options\\' must be an object.');\n        }\n      } else {\n        // decide whether arg1 is fetches or options\n        // if any output name is present and its value is valid OnnxValue, we consider it fetches\n        let isFetches = false;\n        const arg1Keys = Object.getOwnPropertyNames(arg1);\n        for (const name of this.outputNames) {\n          if (arg1Keys.indexOf(name) !== -1) {\n            const v = (arg1 as InferenceSessionInterface.NullableOnnxValueMapType)[name];\n            if (v === null || v instanceof Tensor) {\n              isFetches = true;\n              isFetchesEmpty = false;\n              fetches[name] = v;\n            }\n          }\n        }\n\n        if (isFetches) {\n          if (typeof arg2 === 'object' && arg2 !== null) {\n            options = arg2;\n          } else if (typeof arg2 !== 'undefined') {\n            throw new TypeError('\\'options\\' must be an object.');\n          }\n        } else {\n          options = arg1 as RunOptions;\n        }\n      }\n    } else if (typeof arg1 !== 'undefined') {\n      throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n    }\n\n    // check if all inputs are in feed\n    for (const name of this.inputNames) {\n      if (typeof feeds[name] === 'undefined') {\n        throw new Error(`input '${name}' is missing in 'feeds'.`);\n      }\n    }\n\n    // if no fetches is specified, we use the full output names list\n    if (isFetchesEmpty) {\n      for (const name of this.outputNames) {\n        fetches[name] = null;\n      }\n    }\n\n    // feeds, fetches and options are prepared\n\n    const results = await this.handler.run(feeds, fetches, options);\n    const returnValue: {[name: string]: OnnxValue} = {};\n    for (const key in results) {\n      if (Object.hasOwnProperty.call(results, key)) {\n        returnValue[key] = new Tensor(results[key].type, results[key].data, results[key].dims);\n      }\n    }\n    return returnValue;\n  }\n\n  static create(path: string, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static create(buffer: ArrayBufferLike, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static create(buffer: ArrayBufferLike, byteOffset: number, byteLength?: number, options?: SessionOptions):\n      Promise<InferenceSessionInterface>;\n  static create(buffer: Uint8Array, options?: SessionOptions): Promise<InferenceSessionInterface>;\n  static async create(\n      arg0: string|ArrayBufferLike|Uint8Array, arg1?: SessionOptions|number, arg2?: number,\n      arg3?: SessionOptions): Promise<InferenceSessionInterface> {\n    // either load from a file or buffer\n    let filePathOrUint8Array: string|Uint8Array;\n    let options: SessionOptions = {};\n\n    if (typeof arg0 === 'string') {\n      filePathOrUint8Array = arg0;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError('\\'options\\' must be an object.');\n      }\n    } else if (arg0 instanceof Uint8Array) {\n      filePathOrUint8Array = arg0;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError('\\'options\\' must be an object.');\n      }\n    } else if (\n        arg0 instanceof ArrayBuffer ||\n        (typeof SharedArrayBuffer !== 'undefined' && arg0 instanceof SharedArrayBuffer)) {\n      const buffer = arg0;\n      let byteOffset = 0;\n      let byteLength = arg0.byteLength;\n      if (typeof arg1 === 'object' && arg1 !== null) {\n        options = arg1;\n      } else if (typeof arg1 === 'number') {\n        byteOffset = arg1;\n        if (!Number.isSafeInteger(byteOffset)) {\n          throw new RangeError('\\'byteOffset\\' must be an integer.');\n        }\n        if (byteOffset < 0 || byteOffset >= buffer.byteLength) {\n          throw new RangeError(`'byteOffset' is out of range [0, ${buffer.byteLength}).`);\n        }\n        byteLength = arg0.byteLength - byteOffset;\n        if (typeof arg2 === 'number') {\n          byteLength = arg2;\n          if (!Number.isSafeInteger(byteLength)) {\n            throw new RangeError('\\'byteLength\\' must be an integer.');\n          }\n          if (byteLength <= 0 || byteOffset + byteLength > buffer.byteLength) {\n            throw new RangeError(`'byteLength' is out of range (0, ${buffer.byteLength - byteOffset}].`);\n          }\n          if (typeof arg3 === 'object' && arg3 !== null) {\n            options = arg3;\n          } else if (typeof arg3 !== 'undefined') {\n            throw new TypeError('\\'options\\' must be an object.');\n          }\n        } else if (typeof arg2 !== 'undefined') {\n          throw new TypeError('\\'byteLength\\' must be a number.');\n        }\n      } else if (typeof arg1 !== 'undefined') {\n        throw new TypeError('\\'options\\' must be an object.');\n      }\n      filePathOrUint8Array = new Uint8Array(buffer, byteOffset, byteLength);\n    } else {\n      throw new TypeError('Unexpected argument[0]: must be \\'path\\' or \\'buffer\\'.');\n    }\n\n    // get backend hints\n    const eps = options.executionProviders || [];\n    const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n    const backend = await resolveBackend(backendHints);\n    const handler = await backend.createSessionHandler(filePathOrUint8Array, options);\n    return new InferenceSession(handler);\n  }\n\n  startProfiling(): void {\n    this.handler.startProfiling();\n  }\n  endProfiling(): void {\n    this.handler.endProfiling();\n  }\n\n  get inputNames(): readonly string[] {\n    return this.handler.inputNames;\n  }\n  get outputNames(): readonly string[] {\n    return this.handler.outputNames;\n  }\n\n  private handler: SessionHandler;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession as InferenceSessionImpl} from './inference-session-impl';\nimport {OnnxValue} from './onnx-value';\n\n/* eslint-disable @typescript-eslint/no-redeclare */\n\nexport declare namespace InferenceSession {\n  // #region input/output types\n\n  type OnnxValueMapType = {readonly [name: string]: OnnxValue};\n  type NullableOnnxValueMapType = {readonly [name: string]: OnnxValue | null};\n\n  /**\n   * A feeds (model inputs) is an object that uses input names as keys and OnnxValue as corresponding values.\n   */\n  type FeedsType = OnnxValueMapType;\n\n  /**\n   * A fetches (model outputs) could be one of the following:\n   *\n   * - Omitted. Use model's output names definition.\n   * - An array of string indicating the output names.\n   * - An object that use output names as keys and OnnxValue or null as corresponding values.\n   *\n   * @remark\n   * different from input argument, in output, OnnxValue is optional. If an OnnxValue is present it will be\n   * used as a pre-allocated value by the inference engine; if omitted, inference engine will allocate buffer\n   * internally.\n   */\n  type FetchesType = readonly string[]|NullableOnnxValueMapType;\n\n  /**\n   * A inferencing return type is an object that uses output names as keys and OnnxValue as corresponding values.\n   */\n  type ReturnType = OnnxValueMapType;\n\n  // #endregion\n\n  // #region session options\n\n  /**\n   * A set of configurations for session behavior.\n   */\n  export interface SessionOptions {\n    /**\n     * An array of execution provider options.\n     *\n     * An execution provider option can be a string indicating the name of the execution provider,\n     * or an object of corresponding type.\n     */\n    executionProviders?: readonly ExecutionProviderConfig[];\n\n    /**\n     * The intra OP threads number.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native).\n     */\n    intraOpNumThreads?: number;\n\n    /**\n     * The inter OP threads number.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native).\n     */\n    interOpNumThreads?: number;\n\n    /**\n     * The optimization level.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    graphOptimizationLevel?: 'disabled'|'basic'|'extended'|'all';\n\n    /**\n     * Whether enable CPU memory arena.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    enableCpuMemArena?: boolean;\n\n    /**\n     * Whether enable memory pattern.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    enableMemPattern?: boolean;\n\n    /**\n     * Execution mode.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    executionMode?: 'sequential'|'parallel';\n\n    /**\n     * Wether enable profiling.\n     *\n     * This setting is a placeholder for a future use.\n     */\n    enableProfiling?: boolean;\n\n    /**\n     * File prefix for profiling.\n     *\n     * This setting is a placeholder for a future use.\n     */\n    profileFilePrefix?: string;\n\n    /**\n     * Log ID.\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logId?: string;\n\n    /**\n     * Log severity level. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/common/logging/severity.h\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logSeverityLevel?: 0|1|2|3|4;\n\n    /**\n     * Log verbosity level.\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    logVerbosityLevel?: number;\n\n    /**\n     * Store configurations for a session. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/session/\n     * onnxruntime_session_options_config_keys.h\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     *\n     * @example\n     * ```js\n     * extra: {\n     *   session: {\n     *     set_denormal_as_zero: \"1\",\n     *     disable_prepacking: \"1\"\n     *   },\n     *   optimization: {\n     *     enable_gelu_approximation: \"1\"\n     *   }\n     * }\n     * ```\n     */\n    extra?: Record<string, unknown>;\n  }\n\n  // #region execution providers\n\n  // Currently, we have the following backends to support execution providers:\n  // Backend Node.js binding: supports 'cpu' and 'cuda'.\n  // Backend WebAssembly: supports 'cpu', 'wasm' and 'xnnpack'.\n  // Backend ONNX.js: supports 'webgl'.\n  interface ExecutionProviderOptionMap {\n    cpu: CpuExecutionProviderOption;\n    cuda: CudaExecutionProviderOption;\n    wasm: WebAssemblyExecutionProviderOption;\n    webgl: WebGLExecutionProviderOption;\n    xnnpack: XnnpackExecutionProviderOption;\n  }\n\n  type ExecutionProviderName = keyof ExecutionProviderOptionMap;\n  type ExecutionProviderConfig =\n      ExecutionProviderOptionMap[ExecutionProviderName]|ExecutionProviderOption|ExecutionProviderName|string;\n\n  export interface ExecutionProviderOption {\n    readonly name: string;\n  }\n  export interface CpuExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'cpu';\n    useArena?: boolean;\n  }\n  export interface CudaExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'cuda';\n    deviceId?: number;\n  }\n  export interface WebAssemblyExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'wasm';\n  }\n  export interface WebGLExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'webgl';\n    // TODO: add flags\n  }\n  export interface XnnpackExecutionProviderOption extends ExecutionProviderOption {\n    readonly name: 'xnnpack';\n  }\n  // #endregion\n\n  // #endregion\n\n  // #region run options\n\n  /**\n   * A set of configurations for inference run behavior\n   */\n  export interface RunOptions {\n    /**\n     * Log severity level. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/common/logging/severity.h\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    logSeverityLevel?: 0|1|2|3|4;\n\n    /**\n     * Log verbosity level.\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    logVerbosityLevel?: number;\n\n    /**\n     * Terminate all incomplete OrtRun calls as soon as possible if true\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     */\n    terminate?: boolean;\n\n    /**\n     * A tag for the Run() calls using this\n     *\n     * This setting is available only in ONNXRuntime (Node.js binding and react-native) or WebAssembly backend\n     */\n    tag?: string;\n\n    /**\n     * Set a single run configuration entry. See\n     * https://github.com/microsoft/onnxruntime/blob/main/include/onnxruntime/core/session/\n     * onnxruntime_run_options_config_keys.h\n     *\n     * This setting is available only in WebAssembly backend. Will support Node.js binding and react-native later\n     *\n     * @example\n     *\n     * ```js\n     * extra: {\n     *   memory: {\n     *     enable_memory_arena_shrinkage: \"1\",\n     *   }\n     * }\n     * ```\n     */\n    extra?: Record<string, unknown>;\n  }\n\n  // #endregion\n\n  // #region value metadata\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  interface ValueMetadata {\n    // TBD\n  }\n\n  // #endregion\n}\n\n/**\n * Represent a runtime instance of an ONNX model.\n */\nexport interface InferenceSession {\n  // #region run()\n\n  /**\n   * Execute the model asynchronously with the given feeds and options.\n   *\n   * @param feeds - Representation of the model input. See type description of `InferenceSession.InputType` for detail.\n   * @param options - Optional. A set of options that controls the behavior of model inference.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding values.\n   */\n  run(feeds: InferenceSession.FeedsType, options?: InferenceSession.RunOptions): Promise<InferenceSession.ReturnType>;\n\n  /**\n   * Execute the model asynchronously with the given feeds, fetches and options.\n   *\n   * @param feeds - Representation of the model input. See type description of `InferenceSession.InputType` for detail.\n   * @param fetches - Representation of the model output. See type description of `InferenceSession.OutputType` for\n   * detail.\n   * @param options - Optional. A set of options that controls the behavior of model inference.\n   * @returns A promise that resolves to a map, which uses output names as keys and OnnxValue as corresponding values.\n   */\n  run(feeds: InferenceSession.FeedsType, fetches: InferenceSession.FetchesType,\n      options?: InferenceSession.RunOptions): Promise<InferenceSession.ReturnType>;\n\n  // #endregion\n\n  // #region profiling\n\n  /**\n   * Start profiling.\n   */\n  startProfiling(): void;\n\n  /**\n   * End profiling.\n   */\n  endProfiling(): void;\n\n  // #endregion\n\n  // #region metadata\n\n  /**\n   * Get input names of the loaded model.\n   */\n  readonly inputNames: readonly string[];\n\n  /**\n   * Get output names of the loaded model.\n   */\n  readonly outputNames: readonly string[];\n\n  // /**\n  //  * Get input metadata of the loaded model.\n  //  */\n  // readonly inputMetadata: ReadonlyArray<Readonly<InferenceSession.ValueMetadata>>;\n\n  // /**\n  //  * Get output metadata of the loaded model.\n  //  */\n  // readonly outputMetadata: ReadonlyArray<Readonly<InferenceSession.ValueMetadata>>;\n\n  // #endregion\n}\n\nexport interface InferenceSessionFactory {\n  // #region create()\n\n  /**\n   * Create a new inference session and load model asynchronously from an ONNX model file.\n   *\n   * @param uri - The URI or file path of the model to load.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(uri: string, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from an array bufer.\n   *\n   * @param buffer - An ArrayBuffer representation of an ONNX model.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(buffer: ArrayBufferLike, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from segment of an array bufer.\n   *\n   * @param buffer - An ArrayBuffer representation of an ONNX model.\n   * @param byteOffset - The beginning of the specified portion of the array buffer.\n   * @param byteLength - The length in bytes of the array buffer.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(buffer: ArrayBufferLike, byteOffset: number, byteLength?: number, options?: InferenceSession.SessionOptions):\n      Promise<InferenceSession>;\n\n  /**\n   * Create a new inference session and load model asynchronously from a Uint8Array.\n   *\n   * @param buffer - A Uint8Array representation of an ONNX model.\n   * @param options - specify configuration for creating a new inference session.\n   * @returns A promise that resolves to an InferenceSession object.\n   */\n  create(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<InferenceSession>;\n\n  // #endregion\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const InferenceSession: InferenceSessionFactory = InferenceSessionImpl;\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"onnxruntime-common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"onnxruntime-common\")) : factory(root[\"ort\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, (__WEBPACK_EXTERNAL_MODULE__1670__) => {\nreturn ","var _scriptDir,t=(_scriptDir=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\"undefined\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(t){function n(){return E.buffer!=D&&z(E.buffer),j}function e(){return E.buffer!=D&&z(E.buffer),F}function r(){return E.buffer!=D&&z(E.buffer),U}function i(){return E.buffer!=D&&z(E.buffer),Y}function a(){return E.buffer!=D&&z(E.buffer),I}var u,o,c;t=t||{},u||(u=void 0!==t?t:{}),u.ready=new Promise((function(t,n){o=t,c=n}));var f,s,l,p,h,m,d=Object.assign({},u),y=\"./this.program\",b=(t,n)=>{throw n},g=\"object\"==typeof window,_=\"function\"==typeof importScripts,v=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,w=u.ENVIRONMENT_IS_PTHREAD||!1,T=\"\";function O(t){return u.locateFile?u.locateFile(t,T):T+t}if(v){let t;T=_?require(\"path\").dirname(T)+\"/\":__dirname+\"/\",m=()=>{h||(p=require(\"fs\"),h=require(\"path\"))},f=function(t,n){return m(),t=h.normalize(t),p.readFileSync(t,n?void 0:\"utf8\")},l=t=>((t=f(t,!0)).buffer||(t=new Uint8Array(t)),t),s=(t,n,e)=>{m(),t=h.normalize(t),p.readFile(t,(function(t,r){t?e(t):n(r.buffer)}))},1<process.argv.length&&(y=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",(function(t){if(!(t instanceof ot))throw t})),process.on(\"unhandledRejection\",(function(t){throw t})),b=(t,n)=>{if(J())throw process.exitCode=t,n;n instanceof ot||x(\"exiting due to exception: \"+n),process.exit(t)},u.inspect=function(){return\"[Emscripten Module object]\"};try{t=require(\"worker_threads\")}catch(t){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),t}global.Worker=t.Worker}else(g||_)&&(_?T=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(T=document.currentScript.src),_scriptDir&&(T=_scriptDir),T=0!==T.indexOf(\"blob:\")?T.substr(0,T.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):\"\",v||(f=t=>{var n=new XMLHttpRequest;return n.open(\"GET\",t,!1),n.send(null),n.responseText},_&&(l=t=>{var n=new XMLHttpRequest;return n.open(\"GET\",t,!1),n.responseType=\"arraybuffer\",n.send(null),new Uint8Array(n.response)}),s=(t,n,e)=>{var r=new XMLHttpRequest;r.open(\"GET\",t,!0),r.responseType=\"arraybuffer\",r.onload=()=>{200==r.status||0==r.status&&r.response?n(r.response):e()},r.onerror=e,r.send(null)}));v&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);var S=console.log.bind(console),A=console.warn.bind(console);v&&(m(),S=t=>p.writeSync(1,t+\"\\n\"),A=t=>p.writeSync(2,t+\"\\n\"));var M,C=u.print||S,x=u.printErr||A;Object.assign(u,d),d=null,u.thisProgram&&(y=u.thisProgram),u.quit&&(b=u.quit),u.wasmBinary&&(M=u.wasmBinary);var R=u.noExitRuntime||!1;\"object\"!=typeof WebAssembly&&rt(\"no native wasm support detected\");var E,k,D,j,F,U,Y,I,W=!1,P=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function H(t,n,e){var r=(n>>>=0)+e;for(e=n;t[e]&&!(e>=r);)++e;if(16<e-n&&t.buffer&&P)return P.decode(t.buffer instanceof SharedArrayBuffer?t.slice(n,e):t.subarray(n,e));for(r=\"\";n<e;){var i=t[n++];if(128&i){var a=63&t[n++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var u=63&t[n++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|u:(7&i)<<18|a<<12|u<<6|63&t[n++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function q(t,n){return(t>>>=0)?H(e(),t,n):\"\"}function B(t,n,e,r){if(!(0<r))return 0;var i=e>>>=0;r=e+r-1;for(var a=0;a<t.length;++a){var u=t.charCodeAt(a);if(55296<=u&&57343>=u&&(u=65536+((1023&u)<<10)|1023&t.charCodeAt(++a)),127>=u){if(e>=r)break;n[e++>>>0]=u}else{if(2047>=u){if(e+1>=r)break;n[e++>>>0]=192|u>>6}else{if(65535>=u){if(e+2>=r)break;n[e++>>>0]=224|u>>12}else{if(e+3>=r)break;n[e++>>>0]=240|u>>18,n[e++>>>0]=128|u>>12&63}n[e++>>>0]=128|u>>6&63}n[e++>>>0]=128|63&u}}return n[e>>>0]=0,e-i}function G(t){for(var n=0,e=0;e<t.length;++e){var r=t.charCodeAt(e);127>=r?n++:2047>=r?n+=2:55296<=r&&57343>=r?(n+=4,++e):n+=3}return n}function z(t){D=t,u.HEAP8=j=new Int8Array(t),u.HEAP16=new Int16Array(t),u.HEAP32=U=new Int32Array(t),u.HEAPU8=F=new Uint8Array(t),u.HEAPU16=new Uint16Array(t),u.HEAPU32=Y=new Uint32Array(t),u.HEAPF32=new Float32Array(t),u.HEAPF64=I=new Float64Array(t)}w&&(D=u.buffer);var N=u.INITIAL_MEMORY||16777216;if(w)E=u.wasmMemory,D=u.buffer;else if(u.wasmMemory)E=u.wasmMemory;else if(!((E=new WebAssembly.Memory({initial:N/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw x(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),v&&console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\"),Error(\"bad memory\");E&&(D=E.buffer),N=D.byteLength,z(D);var V,L=[],X=[],Z=[],$=[];function J(){return R||!1}function Q(){var t=u.preRun.shift();L.unshift(t)}var K,tt=0,nt=null,et=null;function rt(t){throw w?postMessage({cmd:\"onAbort\",arg:t}):u.onAbort&&u.onAbort(t),x(t=\"Aborted(\"+t+\")\"),W=!0,t=new WebAssembly.RuntimeError(t+\". Build with -sASSERTIONS for more info.\"),c(t),t}function it(){return K.startsWith(\"data:application/octet-stream;base64,\")}function at(){var t=K;try{if(t==K&&M)return new Uint8Array(M);if(l)return l(t);throw\"both async and sync fetching of the wasm failed\"}catch(t){rt(t)}}K=\"ort-wasm-threaded.wasm\",it()||(K=O(K));var ut={};function ot(t){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+t+\")\",this.status=t}function ct(t){(t=pt.Vb[t])||rt(),pt.mc(t)}function ft(t){var n=pt.Cc();if(!n)return 6;pt.ac.push(n),pt.Vb[t.Ub]=n,n.Ub=t.Ub;var e={cmd:\"run\",start_routine:t.Ic,arg:t.zc,pthread_ptr:t.Ub};return n.$b=()=>{e.time=performance.now(),n.postMessage(e,t.Nc)},n.loaded&&(n.$b(),delete n.$b),0}function st(t){if(w)return Vt(1,1,t);J()||(pt.oc(),u.onExit&&u.onExit(t),W=!0),b(t,new ot(t))}function lt(t,n){if(!n&&w)throw dt(t),\"unwind\";J()||w||(bn(),ht(Z),yn(0),en[1].length&&rn(1,10),en[2].length&&rn(2,10),pt.oc()),st(t)}var pt={Yb:[],ac:[],qc:[],Vb:{},fc:function(){w&&pt.Ec()},Pc:function(){},Ec:function(){pt.receiveObjectTransfer=pt.Gc,pt.threadInitTLS=pt.pc,pt.setExitStatus=pt.nc,R=!1},nc:function(){},oc:function(){for(var t of Object.values(pt.Vb))pt.mc(t);for(t of pt.Yb)t.terminate();pt.Yb=[]},mc:function(t){var n=t.Ub;delete pt.Vb[n],pt.Yb.push(t),pt.ac.splice(pt.ac.indexOf(t),1),t.Ub=0,Tn(n)},Gc:function(){},pc:function(){pt.qc.forEach((t=>t()))},Fc:function(t,n){t.onmessage=e=>{var r=(e=e.data).cmd;if(t.Ub&&(pt.Bc=t.Ub),e.targetThread&&e.targetThread!=hn()){var i=pt.Vb[e.Qc];i?i.postMessage(e,e.transferList):x('Internal error! Worker sent a message \"'+r+'\" to target pthread '+e.targetThread+\", but that thread no longer exists!\")}else\"processProxyingQueue\"===r?Ht(e.queue):\"spawnThread\"===r?ft(e):\"cleanupThread\"===r?ct(e.thread):\"killThread\"===r?(e=e.thread,r=pt.Vb[e],delete pt.Vb[e],r.terminate(),Tn(e),pt.ac.splice(pt.ac.indexOf(r),1),r.Ub=0):\"cancelThread\"===r?pt.Vb[e.thread].postMessage({cmd:\"cancel\"}):\"loaded\"===r?(t.loaded=!0,n&&n(t),t.$b&&(t.$b(),delete t.$b)):\"print\"===r?C(\"Thread \"+e.threadId+\": \"+e.text):\"printErr\"===r?x(\"Thread \"+e.threadId+\": \"+e.text):\"alert\"===r?alert(\"Thread \"+e.threadId+\": \"+e.text):\"setimmediate\"===e.target?t.postMessage(e):\"onAbort\"===r?u.onAbort&&u.onAbort(e.arg):r&&x(\"worker sent an unknown command \"+r);pt.Bc=void 0},t.onerror=t=>{throw x(\"worker sent an error! \"+t.filename+\":\"+t.lineno+\": \"+t.message),t},v&&(t.on(\"message\",(function(n){t.onmessage({data:n})})),t.on(\"error\",(function(n){t.onerror(n)})),t.on(\"detachedExit\",(function(){}))),t.postMessage({cmd:\"load\",urlOrBlob:u.mainScriptUrlOrBlob||_scriptDir,wasmMemory:E,wasmModule:k})},yc:function(){var t=O(\"ort-wasm-threaded.worker.js\");pt.Yb.push(new Worker(t))},Cc:function(){return 0==pt.Yb.length&&(pt.yc(),pt.Fc(pt.Yb[0])),pt.Yb.pop()}};function ht(t){for(;0<t.length;)t.shift()(u)}function mt(t){var n=Mn();return t=t(),Cn(n),t}function dt(t){if(w)return Vt(2,0,t);try{lt(t)}catch(t){t instanceof ot||\"unwind\"==t||b(1,t)}}u.PThread=pt,u.establishStackSpace=function(){var t=hn(),n=r()[t+44>>2>>>0];t=r()[t+48>>2>>>0],An(n,n-t),Cn(n)};var yt=[];function bt(t){var n=yt[t];return n||(t>=yt.length&&(yt.length=t+1),yt[t]=n=V.get(t)),n}u.invokeEntryPoint=function(t,n){t=bt(t)(n),J()?pt.nc(t):On(t)};var gt,_t,vt=[],wt=0,Tt=0;function Ot(t){this.Zb=t,this.Sb=t-24,this.xc=function(t){i()[this.Sb+4>>2>>>0]=t},this.bc=function(){return i()[this.Sb+4>>2>>>0]},this.wc=function(t){i()[this.Sb+8>>2>>>0]=t},this.Dc=function(){return i()[this.Sb+8>>2>>>0]},this.rc=function(){r()[this.Sb>>2>>>0]=0},this.hc=function(t){t=t?1:0,n()[this.Sb+12>>0>>>0]=t},this.uc=function(){return 0!=n()[this.Sb+12>>0>>>0]},this.ic=function(t){t=t?1:0,n()[this.Sb+13>>0>>>0]=t},this.kc=function(){return 0!=n()[this.Sb+13>>0>>>0]},this.fc=function(t,n){this.cc(0),this.xc(t),this.wc(n),this.rc(),this.hc(!1),this.ic(!1)},this.sc=function(){Atomics.add(r(),this.Sb>>2,1)},this.Hc=function(){return 1===Atomics.sub(r(),this.Sb>>2,1)},this.cc=function(t){i()[this.Sb+16>>2>>>0]=t},this.tc=function(){return i()[this.Sb+16>>2>>>0]},this.vc=function(){if(En(this.bc()))return i()[this.Zb>>2>>>0];var t=this.tc();return 0!==t?t:this.Zb}}function St(t){return dn(new Ot(t).Sb)}function At(t,n,e,r){return w?Vt(3,1,t,n,e,r):Mt(t,n,e,r)}function Mt(t,n,e,r){if(\"undefined\"==typeof SharedArrayBuffer)return x(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;var i=[];return w&&0===i.length?At(t,n,e,r):(t={Ic:e,Ub:t,zc:r,Nc:i},w?(t.Oc=\"spawnThread\",postMessage(t,i),0):ft(t))}function Ct(t,n,e){return w?Vt(4,1,t,n,e):0}function xt(t,n){if(w)return Vt(5,1,t,n)}function Rt(t,n){if(w)return Vt(6,1,t,n)}function Et(t,n,e){if(w)return Vt(7,1,t,n,e)}function kt(t,n,e){return w?Vt(8,1,t,n,e):0}function Dt(t,n){if(w)return Vt(9,1,t,n)}function jt(t,n,e){if(w)return Vt(10,1,t,n,e)}function Ft(t,n,e,r){if(w)return Vt(11,1,t,n,e,r)}function Ut(t,n,e,r){if(w)return Vt(12,1,t,n,e,r)}function Yt(t,n,e,r){if(w)return Vt(13,1,t,n,e,r)}function It(t){if(w)return Vt(14,1,t)}function Wt(t,n){if(w)return Vt(15,1,t,n)}function Pt(t,n,e){if(w)return Vt(16,1,t,n,e)}function Ht(t){Atomics.store(r(),t>>2,1),hn()&&wn(t),Atomics.compareExchange(r(),t>>2,1,0)}function qt(t){return i()[t>>>2]+4294967296*r()[t+4>>>2]}function Bt(t,n,e,r,i,a){return w?Vt(17,1,t,n,e,r,i,a):-52}function Gt(t,n,e,r,i,a){if(w)return Vt(18,1,t,n,e,r,i,a)}function zt(t){var e=G(t)+1,r=mn(e);return r&&B(t,n(),r,e),r}function Nt(t,n,e){function a(t){return(t=t.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?t[1]:\"GMT\"}if(w)return Vt(19,1,t,n,e);var u=(new Date).getFullYear(),o=new Date(u,0,1),c=new Date(u,6,1);u=o.getTimezoneOffset();var f=c.getTimezoneOffset(),s=Math.max(u,f);r()[t>>2>>>0]=60*s,r()[n>>2>>>0]=Number(u!=f),t=a(o),n=a(c),t=zt(t),n=zt(n),f<u?(i()[e>>2>>>0]=t,i()[e+4>>2>>>0]=n):(i()[e>>2>>>0]=n,i()[e+4>>2>>>0]=t)}function Vt(t,n){var e=arguments.length-2,r=arguments;return mt((()=>{for(var i=xn(8*e),u=i>>3,o=0;o<e;o++){var c=r[2+o];a()[u+o>>>0]=c}return vn(t,e,i,n)}))}u.executeNotifiedProxyingQueue=Ht,_t=v?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:w?()=>performance.now()-u.__performance_now_clock_drift:()=>performance.now();var Lt,Xt=[],Zt={};function $t(){if(!Lt){var t,n={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:y||\"./this.program\"};for(t in Zt)void 0===Zt[t]?delete n[t]:n[t]=Zt[t];var e=[];for(t in n)e.push(t+\"=\"+n[t]);Lt=e}return Lt}function Jt(t,e){if(w)return Vt(20,1,t,e);var r=0;return $t().forEach((function(a,u){var o=e+r;for(u=i()[t+4*u>>2>>>0]=o,o=0;o<a.length;++o)n()[u++>>0>>>0]=a.charCodeAt(o);n()[u>>0>>>0]=0,r+=a.length+1})),0}function Qt(t,n){if(w)return Vt(21,1,t,n);var e=$t();i()[t>>2>>>0]=e.length;var r=0;return e.forEach((function(t){r+=t.length+1})),i()[n>>2>>>0]=r,0}function Kt(t){return w?Vt(22,1,t):52}function tn(t,n,e,r){return w?Vt(23,1,t,n,e,r):52}function nn(t,n,e,r,i){return w?Vt(24,1,t,n,e,r,i):70}var en=[null,[],[]];function rn(t,n){var e=en[t];0===n||10===n?((1===t?C:x)(H(e,0)),e.length=0):e.push(n)}function an(t,n,r,a){if(w)return Vt(25,1,t,n,r,a);for(var u=0,o=0;o<r;o++){var c=i()[n>>2>>>0],f=i()[n+4>>2>>>0];n+=8;for(var s=0;s<f;s++)rn(t,e()[c+s>>>0]);u+=f}return i()[a>>2>>>0]=u,0}var un=0;function on(t){return 0==t%4&&(0!=t%100||0==t%400)}var cn=[31,29,31,30,31,30,31,31,30,31,30,31],fn=[31,28,31,30,31,30,31,31,30,31,30,31];function sn(t,e,i,a){function u(t,n,e){for(t=\"number\"==typeof t?t.toString():t||\"\";t.length<n;)t=e[0]+t;return t}function o(t,n){return u(t,n,\"0\")}function c(t,n){function e(t){return 0>t?-1:0<t?1:0}var r;return 0===(r=e(t.getFullYear()-n.getFullYear()))&&0===(r=e(t.getMonth()-n.getMonth()))&&(r=e(t.getDate()-n.getDate())),r}function f(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function s(t){var n=t.Wb;for(t=new Date(new Date(t.Xb+1900,0,1).getTime());0<n;){var e=t.getMonth(),r=(on(t.getFullYear())?cn:fn)[e];if(!(n>r-t.getDate())){t.setDate(t.getDate()+n);break}n-=r-t.getDate()+1,t.setDate(1),11>e?t.setMonth(e+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return e=new Date(t.getFullYear()+1,0,4),n=f(new Date(t.getFullYear(),0,4)),e=f(e),0>=c(n,t)?0>=c(e,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var l=r()[a+40>>2>>>0];for(var p in a={Lc:r()[a>>2>>>0],Kc:r()[a+4>>2>>>0],dc:r()[a+8>>2>>>0],jc:r()[a+12>>2>>>0],ec:r()[a+16>>2>>>0],Xb:r()[a+20>>2>>>0],Tb:r()[a+24>>2>>>0],Wb:r()[a+28>>2>>>0],Rc:r()[a+32>>2>>>0],Jc:r()[a+36>>2>>>0],Mc:l?q(l):\"\"},i=q(i),l={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"})i=i.replace(new RegExp(p,\"g\"),l[p]);var h=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),m=\"January February March April May June July August September October November December\".split(\" \");for(p in l={\"%a\":function(t){return h[t.Tb].substring(0,3)},\"%A\":function(t){return h[t.Tb]},\"%b\":function(t){return m[t.ec].substring(0,3)},\"%B\":function(t){return m[t.ec]},\"%C\":function(t){return o((t.Xb+1900)/100|0,2)},\"%d\":function(t){return o(t.jc,2)},\"%e\":function(t){return u(t.jc,2,\" \")},\"%g\":function(t){return s(t).toString().substring(2)},\"%G\":function(t){return s(t)},\"%H\":function(t){return o(t.dc,2)},\"%I\":function(t){return 0==(t=t.dc)?t=12:12<t&&(t-=12),o(t,2)},\"%j\":function(t){for(var n=0,e=0;e<=t.ec-1;n+=(on(t.Xb+1900)?cn:fn)[e++]);return o(t.jc+n,3)},\"%m\":function(t){return o(t.ec+1,2)},\"%M\":function(t){return o(t.Kc,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(t){return 0<=t.dc&&12>t.dc?\"AM\":\"PM\"},\"%S\":function(t){return o(t.Lc,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(t){return t.Tb||7},\"%U\":function(t){return o(Math.floor((t.Wb+7-t.Tb)/7),2)},\"%V\":function(t){var n=Math.floor((t.Wb+7-(t.Tb+6)%7)/7);if(2>=(t.Tb+371-t.Wb-2)%7&&n++,n)53==n&&(4==(e=(t.Tb+371-t.Wb)%7)||3==e&&on(t.Xb)||(n=1));else{n=52;var e=(t.Tb+7-t.Wb-1)%7;(4==e||5==e&&on(t.Xb%400-1))&&n++}return o(n,2)},\"%w\":function(t){return t.Tb},\"%W\":function(t){return o(Math.floor((t.Wb+7-(t.Tb+6)%7)/7),2)},\"%y\":function(t){return(t.Xb+1900).toString().substring(2)},\"%Y\":function(t){return t.Xb+1900},\"%z\":function(t){var n=0<=(t=t.Jc);return t=Math.abs(t)/60,(n?\"+\":\"-\")+String(\"0000\"+(t/60*100+t%60)).slice(-4)},\"%Z\":function(t){return t.Mc},\"%%\":function(){return\"%\"}},i=i.replace(/%%/g,\"\\0\\0\"),l)i.includes(p)&&(i=i.replace(new RegExp(p,\"g\"),l[p](a)));return p=function(t){var n=Array(G(t)+1);return B(t,n,0,n.length),n}(i=i.replace(/\\0\\0/g,\"%\")),p.length>e?0:(function(t,e){n().set(t,e>>>0)}(p,t),p.length-1)}pt.fc();var ln=[null,st,dt,At,Ct,xt,Rt,Et,kt,Dt,jt,Ft,Ut,Yt,It,Wt,Pt,Bt,Gt,Nt,Jt,Qt,Kt,tn,nn,an],pn={b:function(t){return mn(t+24)+24},n:function(t){return(t=new Ot(t)).uc()||(t.hc(!0),wt--),t.ic(!1),vt.push(t),t.sc(),t.vc()},ma:function(t){throw x(\"Unexpected exception thrown, this is not properly supported - aborting\"),W=!0,t},x:function(){Sn(0);var t=vt.pop();if(t.Hc()&&!t.kc()){var n=t.Dc();n&&bt(n)(t.Zb),St(t.Zb)}Tt=0},e:function(){var t=Tt;if(!t)return un=0;var n=new Ot(t);n.cc(t);var e=n.bc();if(!e)return un=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(Rn(a,e,n.Sb+16))return un=a,t}return un=e,t},l:function(){var t=Tt;if(!t)return un=0;var n=new Ot(t);n.cc(t);var e=n.bc();if(!e)return un=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(Rn(a,e,n.Sb+16))return un=a,t}return un=e,t},h:function(){var t=Tt;if(!t)return un=0;var n=new Ot(t);n.cc(t);var e=n.bc();if(!e)return un=0,t;for(var r=Array.prototype.slice.call(arguments),i=0;i<r.length;i++){var a=r[i];if(0===a||a===e)break;if(Rn(a,e,n.Sb+16))return un=a,t}return un=e,t},t:St,M:function(){var t=vt.pop();t||rt(\"no exception to throw\");var n=t.Zb;throw t.kc()||(vt.push(t),t.ic(!0),t.hc(!1),wt++),Tt=n,n},c:function(t,n,e){throw new Ot(t).fc(n,e),Tt=t,wt++,t},pa:function(){return wt},Fa:function(t){gn(t,!_,1,!g),pt.pc()},T:function(t){w?postMessage({cmd:\"cleanupThread\",thread:t}):ct(t)},xa:Mt,j:function(t){throw Tt||(Tt=t),t},H:Ct,Ma:xt,ua:Rt,wa:Et,oa:kt,Ka:Dt,Ca:jt,Ja:Ft,V:Ut,va:Yt,sa:It,La:Wt,ta:Pt,Ta:function(){},X:function(){rt(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Ua:function(){rt(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},W:function(){return Date.now()},ya:function(){return 2097152},Oa:function(){return!0},za:function(t,n,e,r){if(t==n)setTimeout((()=>Ht(r)));else if(w)postMessage({targetThread:t,cmd:\"processProxyingQueue\",queue:r});else{if(!(t=pt.Vb[t]))return;t.postMessage({cmd:\"processProxyingQueue\",queue:r})}return 1},Ea:function(){return-1},Pa:function(t,n){t=new Date(1e3*qt(t)),r()[n>>2>>>0]=t.getUTCSeconds(),r()[n+4>>2>>>0]=t.getUTCMinutes(),r()[n+8>>2>>>0]=t.getUTCHours(),r()[n+12>>2>>>0]=t.getUTCDate(),r()[n+16>>2>>>0]=t.getUTCMonth(),r()[n+20>>2>>>0]=t.getUTCFullYear()-1900,r()[n+24>>2>>>0]=t.getUTCDay(),t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,r()[n+28>>2>>>0]=t},Qa:function(t,n){t=new Date(1e3*qt(t)),r()[n>>2>>>0]=t.getSeconds(),r()[n+4>>2>>>0]=t.getMinutes(),r()[n+8>>2>>>0]=t.getHours(),r()[n+12>>2>>>0]=t.getDate(),r()[n+16>>2>>>0]=t.getMonth(),r()[n+20>>2>>>0]=t.getFullYear()-1900,r()[n+24>>2>>>0]=t.getDay();var e=new Date(t.getFullYear(),0,1),i=(t.getTime()-e.getTime())/864e5|0;r()[n+28>>2>>>0]=i,r()[n+36>>2>>>0]=-60*t.getTimezoneOffset(),i=new Date(t.getFullYear(),6,1).getTimezoneOffset(),t=0|(i!=(e=e.getTimezoneOffset())&&t.getTimezoneOffset()==Math.min(e,i)),r()[n+32>>2>>>0]=t},Ra:function(t){var n=new Date(r()[t+20>>2>>>0]+1900,r()[t+16>>2>>>0],r()[t+12>>2>>>0],r()[t+8>>2>>>0],r()[t+4>>2>>>0],r()[t>>2>>>0],0),e=r()[t+32>>2>>>0],i=n.getTimezoneOffset(),a=new Date(n.getFullYear(),0,1),u=new Date(n.getFullYear(),6,1).getTimezoneOffset(),o=a.getTimezoneOffset(),c=Math.min(o,u);return 0>e?r()[t+32>>2>>>0]=Number(u!=o&&c==i):0<e!=(c==i)&&(u=Math.max(o,u),n.setTime(n.getTime()+6e4*((0<e?c:u)-i))),r()[t+24>>2>>>0]=n.getDay(),e=(n.getTime()-a.getTime())/864e5|0,r()[t+28>>2>>>0]=e,r()[t>>2>>>0]=n.getSeconds(),r()[t+4>>2>>>0]=n.getMinutes(),r()[t+8>>2>>>0]=n.getHours(),r()[t+12>>2>>>0]=n.getDate(),r()[t+16>>2>>>0]=n.getMonth(),n.getTime()/1e3|0},Aa:Bt,Ba:Gt,Sa:function t(n,e,r){t.Ac||(t.Ac=!0,Nt(n,e,r))},y:function(){rt(\"\")},U:function(){if(!v&&!_){var t=\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\";gt||(gt={}),gt[t]||(gt[t]=1,v&&(t=\"warning: \"+t),x(t))}},ra:function(){return 4294901760},B:_t,Ia:function(t,n,r){e().copyWithin(t>>>0,n>>>0,n+r>>>0)},F:function(){return v?require(\"os\").cpus().length:navigator.hardwareConcurrency},Da:function(t,n,e){Xt.length=n,e>>=3;for(var r=0;r<n;r++)Xt[r]=a()[e+r>>>0];return(0>t?ut[-t-1]:ln[t]).apply(null,Xt)},qa:function(t){var n=e().length;if((t>>>=0)<=n||4294901760<t)return!1;for(var r=1;4>=r;r*=2){var i=n*(1+.2/r);i=Math.min(i,t+100663296);var a=Math;i=Math.max(t,i),a=a.min.call(a,4294901760,i+(65536-i%65536)%65536);t:{try{E.grow(a-D.byteLength+65535>>>16),z(E.buffer);var u=1;break t}catch(t){}u=void 0}if(u)return!0}return!1},Na:function(){throw\"unwind\"},Ga:Jt,Ha:Qt,J:lt,I:Kt,S:tn,ga:nn,R:an,d:function(){return un},na:function t(e,r){t.lc||(t.lc=function(){if(\"object\"==typeof crypto&&\"function\"==typeof crypto.getRandomValues){var t=new Uint8Array(1);return()=>(crypto.getRandomValues(t),t[0])}if(v)try{var n=require(\"crypto\");return()=>n.randomBytes(1)[0]}catch(t){}return()=>rt(\"randomDevice\")}());for(var i=0;i<r;i++)n()[e+i>>0>>>0]=t.lc();return 0},ia:function(t,n,e){var r=Mn();try{return bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},ja:function(t,n,e){var r=Mn();try{return bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},K:function(t){var n=Mn();try{return bt(t)()}catch(t){if(Cn(n),t!==t+0)throw t;Sn(1,0)}},f:function(t,n){var e=Mn();try{return bt(t)(n)}catch(t){if(Cn(e),t!==t+0)throw t;Sn(1,0)}},P:function(t,n,e){var r=Mn();try{return bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},Q:function(t,n,e){var r=Mn();try{return bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},k:function(t,n,e){var r=Mn();try{return bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},p:function(t,n,e,r){var i=Mn();try{return bt(t)(n,e,r)}catch(t){if(Cn(i),t!==t+0)throw t;Sn(1,0)}},q:function(t,n,e,r,i){var a=Mn();try{return bt(t)(n,e,r,i)}catch(t){if(Cn(a),t!==t+0)throw t;Sn(1,0)}},N:function(t,n,e,r,i,a){var u=Mn();try{return bt(t)(n,e,r,i,a)}catch(t){if(Cn(u),t!==t+0)throw t;Sn(1,0)}},s:function(t,n,e,r,i,a){var u=Mn();try{return bt(t)(n,e,r,i,a)}catch(t){if(Cn(u),t!==t+0)throw t;Sn(1,0)}},w:function(t,n,e,r,i,a,u){var o=Mn();try{return bt(t)(n,e,r,i,a,u)}catch(t){if(Cn(o),t!==t+0)throw t;Sn(1,0)}},L:function(t,n,e,r,i,a,u,o){var c=Mn();try{return bt(t)(n,e,r,i,a,u,o)}catch(t){if(Cn(c),t!==t+0)throw t;Sn(1,0)}},E:function(t,n,e,r,i,a,u,o,c,f,s,l){var p=Mn();try{return bt(t)(n,e,r,i,a,u,o,c,f,s,l)}catch(t){if(Cn(p),t!==t+0)throw t;Sn(1,0)}},aa:function(t,n,e,r,i,a,u,o){var c=Mn();try{return Pn(t,n,e,r,i,a,u,o)}catch(t){if(Cn(c),t!==t+0)throw t;Sn(1,0)}},_:function(t,n,e,r,i,a,u){var o=Mn();try{return Dn(t,n,e,r,i,a,u)}catch(t){if(Cn(o),t!==t+0)throw t;Sn(1,0)}},Z:function(t,n,e,r,i){var a=Mn();try{return Hn(t,n,e,r,i)}catch(t){if(Cn(a),t!==t+0)throw t;Sn(1,0)}},ca:function(t,n,e,r){var i=Mn();try{return In(t,n,e,r)}catch(t){if(Cn(i),t!==t+0)throw t;Sn(1,0)}},$:function(t){var n=Mn();try{return kn(t)}catch(t){if(Cn(n),t!==t+0)throw t;Sn(1,0)}},ba:function(t,n){var e=Mn();try{return Wn(t,n)}catch(t){if(Cn(e),t!==t+0)throw t;Sn(1,0)}},Y:function(t,n,e){var r=Mn();try{return jn(t,n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},g:function(t){var n=Mn();try{bt(t)()}catch(t){if(Cn(n),t!==t+0)throw t;Sn(1,0)}},r:function(t,n){var e=Mn();try{bt(t)(n)}catch(t){if(Cn(e),t!==t+0)throw t;Sn(1,0)}},i:function(t,n,e){var r=Mn();try{bt(t)(n,e)}catch(t){if(Cn(r),t!==t+0)throw t;Sn(1,0)}},ha:function(t,n,e,r){var i=Mn();try{bt(t)(n,e,r)}catch(t){if(Cn(i),t!==t+0)throw t;Sn(1,0)}},m:function(t,n,e,r){var i=Mn();try{bt(t)(n,e,r)}catch(t){if(Cn(i),t!==t+0)throw t;Sn(1,0)}},v:function(t,n,e,r,i){var a=Mn();try{bt(t)(n,e,r,i)}catch(t){if(Cn(a),t!==t+0)throw t;Sn(1,0)}},u:function(t,n,e,r,i,a){var u=Mn();try{bt(t)(n,e,r,i,a)}catch(t){if(Cn(u),t!==t+0)throw t;Sn(1,0)}},O:function(t,n,e,r,i,a,u){var o=Mn();try{bt(t)(n,e,r,i,a,u)}catch(t){if(Cn(o),t!==t+0)throw t;Sn(1,0)}},A:function(t,n,e,r,i,a,u,o){var c=Mn();try{bt(t)(n,e,r,i,a,u,o)}catch(t){if(Cn(c),t!==t+0)throw t;Sn(1,0)}},ka:function(t,n,e,r,i,a,u,o,c){var f=Mn();try{bt(t)(n,e,r,i,a,u,o,c)}catch(t){if(Cn(f),t!==t+0)throw t;Sn(1,0)}},C:function(t,n,e,r,i,a,u,o,c,f,s){var l=Mn();try{bt(t)(n,e,r,i,a,u,o,c,f,s)}catch(t){if(Cn(l),t!==t+0)throw t;Sn(1,0)}},D:function(t,n,e,r,i,a,u,o,c,f,s,l,p,h,m,d){var y=Mn();try{bt(t)(n,e,r,i,a,u,o,c,f,s,l,p,h,m,d)}catch(t){if(Cn(y),t!==t+0)throw t;Sn(1,0)}},fa:function(t,n,e,r,i,a,u,o){var c=Mn();try{Fn(t,n,e,r,i,a,u,o)}catch(t){if(Cn(c),t!==t+0)throw t;Sn(1,0)}},da:function(t,n,e,r,i,a,u,o,c,f,s,l){var p=Mn();try{Yn(t,n,e,r,i,a,u,o,c,f,s,l)}catch(t){if(Cn(p),t!==t+0)throw t;Sn(1,0)}},ea:function(t,n,e,r,i,a){var u=Mn();try{Un(t,n,e,r,i,a)}catch(t){if(Cn(u),t!==t+0)throw t;Sn(1,0)}},o:function(t){return t},a:E||u.wasmMemory,G:function(t){un=t},la:sn,z:function(t,n,e,r){return sn(t,n,e,r)}};!function(){function t(t,n){u.asm=t.exports,pt.qc.push(u.asm.sb),V=u.asm.ub,X.unshift(u.asm.Va),k=n,w||(tt--,u.monitorRunDependencies&&u.monitorRunDependencies(tt),0==tt&&(null!==nt&&(clearInterval(nt),nt=null),et&&(t=et,et=null,t())))}function n(n){t(n.instance,n.module)}function e(t){return function(){if(!M&&(g||_)){if(\"function\"==typeof fetch&&!K.startsWith(\"file://\"))return fetch(K,{credentials:\"same-origin\"}).then((function(t){if(!t.ok)throw\"failed to load wasm binary file at '\"+K+\"'\";return t.arrayBuffer()})).catch((function(){return at()}));if(s)return new Promise((function(t,n){s(K,(function(n){t(new Uint8Array(n))}),n)}))}return Promise.resolve().then((function(){return at()}))}().then((function(t){return WebAssembly.instantiate(t,r)})).then((function(t){return t})).then(t,(function(t){x(\"failed to asynchronously prepare wasm: \"+t),rt(t)}))}var r={a:pn};if(w||(tt++,u.monitorRunDependencies&&u.monitorRunDependencies(tt)),u.instantiateWasm)try{return u.instantiateWasm(r,t)}catch(t){return x(\"Module.instantiateWasm callback failed with error: \"+t),!1}(M||\"function\"!=typeof WebAssembly.instantiateStreaming||it()||K.startsWith(\"file://\")||v||\"function\"!=typeof fetch?e(n):fetch(K,{credentials:\"same-origin\"}).then((function(t){return WebAssembly.instantiateStreaming(t,r).then(n,(function(t){return x(\"wasm streaming compile failed: \"+t),x(\"falling back to ArrayBuffer instantiation\"),e(n)}))}))).catch(c)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.Va).apply(null,arguments)},u._OrtInit=function(){return(u._OrtInit=u.asm.Wa).apply(null,arguments)},u._OrtCreateSessionOptions=function(){return(u._OrtCreateSessionOptions=u.asm.Xa).apply(null,arguments)},u._OrtAppendExecutionProvider=function(){return(u._OrtAppendExecutionProvider=u.asm.Ya).apply(null,arguments)},u._OrtAddSessionConfigEntry=function(){return(u._OrtAddSessionConfigEntry=u.asm.Za).apply(null,arguments)},u._OrtReleaseSessionOptions=function(){return(u._OrtReleaseSessionOptions=u.asm._a).apply(null,arguments)},u._OrtCreateSession=function(){return(u._OrtCreateSession=u.asm.$a).apply(null,arguments)},u._OrtReleaseSession=function(){return(u._OrtReleaseSession=u.asm.ab).apply(null,arguments)},u._OrtGetInputCount=function(){return(u._OrtGetInputCount=u.asm.bb).apply(null,arguments)},u._OrtGetOutputCount=function(){return(u._OrtGetOutputCount=u.asm.cb).apply(null,arguments)},u._OrtGetInputName=function(){return(u._OrtGetInputName=u.asm.db).apply(null,arguments)},u._OrtGetOutputName=function(){return(u._OrtGetOutputName=u.asm.eb).apply(null,arguments)},u._OrtFree=function(){return(u._OrtFree=u.asm.fb).apply(null,arguments)},u._OrtCreateTensor=function(){return(u._OrtCreateTensor=u.asm.gb).apply(null,arguments)},u._OrtGetTensorData=function(){return(u._OrtGetTensorData=u.asm.hb).apply(null,arguments)},u._OrtReleaseTensor=function(){return(u._OrtReleaseTensor=u.asm.ib).apply(null,arguments)},u._OrtCreateRunOptions=function(){return(u._OrtCreateRunOptions=u.asm.jb).apply(null,arguments)},u._OrtAddRunConfigEntry=function(){return(u._OrtAddRunConfigEntry=u.asm.kb).apply(null,arguments)},u._OrtReleaseRunOptions=function(){return(u._OrtReleaseRunOptions=u.asm.lb).apply(null,arguments)},u._OrtRun=function(){return(u._OrtRun=u.asm.mb).apply(null,arguments)},u._OrtEndProfiling=function(){return(u._OrtEndProfiling=u.asm.nb).apply(null,arguments)};var hn=u._pthread_self=function(){return(hn=u._pthread_self=u.asm.ob).apply(null,arguments)},mn=u._malloc=function(){return(mn=u._malloc=u.asm.pb).apply(null,arguments)},dn=u._free=function(){return(dn=u._free=u.asm.qb).apply(null,arguments)},yn=u._fflush=function(){return(yn=u._fflush=u.asm.rb).apply(null,arguments)};u.__emscripten_tls_init=function(){return(u.__emscripten_tls_init=u.asm.sb).apply(null,arguments)};var bn=u.___funcs_on_exit=function(){return(bn=u.___funcs_on_exit=u.asm.tb).apply(null,arguments)},gn=u.__emscripten_thread_init=function(){return(gn=u.__emscripten_thread_init=u.asm.vb).apply(null,arguments)};u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm.wb).apply(null,arguments)};var _n,vn=u._emscripten_run_in_main_runtime_thread_js=function(){return(vn=u._emscripten_run_in_main_runtime_thread_js=u.asm.xb).apply(null,arguments)},wn=u.__emscripten_proxy_execute_task_queue=function(){return(wn=u.__emscripten_proxy_execute_task_queue=u.asm.yb).apply(null,arguments)},Tn=u.__emscripten_thread_free_data=function(){return(Tn=u.__emscripten_thread_free_data=u.asm.zb).apply(null,arguments)},On=u.__emscripten_thread_exit=function(){return(On=u.__emscripten_thread_exit=u.asm.Ab).apply(null,arguments)},Sn=u._setThrew=function(){return(Sn=u._setThrew=u.asm.Bb).apply(null,arguments)},An=u._emscripten_stack_set_limits=function(){return(An=u._emscripten_stack_set_limits=u.asm.Cb).apply(null,arguments)},Mn=u.stackSave=function(){return(Mn=u.stackSave=u.asm.Db).apply(null,arguments)},Cn=u.stackRestore=function(){return(Cn=u.stackRestore=u.asm.Eb).apply(null,arguments)},xn=u.stackAlloc=function(){return(xn=u.stackAlloc=u.asm.Fb).apply(null,arguments)},Rn=u.___cxa_can_catch=function(){return(Rn=u.___cxa_can_catch=u.asm.Gb).apply(null,arguments)},En=u.___cxa_is_pointer_type=function(){return(En=u.___cxa_is_pointer_type=u.asm.Hb).apply(null,arguments)},kn=u.dynCall_j=function(){return(kn=u.dynCall_j=u.asm.Ib).apply(null,arguments)},Dn=u.dynCall_iiiiij=function(){return(Dn=u.dynCall_iiiiij=u.asm.Jb).apply(null,arguments)},jn=u.dynCall_jii=function(){return(jn=u.dynCall_jii=u.asm.Kb).apply(null,arguments)},Fn=u.dynCall_viiiiij=function(){return(Fn=u.dynCall_viiiiij=u.asm.Lb).apply(null,arguments)},Un=u.dynCall_vjji=function(){return(Un=u.dynCall_vjji=u.asm.Mb).apply(null,arguments)},Yn=u.dynCall_viiijjjii=function(){return(Yn=u.dynCall_viiijjjii=u.asm.Nb).apply(null,arguments)},In=u.dynCall_iij=function(){return(In=u.dynCall_iij=u.asm.Ob).apply(null,arguments)},Wn=u.dynCall_ji=function(){return(Wn=u.dynCall_ji=u.asm.Pb).apply(null,arguments)},Pn=u.dynCall_iiiiiij=function(){return(Pn=u.dynCall_iiiiiij=u.asm.Qb).apply(null,arguments)},Hn=u.dynCall_iiij=function(){return(Hn=u.dynCall_iiij=u.asm.Rb).apply(null,arguments)};function qn(){function t(){if(!_n&&(_n=!0,u.calledRun=!0,!W)&&(w||ht(X),o(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),!w)){if(u.postRun)for(\"function\"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;){var t=u.postRun.shift();$.unshift(t)}ht($)}}if(!(0<tt))if(w)o(u),w||ht(X),postMessage({cmd:\"loaded\"});else{if(u.preRun)for(\"function\"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)Q();ht(L),0<tt||(u.setStatus?(u.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){u.setStatus(\"\")}),1),t()}),1)):t())}}if(u.UTF8ToString=q,u.stringToUTF8=function(t,n,r){return B(t,e(),n,r)},u.lengthBytesUTF8=G,u.keepRuntimeAlive=J,u.wasmMemory=E,u.stackSave=Mn,u.stackRestore=Cn,u.stackAlloc=xn,u.ExitStatus=ot,u.PThread=pt,et=function t(){_n||qn(),_n||(et=t)},u.preInit)for(\"function\"==typeof u.preInit&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();return qn(),t.ready});\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t:\"function\"==typeof define&&define.amd?define([],(function(){return t})):\"object\"==typeof exports&&(exports.ortWasmThreaded=t);\n","\r\nvar ortWasm = (() => {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\r\n  return (\r\nfunction(ortWasm) {\r\n  ortWasm = ortWasm || {};\r\n\r\n\r\nvar d;d||(d=typeof ortWasm !== 'undefined' ? ortWasm : {});var aa,ba;d.ready=new Promise(function(a,b){aa=a;ba=b});var ca=Object.assign({},d),da=\"./this.program\",ea=(a,b)=>{throw b;},fa=\"object\"==typeof window,m=\"function\"==typeof importScripts,p=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,q=\"\",ha,r,v,fs,y,ia;\r\nif(p)q=m?require(\"path\").dirname(q)+\"/\":__dirname+\"/\",ia=()=>{y||(fs=require(\"fs\"),y=require(\"path\"))},ha=function(a,b){ia();a=y.normalize(a);return fs.readFileSync(a,b?void 0:\"utf8\")},v=a=>{a=ha(a,!0);a.buffer||(a=new Uint8Array(a));return a},r=(a,b,c)=>{ia();a=y.normalize(a);fs.readFile(a,function(e,f){e?c(e):b(f.buffer)})},1<process.argv.length&&(da=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",function(a){if(!(a instanceof ja))throw a;}),process.on(\"unhandledRejection\",\r\nfunction(a){throw a;}),ea=(a,b)=>{if(noExitRuntime||0<ka)throw process.exitCode=a,b;b instanceof ja||z(\"exiting due to exception: \"+b);process.exit(a)},d.inspect=function(){return\"[Emscripten Module object]\"};else if(fa||m)m?q=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(q=document.currentScript.src),_scriptDir&&(q=_scriptDir),0!==q.indexOf(\"blob:\")?q=q.substr(0,q.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):q=\"\",ha=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);\r\nreturn b.responseText},m&&(v=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),r=(a,b,c)=>{var e=new XMLHttpRequest;e.open(\"GET\",a,!0);e.responseType=\"arraybuffer\";e.onload=()=>{200==e.status||0==e.status&&e.response?b(e.response):c()};e.onerror=c;e.send(null)};var la=d.print||console.log.bind(console),z=d.printErr||console.warn.bind(console);Object.assign(d,ca);ca=null;d.thisProgram&&(da=d.thisProgram);d.quit&&(ea=d.quit);\r\nvar A;d.wasmBinary&&(A=d.wasmBinary);var noExitRuntime=d.noExitRuntime||!1;\"object\"!=typeof WebAssembly&&B(\"no native wasm support detected\");var ma,D=!1,na=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\r\nfunction oa(a,b,c){b>>>=0;var e=b+c;for(c=b;a[c]&&!(c>=e);)++c;if(16<c-b&&a.buffer&&na)return na.decode(a.subarray(b,c));for(e=\"\";b<c;){var f=a[b++];if(f&128){var h=a[b++]&63;if(192==(f&224))e+=String.fromCharCode((f&31)<<6|h);else{var k=a[b++]&63;f=224==(f&240)?(f&15)<<12|h<<6|k:(f&7)<<18|h<<12|k<<6|a[b++]&63;65536>f?e+=String.fromCharCode(f):(f-=65536,e+=String.fromCharCode(55296|f>>10,56320|f&1023))}}else e+=String.fromCharCode(f)}return e}function pa(a,b){return(a>>>=0)?oa(G,a,b):\"\"}\r\nfunction qa(a,b,c,e){c>>>=0;if(!(0<e))return 0;var f=c;e=c+e-1;for(var h=0;h<a.length;++h){var k=a.charCodeAt(h);if(55296<=k&&57343>=k){var l=a.charCodeAt(++h);k=65536+((k&1023)<<10)|l&1023}if(127>=k){if(c>=e)break;b[c++>>>0]=k}else{if(2047>=k){if(c+1>=e)break;b[c++>>>0]=192|k>>6}else{if(65535>=k){if(c+2>=e)break;b[c++>>>0]=224|k>>12}else{if(c+3>=e)break;b[c++>>>0]=240|k>>18;b[c++>>>0]=128|k>>12&63}b[c++>>>0]=128|k>>6&63}b[c++>>>0]=128|k&63}}b[c>>>0]=0;return c-f}\r\nfunction ra(a){for(var b=0,c=0;c<a.length;++c){var e=a.charCodeAt(c);127>=e?b++:2047>=e?b+=2:55296<=e&&57343>=e?(b+=4,++c):b+=3}return b}var sa,H,G,I,J;function ta(){var a=ma.buffer;sa=a;d.HEAP8=H=new Int8Array(a);d.HEAP16=new Int16Array(a);d.HEAP32=I=new Int32Array(a);d.HEAPU8=G=new Uint8Array(a);d.HEAPU16=new Uint16Array(a);d.HEAPU32=J=new Uint32Array(a);d.HEAPF32=new Float32Array(a);d.HEAPF64=new Float64Array(a)}var ua,va=[],wa=[],xa=[],ya=[],ka=0;\r\nfunction za(){var a=d.preRun.shift();va.unshift(a)}var K=0,Aa=null,L=null;function B(a){if(d.onAbort)d.onAbort(a);a=\"Aborted(\"+a+\")\";z(a);D=!0;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");ba(a);throw a;}function Ba(){return N.startsWith(\"data:application/octet-stream;base64,\")}var N;N=\"ort-wasm.wasm\";if(!Ba()){var Ca=N;N=d.locateFile?d.locateFile(Ca,q):q+Ca}\r\nfunction Da(){var a=N;try{if(a==N&&A)return new Uint8Array(A);if(v)return v(a);throw\"both async and sync fetching of the wasm failed\";}catch(b){B(b)}}\r\nfunction Ea(){if(!A&&(fa||m)){if(\"function\"==typeof fetch&&!N.startsWith(\"file://\"))return fetch(N,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+N+\"'\";return a.arrayBuffer()}).catch(function(){return Da()});if(r)return new Promise(function(a,b){r(N,function(c){a(new Uint8Array(c))},b)})}return Promise.resolve().then(function(){return Da()})}function ja(a){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+a+\")\";this.status=a}\r\nfunction O(a){for(;0<a.length;)a.shift()(d)}var P=[],Q=0,R=0;\r\nfunction S(a){this.Db=a;this.zb=a-24;this.Ub=function(b){J[this.zb+4>>2>>>0]=b};this.Eb=function(){return J[this.zb+4>>2>>>0]};this.Sb=function(b){J[this.zb+8>>2>>>0]=b};this.Wb=function(){return J[this.zb+8>>2>>>0]};this.Tb=function(){I[this.zb>>2>>>0]=0};this.Ib=function(b){H[this.zb+12>>0>>>0]=b?1:0};this.Pb=function(){return 0!=H[this.zb+12>>0>>>0]};this.Jb=function(b){H[this.zb+13>>0>>>0]=b?1:0};this.Lb=function(){return 0!=H[this.zb+13>>0>>>0]};this.Rb=function(b,c){this.Fb(0);this.Ub(b);this.Sb(c);\r\nthis.Tb();this.Ib(!1);this.Jb(!1)};this.Nb=function(){I[this.zb>>2>>>0]+=1};this.Xb=function(){var b=I[this.zb>>2>>>0];I[this.zb>>2>>>0]=b-1;return 1===b};this.Fb=function(b){J[this.zb+16>>2>>>0]=b};this.Ob=function(){return J[this.zb+16>>2>>>0]};this.Qb=function(){if(Fa(this.Eb()))return J[this.Db>>2>>>0];var b=this.Ob();return 0!==b?b:this.Db}}function Ga(a){return Ha((new S(a)).zb)}var T=[];function U(a){var b=T[a];b||(a>=T.length&&(T.length=a+1),T[a]=b=ua.get(a));return b}\r\nfunction Ia(a){var b=ra(a)+1,c=Ja(b);c&&qa(a,H,c,b);return c}function Ka(a,b,c){function e(n){return(n=n.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?n[1]:\"GMT\"}var f=(new Date).getFullYear(),h=new Date(f,0,1),k=new Date(f,6,1);f=h.getTimezoneOffset();var l=k.getTimezoneOffset();I[a>>2>>>0]=60*Math.max(f,l);I[b>>2>>>0]=Number(f!=l);a=e(h);b=e(k);a=Ia(a);b=Ia(b);l<f?(J[c>>2>>>0]=a,J[c+4>>2>>>0]=b):(J[c>>2>>>0]=b,J[c+4>>2>>>0]=a)}function La(a,b,c){La.Vb||(La.Vb=!0,Ka(a,b,c))}var Ma={};\r\nfunction Na(){if(!Oa){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:da||\"./this.program\"},b;for(b in Ma)void 0===Ma[b]?delete a[b]:a[b]=Ma[b];var c=[];for(b in a)c.push(b+\"=\"+a[b]);Oa=c}return Oa}var Oa,Pa=[null,[],[]];function Qa(a,b){var c=Pa[a];0===b||10===b?((1===a?la:z)(oa(c,0)),c.length=0):c.push(b)}var V=0;\r\nfunction Ra(){if(\"object\"==typeof crypto&&\"function\"==typeof crypto.getRandomValues){var a=new Uint8Array(1);return()=>{crypto.getRandomValues(a);return a[0]}}if(p)try{var b=require(\"crypto\");return()=>b.randomBytes(1)[0]}catch(c){}return()=>B(\"randomDevice\")}function W(a,b){W.Mb||(W.Mb=Ra());for(var c=0;c<b;c++)H[a+c>>0>>>0]=W.Mb();return 0}function Sa(a){return 0===a%4&&(0!==a%100||0===a%400)}var Ta=[31,29,31,30,31,30,31,31,30,31,30,31],Ua=[31,28,31,30,31,30,31,31,30,31,30,31];\r\nfunction Va(a){var b=Array(ra(a)+1);qa(a,b,0,b.length);return b}\r\nfunction Wa(a,b,c,e){function f(g,u,w){for(g=\"number\"==typeof g?g.toString():g||\"\";g.length<u;)g=w[0]+g;return g}function h(g,u){return f(g,u,\"0\")}function k(g,u){function w(M){return 0>M?-1:0<M?1:0}var F;0===(F=w(g.getFullYear()-u.getFullYear()))&&0===(F=w(g.getMonth()-u.getMonth()))&&(F=w(g.getDate()-u.getDate()));return F}function l(g){switch(g.getDay()){case 0:return new Date(g.getFullYear()-1,11,29);case 1:return g;case 2:return new Date(g.getFullYear(),0,3);case 3:return new Date(g.getFullYear(),\r\n0,2);case 4:return new Date(g.getFullYear(),0,1);case 5:return new Date(g.getFullYear()-1,11,31);case 6:return new Date(g.getFullYear()-1,11,30)}}function n(g){var u=g.Bb;for(g=new Date((new Date(g.Cb+1900,0,1)).getTime());0<u;){var w=g.getMonth(),F=(Sa(g.getFullYear())?Ta:Ua)[w];if(u>F-g.getDate())u-=F-g.getDate()+1,g.setDate(1),11>w?g.setMonth(w+1):(g.setMonth(0),g.setFullYear(g.getFullYear()+1));else{g.setDate(g.getDate()+u);break}}w=new Date(g.getFullYear()+1,0,4);u=l(new Date(g.getFullYear(),\r\n0,4));w=l(w);return 0>=k(u,g)?0>=k(w,g)?g.getFullYear()+1:g.getFullYear():g.getFullYear()-1}var t=I[e+40>>2>>>0];e={$b:I[e>>2>>>0],Zb:I[e+4>>2>>>0],Gb:I[e+8>>2>>>0],Kb:I[e+12>>2>>>0],Hb:I[e+16>>2>>>0],Cb:I[e+20>>2>>>0],Ab:I[e+24>>2>>>0],Bb:I[e+28>>2>>>0],bc:I[e+32>>2>>>0],Yb:I[e+36>>2>>>0],ac:t?pa(t):\"\"};c=pa(c);t={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\r\n\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var x in t)c=c.replace(new RegExp(x,\"g\"),t[x]);var E=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),C=\"January February March April May June July August September October November December\".split(\" \");t={\"%a\":function(g){return E[g.Ab].substring(0,3)},\"%A\":function(g){return E[g.Ab]},\"%b\":function(g){return C[g.Hb].substring(0,\r\n3)},\"%B\":function(g){return C[g.Hb]},\"%C\":function(g){return h((g.Cb+1900)/100|0,2)},\"%d\":function(g){return h(g.Kb,2)},\"%e\":function(g){return f(g.Kb,2,\" \")},\"%g\":function(g){return n(g).toString().substring(2)},\"%G\":function(g){return n(g)},\"%H\":function(g){return h(g.Gb,2)},\"%I\":function(g){g=g.Gb;0==g?g=12:12<g&&(g-=12);return h(g,2)},\"%j\":function(g){for(var u=0,w=0;w<=g.Hb-1;u+=(Sa(g.Cb+1900)?Ta:Ua)[w++]);return h(g.Kb+u,3)},\"%m\":function(g){return h(g.Hb+1,2)},\"%M\":function(g){return h(g.Zb,\r\n2)},\"%n\":function(){return\"\\n\"},\"%p\":function(g){return 0<=g.Gb&&12>g.Gb?\"AM\":\"PM\"},\"%S\":function(g){return h(g.$b,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(g){return g.Ab||7},\"%U\":function(g){return h(Math.floor((g.Bb+7-g.Ab)/7),2)},\"%V\":function(g){var u=Math.floor((g.Bb+7-(g.Ab+6)%7)/7);2>=(g.Ab+371-g.Bb-2)%7&&u++;if(u)53==u&&(w=(g.Ab+371-g.Bb)%7,4==w||3==w&&Sa(g.Cb)||(u=1));else{u=52;var w=(g.Ab+7-g.Bb-1)%7;(4==w||5==w&&Sa(g.Cb%400-1))&&u++}return h(u,2)},\"%w\":function(g){return g.Ab},\"%W\":function(g){return h(Math.floor((g.Bb+\r\n7-(g.Ab+6)%7)/7),2)},\"%y\":function(g){return(g.Cb+1900).toString().substring(2)},\"%Y\":function(g){return g.Cb+1900},\"%z\":function(g){g=g.Yb;var u=0<=g;g=Math.abs(g)/60;return(u?\"+\":\"-\")+String(\"0000\"+(g/60*100+g%60)).slice(-4)},\"%Z\":function(g){return g.ac},\"%%\":function(){return\"%\"}};c=c.replace(/%%/g,\"\\x00\\x00\");for(x in t)c.includes(x)&&(c=c.replace(new RegExp(x,\"g\"),t[x](e)));c=c.replace(/\\0\\0/g,\"%\");x=Va(c);if(x.length>b)return 0;H.set(x,a>>>0);return x.length-1}\r\nvar Jb={a:function(a){return Ja(a+24)+24},m:function(a){a=new S(a);a.Pb()||(a.Ib(!0),Q--);a.Jb(!1);P.push(a);a.Nb();return a.Qb()},ia:function(a){z(\"Unexpected exception thrown, this is not properly supported - aborting\");D=!0;throw a;},w:function(){X(0);var a=P.pop();if(a.Xb()&&!a.Lb()){var b=a.Wb();b&&U(b)(a.Db);Ga(a.Db)}R=0},d:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Fb(a);var c=b.Eb();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var h=e[f];\r\nif(0===h||h===c)break;if(Xa(h,c,b.zb+16))return V=h,a}V=c;return a},k:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Fb(a);var c=b.Eb();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var h=e[f];if(0===h||h===c)break;if(Xa(h,c,b.zb+16))return V=h,a}V=c;return a},g:function(){var a=R;if(!a)return V=0;var b=new S(a);b.Fb(a);var c=b.Eb();if(!c)return V=0,a;for(var e=Array.prototype.slice.call(arguments),f=0;f<e.length;f++){var h=e[f];if(0===h||h===c)break;\r\nif(Xa(h,c,b.zb+16))return V=h,a}V=c;return a},s:Ga,L:function(){var a=P.pop();a||B(\"no exception to throw\");var b=a.Db;a.Lb()||(P.push(a),a.Jb(!0),a.Ib(!1),Q++);R=b;throw b;},b:function(a,b,c){(new S(a)).Rb(b,c);R=a;Q++;throw a;},la:function(){return Q},i:function(a){R||(R=a);throw a;},H:function(){return 0},Ba:function(){},pa:function(){},ra:function(){},ka:function(){return 0},za:function(){},ua:function(){},ya:function(){},R:function(){},qa:function(){},na:function(){},Aa:function(){},oa:function(){},\r\nHa:function(){},Ja:function(){B(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Ia:function(){B(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},S:function(){return Date.now()},Ca:function(){return!0},Da:function(a,b){a=new Date(1E3*(J[a>>>2]+4294967296*I[a+4>>>2]));I[b>>2>>>0]=a.getUTCSeconds();I[b+4>>2>>>0]=a.getUTCMinutes();I[b+8>>2>>>0]=a.getUTCHours();I[b+12>>2>>>\r\n0]=a.getUTCDate();I[b+16>>2>>>0]=a.getUTCMonth();I[b+20>>2>>>0]=a.getUTCFullYear()-1900;I[b+24>>2>>>0]=a.getUTCDay();I[b+28>>2>>>0]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0},Ea:function(a,b){a=new Date(1E3*(J[a>>>2]+4294967296*I[a+4>>>2]));I[b>>2>>>0]=a.getSeconds();I[b+4>>2>>>0]=a.getMinutes();I[b+8>>2>>>0]=a.getHours();I[b+12>>2>>>0]=a.getDate();I[b+16>>2>>>0]=a.getMonth();I[b+20>>2>>>0]=a.getFullYear()-1900;I[b+24>>2>>>0]=a.getDay();var c=new Date(a.getFullYear(),0,1);I[b+\r\n28>>2>>>0]=(a.getTime()-c.getTime())/864E5|0;I[b+36>>2>>>0]=-(60*a.getTimezoneOffset());var e=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();c=c.getTimezoneOffset();I[b+32>>2>>>0]=(e!=c&&a.getTimezoneOffset()==Math.min(c,e))|0},Fa:function(a){var b=new Date(I[a+20>>2>>>0]+1900,I[a+16>>2>>>0],I[a+12>>2>>>0],I[a+8>>2>>>0],I[a+4>>2>>>0],I[a>>2>>>0],0),c=I[a+32>>2>>>0],e=b.getTimezoneOffset(),f=new Date(b.getFullYear(),0,1),h=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),k=f.getTimezoneOffset(),\r\nl=Math.min(k,h);0>c?I[a+32>>2>>>0]=Number(h!=k&&l==e):0<c!=(l==e)&&(h=Math.max(k,h),b.setTime(b.getTime()+6E4*((0<c?l:h)-e)));I[a+24>>2>>>0]=b.getDay();I[a+28>>2>>>0]=(b.getTime()-f.getTime())/864E5|0;I[a>>2>>>0]=b.getSeconds();I[a+4>>2>>>0]=b.getMinutes();I[a+8>>2>>>0]=b.getHours();I[a+12>>2>>>0]=b.getDate();I[a+16>>2>>>0]=b.getMonth();return b.getTime()/1E3|0},sa:function(){return-52},ta:function(){},Ga:La,B:function(){B(\"\")},ma:function(){return 4294901760},I:p?()=>{var a=process.hrtime();return 1E3*\r\na[0]+a[1]/1E6}:()=>performance.now(),xa:function(a,b,c){G.copyWithin(a>>>0,b>>>0,b+c>>>0)},G:function(a){var b=G.length;a>>>=0;if(4294901760<a)return!1;for(var c=1;4>=c;c*=2){var e=b*(1+.2/c);e=Math.min(e,a+100663296);var f=Math;e=Math.max(a,e);f=f.min.call(f,4294901760,e+(65536-e%65536)%65536);a:{try{ma.grow(f-sa.byteLength+65535>>>16);ta();var h=1;break a}catch(k){}h=void 0}if(h)return!0}return!1},va:function(a,b){var c=0;Na().forEach(function(e,f){var h=b+c;f=J[a+4*f>>2>>>0]=h;for(h=0;h<e.length;++h)H[f++>>\r\n0>>>0]=e.charCodeAt(h);H[f>>0>>>0]=0;c+=e.length+1});return 0},wa:function(a,b){var c=Na();J[a>>2>>>0]=c.length;var e=0;c.forEach(function(f){e+=f.length+1});J[b>>2>>>0]=e;return 0},ba:function(a){noExitRuntime||0<ka||(Ya(),O(xa),Za(0),Pa[1].length&&Qa(1,10),Pa[2].length&&Qa(2,10));if(!(noExitRuntime||0<ka)){if(d.onExit)d.onExit(a);D=!0}ea(a,new ja(a))},E:function(){return 52},Q:function(){return 52},ca:function(){return 70},P:function(a,b,c,e){for(var f=0,h=0;h<c;h++){var k=J[b>>2>>>0],l=J[b+4>>\r\n2>>>0];b+=8;for(var n=0;n<l;n++)Qa(a,G[k+n>>>0]);f+=l}J[e>>2>>>0]=f;return 0},c:function(){return V},ja:W,ea:$a,fa:ab,J:bb,e:cb,N:db,O:eb,j:fb,o:gb,p:hb,M:ib,r:jb,v:kb,K:lb,D:mb,X:nb,V:ob,U:pb,Z:qb,W:rb,Y:sb,T:tb,f:ub,q:vb,h:wb,da:xb,l:yb,t:zb,u:Ab,x:Bb,z:Cb,ga:Db,A:Eb,C:Fb,aa:Gb,_:Hb,$:Ib,n:function(a){return a},F:function(a){V=a},ha:Wa,y:function(a,b,c,e){return Wa(a,b,c,e)}};\r\n(function(){function a(f){d.asm=f.exports;ma=d.asm.Ka;ta();ua=d.asm.ib;wa.unshift(d.asm.La);K--;d.monitorRunDependencies&&d.monitorRunDependencies(K);0==K&&(null!==Aa&&(clearInterval(Aa),Aa=null),L&&(f=L,L=null,f()))}function b(f){a(f.instance)}function c(f){return Ea().then(function(h){return WebAssembly.instantiate(h,e)}).then(function(h){return h}).then(f,function(h){z(\"failed to asynchronously prepare wasm: \"+h);B(h)})}var e={a:Jb};K++;d.monitorRunDependencies&&d.monitorRunDependencies(K);if(d.instantiateWasm)try{return d.instantiateWasm(e,\r\na)}catch(f){return z(\"Module.instantiateWasm callback failed with error: \"+f),!1}(function(){return A||\"function\"!=typeof WebAssembly.instantiateStreaming||Ba()||N.startsWith(\"file://\")||p||\"function\"!=typeof fetch?c(b):fetch(N,{credentials:\"same-origin\"}).then(function(f){return WebAssembly.instantiateStreaming(f,e).then(b,function(h){z(\"wasm streaming compile failed: \"+h);z(\"falling back to ArrayBuffer instantiation\");return c(b)})})})().catch(ba);return{}})();\r\nd.___wasm_call_ctors=function(){return(d.___wasm_call_ctors=d.asm.La).apply(null,arguments)};d._OrtInit=function(){return(d._OrtInit=d.asm.Ma).apply(null,arguments)};d._OrtCreateSessionOptions=function(){return(d._OrtCreateSessionOptions=d.asm.Na).apply(null,arguments)};d._OrtAppendExecutionProvider=function(){return(d._OrtAppendExecutionProvider=d.asm.Oa).apply(null,arguments)};d._OrtAddSessionConfigEntry=function(){return(d._OrtAddSessionConfigEntry=d.asm.Pa).apply(null,arguments)};\r\nd._OrtReleaseSessionOptions=function(){return(d._OrtReleaseSessionOptions=d.asm.Qa).apply(null,arguments)};d._OrtCreateSession=function(){return(d._OrtCreateSession=d.asm.Ra).apply(null,arguments)};d._OrtReleaseSession=function(){return(d._OrtReleaseSession=d.asm.Sa).apply(null,arguments)};d._OrtGetInputCount=function(){return(d._OrtGetInputCount=d.asm.Ta).apply(null,arguments)};d._OrtGetOutputCount=function(){return(d._OrtGetOutputCount=d.asm.Ua).apply(null,arguments)};\r\nd._OrtGetInputName=function(){return(d._OrtGetInputName=d.asm.Va).apply(null,arguments)};d._OrtGetOutputName=function(){return(d._OrtGetOutputName=d.asm.Wa).apply(null,arguments)};d._OrtFree=function(){return(d._OrtFree=d.asm.Xa).apply(null,arguments)};d._OrtCreateTensor=function(){return(d._OrtCreateTensor=d.asm.Ya).apply(null,arguments)};d._OrtGetTensorData=function(){return(d._OrtGetTensorData=d.asm.Za).apply(null,arguments)};\r\nd._OrtReleaseTensor=function(){return(d._OrtReleaseTensor=d.asm._a).apply(null,arguments)};d._OrtCreateRunOptions=function(){return(d._OrtCreateRunOptions=d.asm.$a).apply(null,arguments)};d._OrtAddRunConfigEntry=function(){return(d._OrtAddRunConfigEntry=d.asm.ab).apply(null,arguments)};d._OrtReleaseRunOptions=function(){return(d._OrtReleaseRunOptions=d.asm.bb).apply(null,arguments)};d._OrtRun=function(){return(d._OrtRun=d.asm.cb).apply(null,arguments)};\r\nd._OrtEndProfiling=function(){return(d._OrtEndProfiling=d.asm.db).apply(null,arguments)};\r\nvar Ja=d._malloc=function(){return(Ja=d._malloc=d.asm.eb).apply(null,arguments)},Ha=d._free=function(){return(Ha=d._free=d.asm.fb).apply(null,arguments)},Za=d._fflush=function(){return(Za=d._fflush=d.asm.gb).apply(null,arguments)},Ya=d.___funcs_on_exit=function(){return(Ya=d.___funcs_on_exit=d.asm.hb).apply(null,arguments)},X=d._setThrew=function(){return(X=d._setThrew=d.asm.jb).apply(null,arguments)},Y=d.stackSave=function(){return(Y=d.stackSave=d.asm.kb).apply(null,arguments)},Z=d.stackRestore=\r\nfunction(){return(Z=d.stackRestore=d.asm.lb).apply(null,arguments)},Kb=d.stackAlloc=function(){return(Kb=d.stackAlloc=d.asm.mb).apply(null,arguments)},Xa=d.___cxa_can_catch=function(){return(Xa=d.___cxa_can_catch=d.asm.nb).apply(null,arguments)},Fa=d.___cxa_is_pointer_type=function(){return(Fa=d.___cxa_is_pointer_type=d.asm.ob).apply(null,arguments)},Lb=d.dynCall_j=function(){return(Lb=d.dynCall_j=d.asm.pb).apply(null,arguments)},Mb=d.dynCall_iiiiij=function(){return(Mb=d.dynCall_iiiiij=d.asm.qb).apply(null,\r\narguments)},Nb=d.dynCall_jii=function(){return(Nb=d.dynCall_jii=d.asm.rb).apply(null,arguments)},Ob=d.dynCall_viiiiij=function(){return(Ob=d.dynCall_viiiiij=d.asm.sb).apply(null,arguments)},Pb=d.dynCall_vjji=function(){return(Pb=d.dynCall_vjji=d.asm.tb).apply(null,arguments)},Qb=d.dynCall_viiijjjii=function(){return(Qb=d.dynCall_viiijjjii=d.asm.ub).apply(null,arguments)},Rb=d.dynCall_iij=function(){return(Rb=d.dynCall_iij=d.asm.vb).apply(null,arguments)},Sb=d.dynCall_ji=function(){return(Sb=d.dynCall_ji=\r\nd.asm.wb).apply(null,arguments)},Tb=d.dynCall_iiiiiij=function(){return(Tb=d.dynCall_iiiiiij=d.asm.xb).apply(null,arguments)},Ub=d.dynCall_iiij=function(){return(Ub=d.dynCall_iiij=d.asm.yb).apply(null,arguments)};function cb(a,b){var c=Y();try{return U(a)(b)}catch(e){Z(c);if(e!==e+0)throw e;X(1,0)}}function vb(a,b){var c=Y();try{U(a)(b)}catch(e){Z(c);if(e!==e+0)throw e;X(1,0)}}function wb(a,b,c){var e=Y();try{U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}\r\nfunction fb(a,b,c){var e=Y();try{return U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}function gb(a,b,c,e){var f=Y();try{return U(a)(b,c,e)}catch(h){Z(f);if(h!==h+0)throw h;X(1,0)}}function kb(a,b,c,e,f,h,k){var l=Y();try{return U(a)(b,c,e,f,h,k)}catch(n){Z(l);if(n!==n+0)throw n;X(1,0)}}function ub(a){var b=Y();try{U(a)()}catch(c){Z(b);if(c!==c+0)throw c;X(1,0)}}function jb(a,b,c,e,f,h){var k=Y();try{return U(a)(b,c,e,f,h)}catch(l){Z(k);if(l!==l+0)throw l;X(1,0)}}\r\nfunction hb(a,b,c,e,f){var h=Y();try{return U(a)(b,c,e,f)}catch(k){Z(h);if(k!==k+0)throw k;X(1,0)}}function yb(a,b,c,e){var f=Y();try{U(a)(b,c,e)}catch(h){Z(f);if(h!==h+0)throw h;X(1,0)}}function Ab(a,b,c,e,f,h){var k=Y();try{U(a)(b,c,e,f,h)}catch(l){Z(k);if(l!==l+0)throw l;X(1,0)}}function zb(a,b,c,e,f){var h=Y();try{U(a)(b,c,e,f)}catch(k){Z(h);if(k!==k+0)throw k;X(1,0)}}function Bb(a,b,c,e,f,h,k){var l=Y();try{U(a)(b,c,e,f,h,k)}catch(n){Z(l);if(n!==n+0)throw n;X(1,0)}}\r\nfunction Cb(a,b,c,e,f,h,k,l){var n=Y();try{U(a)(b,c,e,f,h,k,l)}catch(t){Z(n);if(t!==t+0)throw t;X(1,0)}}function eb(a,b,c){var e=Y();try{return U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}function db(a,b,c){var e=Y();try{return U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}function Db(a,b,c,e,f,h,k,l,n){var t=Y();try{U(a)(b,c,e,f,h,k,l,n)}catch(x){Z(t);if(x!==x+0)throw x;X(1,0)}}function ib(a,b,c,e,f,h){var k=Y();try{return U(a)(b,c,e,f,h)}catch(l){Z(k);if(l!==l+0)throw l;X(1,0)}}\r\nfunction lb(a,b,c,e,f,h,k,l){var n=Y();try{return U(a)(b,c,e,f,h,k,l)}catch(t){Z(n);if(t!==t+0)throw t;X(1,0)}}function mb(a,b,c,e,f,h,k,l,n,t,x,E){var C=Y();try{return U(a)(b,c,e,f,h,k,l,n,t,x,E)}catch(g){Z(C);if(g!==g+0)throw g;X(1,0)}}function Eb(a,b,c,e,f,h,k,l,n,t,x){var E=Y();try{U(a)(b,c,e,f,h,k,l,n,t,x)}catch(C){Z(E);if(C!==C+0)throw C;X(1,0)}}function Fb(a,b,c,e,f,h,k,l,n,t,x,E,C,g,u,w){var F=Y();try{U(a)(b,c,e,f,h,k,l,n,t,x,E,C,g,u,w)}catch(M){Z(F);if(M!==M+0)throw M;X(1,0)}}\r\nfunction bb(a){var b=Y();try{return U(a)()}catch(c){Z(b);if(c!==c+0)throw c;X(1,0)}}function ab(a,b,c){var e=Y();try{return U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}function $a(a,b,c){var e=Y();try{return U(a)(b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}function xb(a,b,c,e){var f=Y();try{U(a)(b,c,e)}catch(h){Z(f);if(h!==h+0)throw h;X(1,0)}}function Gb(a,b,c,e,f,h,k,l){var n=Y();try{Ob(a,b,c,e,f,h,k,l)}catch(t){Z(n);if(t!==t+0)throw t;X(1,0)}}\r\nfunction Ib(a,b,c,e,f,h){var k=Y();try{Pb(a,b,c,e,f,h)}catch(l){Z(k);if(l!==l+0)throw l;X(1,0)}}function Hb(a,b,c,e,f,h,k,l,n,t,x,E){var C=Y();try{Qb(a,b,c,e,f,h,k,l,n,t,x,E)}catch(g){Z(C);if(g!==g+0)throw g;X(1,0)}}function qb(a,b,c,e){var f=Y();try{return Rb(a,b,c,e)}catch(h){Z(f);if(h!==h+0)throw h;X(1,0)}}function sb(a,b){var c=Y();try{return Sb(a,b)}catch(e){Z(c);if(e!==e+0)throw e;X(1,0)}}\r\nfunction nb(a,b,c,e,f,h,k,l){var n=Y();try{return Tb(a,b,c,e,f,h,k,l)}catch(t){Z(n);if(t!==t+0)throw t;X(1,0)}}function rb(a){var b=Y();try{return Lb(a)}catch(c){Z(b);if(c!==c+0)throw c;X(1,0)}}function ob(a,b,c,e,f,h,k){var l=Y();try{return Mb(a,b,c,e,f,h,k)}catch(n){Z(l);if(n!==n+0)throw n;X(1,0)}}function pb(a,b,c,e,f){var h=Y();try{return Ub(a,b,c,e,f)}catch(k){Z(h);if(k!==k+0)throw k;X(1,0)}}function tb(a,b,c){var e=Y();try{return Nb(a,b,c)}catch(f){Z(e);if(f!==f+0)throw f;X(1,0)}}\r\nd.UTF8ToString=pa;d.stringToUTF8=function(a,b,c){return qa(a,G,b,c)};d.lengthBytesUTF8=ra;d.stackSave=Y;d.stackRestore=Z;d.stackAlloc=Kb;var Vb;L=function Wb(){Vb||Xb();Vb||(L=Wb)};\r\nfunction Xb(){function a(){if(!Vb&&(Vb=!0,d.calledRun=!0,!D)){O(wa);aa(d);if(d.onRuntimeInitialized)d.onRuntimeInitialized();if(d.postRun)for(\"function\"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;){var b=d.postRun.shift();ya.unshift(b)}O(ya)}}if(!(0<K)){if(d.preRun)for(\"function\"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)za();O(va);0<K||(d.setStatus?(d.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){d.setStatus(\"\")},1);a()},1)):a())}}\r\nif(d.preInit)for(\"function\"==typeof d.preInit&&(d.preInit=[d.preInit]);0<d.preInit.length;)d.preInit.pop()();Xb();\r\n\r\n\r\n  return ortWasm.ready\r\n}\r\n);\r\n})();\r\nif (typeof exports === 'object' && typeof module === 'object')\r\n  module.exports = ortWasm;\r\nelse if (typeof define === 'function' && define['amd'])\r\n  define([], function() { return ortWasm; });\r\nelse if (typeof exports === 'object')\r\n  exports[\"ortWasm\"] = ortWasm;\r\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar Guid = /** @class */ (function () {\r\n    function Guid(guid) {\r\n        if (!guid) {\r\n            throw new TypeError(\"Invalid argument; `value` has no value.\");\r\n        }\r\n        this.value = Guid.EMPTY;\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n    Guid.isGuid = function (guid) {\r\n        var value = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    };\r\n    Guid.create = function () {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\"));\r\n    };\r\n    Guid.createEmpty = function () {\r\n        return new Guid(\"emptyguid\");\r\n    };\r\n    Guid.parse = function (guid) {\r\n        return new Guid(guid);\r\n    };\r\n    Guid.raw = function () {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\");\r\n    };\r\n    Guid.gen = function (count) {\r\n        var out = \"\";\r\n        for (var i = 0; i < count; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    };\r\n    Guid.prototype.equals = function (other) {\r\n        // Comparing string `value` against provided `guid` will auto-call\r\n        // toString on `guid` for comparison\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    };\r\n    Guid.prototype.isEmpty = function () {\r\n        return this.value === Guid.EMPTY;\r\n    };\r\n    Guid.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Guid.prototype.toJSON = function () {\r\n        return {\r\n            value: this.value\r\n        };\r\n    };\r\n    Guid.validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\r\n    Guid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    return Guid;\r\n}());\r\nexports.Guid = Guid;\r\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.onnx = (function() {\n\n    /**\n     * Namespace onnx.\n     * @exports onnx\n     * @namespace\n     */\n    var onnx = {};\n\n    /**\n     * Version enum.\n     * @name onnx.Version\n     * @enum {string}\n     * @property {number} _START_VERSION=0 _START_VERSION value\n     * @property {number} IR_VERSION_2017_10_10=1 IR_VERSION_2017_10_10 value\n     * @property {number} IR_VERSION_2017_10_30=2 IR_VERSION_2017_10_30 value\n     * @property {number} IR_VERSION_2017_11_3=3 IR_VERSION_2017_11_3 value\n     * @property {number} IR_VERSION_2019_1_22=4 IR_VERSION_2019_1_22 value\n     * @property {number} IR_VERSION=5 IR_VERSION value\n     */\n    onnx.Version = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"_START_VERSION\"] = 0;\n        values[valuesById[1] = \"IR_VERSION_2017_10_10\"] = 1;\n        values[valuesById[2] = \"IR_VERSION_2017_10_30\"] = 2;\n        values[valuesById[3] = \"IR_VERSION_2017_11_3\"] = 3;\n        values[valuesById[4] = \"IR_VERSION_2019_1_22\"] = 4;\n        values[valuesById[5] = \"IR_VERSION\"] = 5;\n        return values;\n    })();\n\n    onnx.AttributeProto = (function() {\n\n        /**\n         * Properties of an AttributeProto.\n         * @memberof onnx\n         * @interface IAttributeProto\n         * @property {string|null} [name] AttributeProto name\n         * @property {string|null} [refAttrName] AttributeProto refAttrName\n         * @property {string|null} [docString] AttributeProto docString\n         * @property {onnx.AttributeProto.AttributeType|null} [type] AttributeProto type\n         * @property {number|null} [f] AttributeProto f\n         * @property {number|Long|null} [i] AttributeProto i\n         * @property {Uint8Array|null} [s] AttributeProto s\n         * @property {onnx.ITensorProto|null} [t] AttributeProto t\n         * @property {onnx.IGraphProto|null} [g] AttributeProto g\n         * @property {Array.<number>|null} [floats] AttributeProto floats\n         * @property {Array.<number|Long>|null} [ints] AttributeProto ints\n         * @property {Array.<Uint8Array>|null} [strings] AttributeProto strings\n         * @property {Array.<onnx.ITensorProto>|null} [tensors] AttributeProto tensors\n         * @property {Array.<onnx.IGraphProto>|null} [graphs] AttributeProto graphs\n         */\n\n        /**\n         * Constructs a new AttributeProto.\n         * @memberof onnx\n         * @classdesc Represents an AttributeProto.\n         * @implements IAttributeProto\n         * @constructor\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         */\n        function AttributeProto(properties) {\n            this.floats = [];\n            this.ints = [];\n            this.strings = [];\n            this.tensors = [];\n            this.graphs = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * AttributeProto name.\n         * @member {string} name\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.name = \"\";\n\n        /**\n         * AttributeProto refAttrName.\n         * @member {string} refAttrName\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.refAttrName = \"\";\n\n        /**\n         * AttributeProto docString.\n         * @member {string} docString\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.docString = \"\";\n\n        /**\n         * AttributeProto type.\n         * @member {onnx.AttributeProto.AttributeType} type\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.type = 0;\n\n        /**\n         * AttributeProto f.\n         * @member {number} f\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.f = 0;\n\n        /**\n         * AttributeProto i.\n         * @member {number|Long} i\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.i = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * AttributeProto s.\n         * @member {Uint8Array} s\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.s = $util.newBuffer([]);\n\n        /**\n         * AttributeProto t.\n         * @member {onnx.ITensorProto|null|undefined} t\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.t = null;\n\n        /**\n         * AttributeProto g.\n         * @member {onnx.IGraphProto|null|undefined} g\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.g = null;\n\n        /**\n         * AttributeProto floats.\n         * @member {Array.<number>} floats\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.floats = $util.emptyArray;\n\n        /**\n         * AttributeProto ints.\n         * @member {Array.<number|Long>} ints\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.ints = $util.emptyArray;\n\n        /**\n         * AttributeProto strings.\n         * @member {Array.<Uint8Array>} strings\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.strings = $util.emptyArray;\n\n        /**\n         * AttributeProto tensors.\n         * @member {Array.<onnx.ITensorProto>} tensors\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.tensors = $util.emptyArray;\n\n        /**\n         * AttributeProto graphs.\n         * @member {Array.<onnx.IGraphProto>} graphs\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.graphs = $util.emptyArray;\n\n        /**\n         * Creates a new AttributeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         * @returns {onnx.AttributeProto} AttributeProto instance\n         */\n        AttributeProto.create = function create(properties) {\n            return new AttributeProto(properties);\n        };\n\n        /**\n         * Encodes the specified AttributeProto message. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.f);\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.i);\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.s);\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                $root.onnx.TensorProto.encode(message.t, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                $root.onnx.GraphProto.encode(message.g, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.floats != null && message.floats.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.floats.length; ++i)\n                    writer.float(message.floats[i]);\n                writer.ldelim();\n            }\n            if (message.ints != null && message.ints.length) {\n                writer.uint32(/* id 8, wireType 2 =*/66).fork();\n                for (var i = 0; i < message.ints.length; ++i)\n                    writer.int64(message.ints[i]);\n                writer.ldelim();\n            }\n            if (message.strings != null && message.strings.length)\n                for (var i = 0; i < message.strings.length; ++i)\n                    writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.strings[i]);\n            if (message.tensors != null && message.tensors.length)\n                for (var i = 0; i < message.tensors.length; ++i)\n                    $root.onnx.TensorProto.encode(message.tensors[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.graphs != null && message.graphs.length)\n                for (var i = 0; i < message.graphs.length; ++i)\n                    $root.onnx.GraphProto.encode(message.graphs[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 13, wireType 2 =*/106).string(message.docString);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.type);\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                writer.uint32(/* id 21, wireType 2 =*/170).string(message.refAttrName);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified AttributeProto message, length delimited. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.AttributeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 21:\n                    message.refAttrName = reader.string();\n                    break;\n                case 13:\n                    message.docString = reader.string();\n                    break;\n                case 20:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.f = reader.float();\n                    break;\n                case 3:\n                    message.i = reader.int64();\n                    break;\n                case 4:\n                    message.s = reader.bytes();\n                    break;\n                case 5:\n                    message.t = $root.onnx.TensorProto.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.g = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    if (!(message.floats && message.floats.length))\n                        message.floats = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floats.push(reader.float());\n                    } else\n                        message.floats.push(reader.float());\n                    break;\n                case 8:\n                    if (!(message.ints && message.ints.length))\n                        message.ints = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.ints.push(reader.int64());\n                    } else\n                        message.ints.push(reader.int64());\n                    break;\n                case 9:\n                    if (!(message.strings && message.strings.length))\n                        message.strings = [];\n                    message.strings.push(reader.bytes());\n                    break;\n                case 10:\n                    if (!(message.tensors && message.tensors.length))\n                        message.tensors = [];\n                    message.tensors.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 11:\n                    if (!(message.graphs && message.graphs.length))\n                        message.graphs = [];\n                    message.graphs.push($root.onnx.GraphProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an AttributeProto message.\n         * @function verify\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        AttributeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                if (!$util.isString(message.refAttrName))\n                    return \"refAttrName: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                switch (message.type) {\n                default:\n                    return \"type: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                    break;\n                }\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                if (typeof message.f !== \"number\")\n                    return \"f: number expected\";\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (!$util.isInteger(message.i) && !(message.i && $util.isInteger(message.i.low) && $util.isInteger(message.i.high)))\n                    return \"i: integer|Long expected\";\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                if (!(message.s && typeof message.s.length === \"number\" || $util.isString(message.s)))\n                    return \"s: buffer expected\";\n            if (message.t != null && message.hasOwnProperty(\"t\")) {\n                var error = $root.onnx.TensorProto.verify(message.t);\n                if (error)\n                    return \"t.\" + error;\n            }\n            if (message.g != null && message.hasOwnProperty(\"g\")) {\n                var error = $root.onnx.GraphProto.verify(message.g);\n                if (error)\n                    return \"g.\" + error;\n            }\n            if (message.floats != null && message.hasOwnProperty(\"floats\")) {\n                if (!Array.isArray(message.floats))\n                    return \"floats: array expected\";\n                for (var i = 0; i < message.floats.length; ++i)\n                    if (typeof message.floats[i] !== \"number\")\n                        return \"floats: number[] expected\";\n            }\n            if (message.ints != null && message.hasOwnProperty(\"ints\")) {\n                if (!Array.isArray(message.ints))\n                    return \"ints: array expected\";\n                for (var i = 0; i < message.ints.length; ++i)\n                    if (!$util.isInteger(message.ints[i]) && !(message.ints[i] && $util.isInteger(message.ints[i].low) && $util.isInteger(message.ints[i].high)))\n                        return \"ints: integer|Long[] expected\";\n            }\n            if (message.strings != null && message.hasOwnProperty(\"strings\")) {\n                if (!Array.isArray(message.strings))\n                    return \"strings: array expected\";\n                for (var i = 0; i < message.strings.length; ++i)\n                    if (!(message.strings[i] && typeof message.strings[i].length === \"number\" || $util.isString(message.strings[i])))\n                        return \"strings: buffer[] expected\";\n            }\n            if (message.tensors != null && message.hasOwnProperty(\"tensors\")) {\n                if (!Array.isArray(message.tensors))\n                    return \"tensors: array expected\";\n                for (var i = 0; i < message.tensors.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.tensors[i]);\n                    if (error)\n                        return \"tensors.\" + error;\n                }\n            }\n            if (message.graphs != null && message.hasOwnProperty(\"graphs\")) {\n                if (!Array.isArray(message.graphs))\n                    return \"graphs: array expected\";\n                for (var i = 0; i < message.graphs.length; ++i) {\n                    var error = $root.onnx.GraphProto.verify(message.graphs[i]);\n                    if (error)\n                        return \"graphs.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates an AttributeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.AttributeProto} AttributeProto\n         */\n        AttributeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.AttributeProto)\n                return object;\n            var message = new $root.onnx.AttributeProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.refAttrName != null)\n                message.refAttrName = String(object.refAttrName);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            switch (object.type) {\n            case \"UNDEFINED\":\n            case 0:\n                message.type = 0;\n                break;\n            case \"FLOAT\":\n            case 1:\n                message.type = 1;\n                break;\n            case \"INT\":\n            case 2:\n                message.type = 2;\n                break;\n            case \"STRING\":\n            case 3:\n                message.type = 3;\n                break;\n            case \"TENSOR\":\n            case 4:\n                message.type = 4;\n                break;\n            case \"GRAPH\":\n            case 5:\n                message.type = 5;\n                break;\n            case \"FLOATS\":\n            case 6:\n                message.type = 6;\n                break;\n            case \"INTS\":\n            case 7:\n                message.type = 7;\n                break;\n            case \"STRINGS\":\n            case 8:\n                message.type = 8;\n                break;\n            case \"TENSORS\":\n            case 9:\n                message.type = 9;\n                break;\n            case \"GRAPHS\":\n            case 10:\n                message.type = 10;\n                break;\n            }\n            if (object.f != null)\n                message.f = Number(object.f);\n            if (object.i != null)\n                if ($util.Long)\n                    (message.i = $util.Long.fromValue(object.i)).unsigned = false;\n                else if (typeof object.i === \"string\")\n                    message.i = parseInt(object.i, 10);\n                else if (typeof object.i === \"number\")\n                    message.i = object.i;\n                else if (typeof object.i === \"object\")\n                    message.i = new $util.LongBits(object.i.low >>> 0, object.i.high >>> 0).toNumber();\n            if (object.s != null)\n                if (typeof object.s === \"string\")\n                    $util.base64.decode(object.s, message.s = $util.newBuffer($util.base64.length(object.s)), 0);\n                else if (object.s.length)\n                    message.s = object.s;\n            if (object.t != null) {\n                if (typeof object.t !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.t: object expected\");\n                message.t = $root.onnx.TensorProto.fromObject(object.t);\n            }\n            if (object.g != null) {\n                if (typeof object.g !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.g: object expected\");\n                message.g = $root.onnx.GraphProto.fromObject(object.g);\n            }\n            if (object.floats) {\n                if (!Array.isArray(object.floats))\n                    throw TypeError(\".onnx.AttributeProto.floats: array expected\");\n                message.floats = [];\n                for (var i = 0; i < object.floats.length; ++i)\n                    message.floats[i] = Number(object.floats[i]);\n            }\n            if (object.ints) {\n                if (!Array.isArray(object.ints))\n                    throw TypeError(\".onnx.AttributeProto.ints: array expected\");\n                message.ints = [];\n                for (var i = 0; i < object.ints.length; ++i)\n                    if ($util.Long)\n                        (message.ints[i] = $util.Long.fromValue(object.ints[i])).unsigned = false;\n                    else if (typeof object.ints[i] === \"string\")\n                        message.ints[i] = parseInt(object.ints[i], 10);\n                    else if (typeof object.ints[i] === \"number\")\n                        message.ints[i] = object.ints[i];\n                    else if (typeof object.ints[i] === \"object\")\n                        message.ints[i] = new $util.LongBits(object.ints[i].low >>> 0, object.ints[i].high >>> 0).toNumber();\n            }\n            if (object.strings) {\n                if (!Array.isArray(object.strings))\n                    throw TypeError(\".onnx.AttributeProto.strings: array expected\");\n                message.strings = [];\n                for (var i = 0; i < object.strings.length; ++i)\n                    if (typeof object.strings[i] === \"string\")\n                        $util.base64.decode(object.strings[i], message.strings[i] = $util.newBuffer($util.base64.length(object.strings[i])), 0);\n                    else if (object.strings[i].length)\n                        message.strings[i] = object.strings[i];\n            }\n            if (object.tensors) {\n                if (!Array.isArray(object.tensors))\n                    throw TypeError(\".onnx.AttributeProto.tensors: array expected\");\n                message.tensors = [];\n                for (var i = 0; i < object.tensors.length; ++i) {\n                    if (typeof object.tensors[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.tensors: object expected\");\n                    message.tensors[i] = $root.onnx.TensorProto.fromObject(object.tensors[i]);\n                }\n            }\n            if (object.graphs) {\n                if (!Array.isArray(object.graphs))\n                    throw TypeError(\".onnx.AttributeProto.graphs: array expected\");\n                message.graphs = [];\n                for (var i = 0; i < object.graphs.length; ++i) {\n                    if (typeof object.graphs[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.graphs: object expected\");\n                    message.graphs[i] = $root.onnx.GraphProto.fromObject(object.graphs[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an AttributeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.AttributeProto} message AttributeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AttributeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.floats = [];\n                object.ints = [];\n                object.strings = [];\n                object.tensors = [];\n                object.graphs = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.f = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.i = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.i = options.longs === String ? \"0\" : 0;\n                if (options.bytes === String)\n                    object.s = \"\";\n                else {\n                    object.s = [];\n                    if (options.bytes !== Array)\n                        object.s = $util.newBuffer(object.s);\n                }\n                object.t = null;\n                object.g = null;\n                object.docString = \"\";\n                object.type = options.enums === String ? \"UNDEFINED\" : 0;\n                object.refAttrName = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                object.f = options.json && !isFinite(message.f) ? String(message.f) : message.f;\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (typeof message.i === \"number\")\n                    object.i = options.longs === String ? String(message.i) : message.i;\n                else\n                    object.i = options.longs === String ? $util.Long.prototype.toString.call(message.i) : options.longs === Number ? new $util.LongBits(message.i.low >>> 0, message.i.high >>> 0).toNumber() : message.i;\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                object.s = options.bytes === String ? $util.base64.encode(message.s, 0, message.s.length) : options.bytes === Array ? Array.prototype.slice.call(message.s) : message.s;\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                object.t = $root.onnx.TensorProto.toObject(message.t, options);\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                object.g = $root.onnx.GraphProto.toObject(message.g, options);\n            if (message.floats && message.floats.length) {\n                object.floats = [];\n                for (var j = 0; j < message.floats.length; ++j)\n                    object.floats[j] = options.json && !isFinite(message.floats[j]) ? String(message.floats[j]) : message.floats[j];\n            }\n            if (message.ints && message.ints.length) {\n                object.ints = [];\n                for (var j = 0; j < message.ints.length; ++j)\n                    if (typeof message.ints[j] === \"number\")\n                        object.ints[j] = options.longs === String ? String(message.ints[j]) : message.ints[j];\n                    else\n                        object.ints[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ints[j]) : options.longs === Number ? new $util.LongBits(message.ints[j].low >>> 0, message.ints[j].high >>> 0).toNumber() : message.ints[j];\n            }\n            if (message.strings && message.strings.length) {\n                object.strings = [];\n                for (var j = 0; j < message.strings.length; ++j)\n                    object.strings[j] = options.bytes === String ? $util.base64.encode(message.strings[j], 0, message.strings[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.strings[j]) : message.strings[j];\n            }\n            if (message.tensors && message.tensors.length) {\n                object.tensors = [];\n                for (var j = 0; j < message.tensors.length; ++j)\n                    object.tensors[j] = $root.onnx.TensorProto.toObject(message.tensors[j], options);\n            }\n            if (message.graphs && message.graphs.length) {\n                object.graphs = [];\n                for (var j = 0; j < message.graphs.length; ++j)\n                    object.graphs[j] = $root.onnx.GraphProto.toObject(message.graphs[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = options.enums === String ? $root.onnx.AttributeProto.AttributeType[message.type] : message.type;\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                object.refAttrName = message.refAttrName;\n            return object;\n        };\n\n        /**\n         * Converts this AttributeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.AttributeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AttributeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * AttributeType enum.\n         * @name onnx.AttributeProto.AttributeType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} INT=2 INT value\n         * @property {number} STRING=3 STRING value\n         * @property {number} TENSOR=4 TENSOR value\n         * @property {number} GRAPH=5 GRAPH value\n         * @property {number} FLOATS=6 FLOATS value\n         * @property {number} INTS=7 INTS value\n         * @property {number} STRINGS=8 STRINGS value\n         * @property {number} TENSORS=9 TENSORS value\n         * @property {number} GRAPHS=10 GRAPHS value\n         */\n        AttributeProto.AttributeType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"INT\"] = 2;\n            values[valuesById[3] = \"STRING\"] = 3;\n            values[valuesById[4] = \"TENSOR\"] = 4;\n            values[valuesById[5] = \"GRAPH\"] = 5;\n            values[valuesById[6] = \"FLOATS\"] = 6;\n            values[valuesById[7] = \"INTS\"] = 7;\n            values[valuesById[8] = \"STRINGS\"] = 8;\n            values[valuesById[9] = \"TENSORS\"] = 9;\n            values[valuesById[10] = \"GRAPHS\"] = 10;\n            return values;\n        })();\n\n        return AttributeProto;\n    })();\n\n    onnx.ValueInfoProto = (function() {\n\n        /**\n         * Properties of a ValueInfoProto.\n         * @memberof onnx\n         * @interface IValueInfoProto\n         * @property {string|null} [name] ValueInfoProto name\n         * @property {onnx.ITypeProto|null} [type] ValueInfoProto type\n         * @property {string|null} [docString] ValueInfoProto docString\n         */\n\n        /**\n         * Constructs a new ValueInfoProto.\n         * @memberof onnx\n         * @classdesc Represents a ValueInfoProto.\n         * @implements IValueInfoProto\n         * @constructor\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         */\n        function ValueInfoProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ValueInfoProto name.\n         * @member {string} name\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.name = \"\";\n\n        /**\n         * ValueInfoProto type.\n         * @member {onnx.ITypeProto|null|undefined} type\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.type = null;\n\n        /**\n         * ValueInfoProto docString.\n         * @member {string} docString\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new ValueInfoProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         * @returns {onnx.ValueInfoProto} ValueInfoProto instance\n         */\n        ValueInfoProto.create = function create(properties) {\n            return new ValueInfoProto(properties);\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                $root.onnx.TypeProto.encode(message.type, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.docString);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message, length delimited. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ValueInfoProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.type = $root.onnx.TypeProto.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ValueInfoProto message.\n         * @function verify\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ValueInfoProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\")) {\n                var error = $root.onnx.TypeProto.verify(message.type);\n                if (error)\n                    return \"type.\" + error;\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ValueInfoProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         */\n        ValueInfoProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ValueInfoProto)\n                return object;\n            var message = new $root.onnx.ValueInfoProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.type != null) {\n                if (typeof object.type !== \"object\")\n                    throw TypeError(\".onnx.ValueInfoProto.type: object expected\");\n                message.type = $root.onnx.TypeProto.fromObject(object.type);\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ValueInfoProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.ValueInfoProto} message ValueInfoProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ValueInfoProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.name = \"\";\n                object.type = null;\n                object.docString = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = $root.onnx.TypeProto.toObject(message.type, options);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            return object;\n        };\n\n        /**\n         * Converts this ValueInfoProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ValueInfoProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ValueInfoProto;\n    })();\n\n    onnx.NodeProto = (function() {\n\n        /**\n         * Properties of a NodeProto.\n         * @memberof onnx\n         * @interface INodeProto\n         * @property {Array.<string>|null} [input] NodeProto input\n         * @property {Array.<string>|null} [output] NodeProto output\n         * @property {string|null} [name] NodeProto name\n         * @property {string|null} [opType] NodeProto opType\n         * @property {string|null} [domain] NodeProto domain\n         * @property {Array.<onnx.IAttributeProto>|null} [attribute] NodeProto attribute\n         * @property {string|null} [docString] NodeProto docString\n         */\n\n        /**\n         * Constructs a new NodeProto.\n         * @memberof onnx\n         * @classdesc Represents a NodeProto.\n         * @implements INodeProto\n         * @constructor\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         */\n        function NodeProto(properties) {\n            this.input = [];\n            this.output = [];\n            this.attribute = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NodeProto input.\n         * @member {Array.<string>} input\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.input = $util.emptyArray;\n\n        /**\n         * NodeProto output.\n         * @member {Array.<string>} output\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.output = $util.emptyArray;\n\n        /**\n         * NodeProto name.\n         * @member {string} name\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.name = \"\";\n\n        /**\n         * NodeProto opType.\n         * @member {string} opType\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.opType = \"\";\n\n        /**\n         * NodeProto domain.\n         * @member {string} domain\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.domain = \"\";\n\n        /**\n         * NodeProto attribute.\n         * @member {Array.<onnx.IAttributeProto>} attribute\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.attribute = $util.emptyArray;\n\n        /**\n         * NodeProto docString.\n         * @member {string} docString\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new NodeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         * @returns {onnx.NodeProto} NodeProto instance\n         */\n        NodeProto.create = function create(properties) {\n            return new NodeProto(properties);\n        };\n\n        /**\n         * Encodes the specified NodeProto message. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.input[i]);\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.output[i]);\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.opType);\n            if (message.attribute != null && message.attribute.length)\n                for (var i = 0; i < message.attribute.length; ++i)\n                    $root.onnx.AttributeProto.encode(message.attribute[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 7, wireType 2 =*/58).string(message.domain);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NodeProto message, length delimited. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.NodeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push(reader.string());\n                    break;\n                case 2:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push(reader.string());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.opType = reader.string();\n                    break;\n                case 7:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    if (!(message.attribute && message.attribute.length))\n                        message.attribute = [];\n                    message.attribute.push($root.onnx.AttributeProto.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NodeProto message.\n         * @function verify\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NodeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i)\n                    if (!$util.isString(message.input[i]))\n                        return \"input: string[] expected\";\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i)\n                    if (!$util.isString(message.output[i]))\n                        return \"output: string[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                if (!$util.isString(message.opType))\n                    return \"opType: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.attribute != null && message.hasOwnProperty(\"attribute\")) {\n                if (!Array.isArray(message.attribute))\n                    return \"attribute: array expected\";\n                for (var i = 0; i < message.attribute.length; ++i) {\n                    var error = $root.onnx.AttributeProto.verify(message.attribute[i]);\n                    if (error)\n                        return \"attribute.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a NodeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.NodeProto} NodeProto\n         */\n        NodeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.NodeProto)\n                return object;\n            var message = new $root.onnx.NodeProto();\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.NodeProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i)\n                    message.input[i] = String(object.input[i]);\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.NodeProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i)\n                    message.output[i] = String(object.output[i]);\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.opType != null)\n                message.opType = String(object.opType);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.attribute) {\n                if (!Array.isArray(object.attribute))\n                    throw TypeError(\".onnx.NodeProto.attribute: array expected\");\n                message.attribute = [];\n                for (var i = 0; i < object.attribute.length; ++i) {\n                    if (typeof object.attribute[i] !== \"object\")\n                        throw TypeError(\".onnx.NodeProto.attribute: object expected\");\n                    message.attribute[i] = $root.onnx.AttributeProto.fromObject(object.attribute[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NodeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.NodeProto} message NodeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NodeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.input = [];\n                object.output = [];\n                object.attribute = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.opType = \"\";\n                object.docString = \"\";\n                object.domain = \"\";\n            }\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = message.input[j];\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = message.output[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                object.opType = message.opType;\n            if (message.attribute && message.attribute.length) {\n                object.attribute = [];\n                for (var j = 0; j < message.attribute.length; ++j)\n                    object.attribute[j] = $root.onnx.AttributeProto.toObject(message.attribute[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            return object;\n        };\n\n        /**\n         * Converts this NodeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.NodeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NodeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return NodeProto;\n    })();\n\n    onnx.ModelProto = (function() {\n\n        /**\n         * Properties of a ModelProto.\n         * @memberof onnx\n         * @interface IModelProto\n         * @property {number|Long|null} [irVersion] ModelProto irVersion\n         * @property {Array.<onnx.IOperatorSetIdProto>|null} [opsetImport] ModelProto opsetImport\n         * @property {string|null} [producerName] ModelProto producerName\n         * @property {string|null} [producerVersion] ModelProto producerVersion\n         * @property {string|null} [domain] ModelProto domain\n         * @property {number|Long|null} [modelVersion] ModelProto modelVersion\n         * @property {string|null} [docString] ModelProto docString\n         * @property {onnx.IGraphProto|null} [graph] ModelProto graph\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [metadataProps] ModelProto metadataProps\n         */\n\n        /**\n         * Constructs a new ModelProto.\n         * @memberof onnx\n         * @classdesc Represents a ModelProto.\n         * @implements IModelProto\n         * @constructor\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         */\n        function ModelProto(properties) {\n            this.opsetImport = [];\n            this.metadataProps = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ModelProto irVersion.\n         * @member {number|Long} irVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.irVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto opsetImport.\n         * @member {Array.<onnx.IOperatorSetIdProto>} opsetImport\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.opsetImport = $util.emptyArray;\n\n        /**\n         * ModelProto producerName.\n         * @member {string} producerName\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerName = \"\";\n\n        /**\n         * ModelProto producerVersion.\n         * @member {string} producerVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerVersion = \"\";\n\n        /**\n         * ModelProto domain.\n         * @member {string} domain\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.domain = \"\";\n\n        /**\n         * ModelProto modelVersion.\n         * @member {number|Long} modelVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.modelVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto docString.\n         * @member {string} docString\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.docString = \"\";\n\n        /**\n         * ModelProto graph.\n         * @member {onnx.IGraphProto|null|undefined} graph\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.graph = null;\n\n        /**\n         * ModelProto metadataProps.\n         * @member {Array.<onnx.IStringStringEntryProto>} metadataProps\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.metadataProps = $util.emptyArray;\n\n        /**\n         * Creates a new ModelProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         * @returns {onnx.ModelProto} ModelProto instance\n         */\n        ModelProto.create = function create(properties) {\n            return new ModelProto(properties);\n        };\n\n        /**\n         * Encodes the specified ModelProto message. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.irVersion);\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.producerName);\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.producerVersion);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.domain);\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.modelVersion);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                $root.onnx.GraphProto.encode(message.graph, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.opsetImport != null && message.opsetImport.length)\n                for (var i = 0; i < message.opsetImport.length; ++i)\n                    $root.onnx.OperatorSetIdProto.encode(message.opsetImport[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.metadataProps != null && message.metadataProps.length)\n                for (var i = 0; i < message.metadataProps.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.metadataProps[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ModelProto message, length delimited. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ModelProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.irVersion = reader.int64();\n                    break;\n                case 8:\n                    if (!(message.opsetImport && message.opsetImport.length))\n                        message.opsetImport = [];\n                    message.opsetImport.push($root.onnx.OperatorSetIdProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.producerName = reader.string();\n                    break;\n                case 3:\n                    message.producerVersion = reader.string();\n                    break;\n                case 4:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    message.modelVersion = reader.int64();\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                case 7:\n                    message.graph = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    if (!(message.metadataProps && message.metadataProps.length))\n                        message.metadataProps = [];\n                    message.metadataProps.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ModelProto message.\n         * @function verify\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ModelProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (!$util.isInteger(message.irVersion) && !(message.irVersion && $util.isInteger(message.irVersion.low) && $util.isInteger(message.irVersion.high)))\n                    return \"irVersion: integer|Long expected\";\n            if (message.opsetImport != null && message.hasOwnProperty(\"opsetImport\")) {\n                if (!Array.isArray(message.opsetImport))\n                    return \"opsetImport: array expected\";\n                for (var i = 0; i < message.opsetImport.length; ++i) {\n                    var error = $root.onnx.OperatorSetIdProto.verify(message.opsetImport[i]);\n                    if (error)\n                        return \"opsetImport.\" + error;\n                }\n            }\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                if (!$util.isString(message.producerName))\n                    return \"producerName: string expected\";\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                if (!$util.isString(message.producerVersion))\n                    return \"producerVersion: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (!$util.isInteger(message.modelVersion) && !(message.modelVersion && $util.isInteger(message.modelVersion.low) && $util.isInteger(message.modelVersion.high)))\n                    return \"modelVersion: integer|Long expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.graph != null && message.hasOwnProperty(\"graph\")) {\n                var error = $root.onnx.GraphProto.verify(message.graph);\n                if (error)\n                    return \"graph.\" + error;\n            }\n            if (message.metadataProps != null && message.hasOwnProperty(\"metadataProps\")) {\n                if (!Array.isArray(message.metadataProps))\n                    return \"metadataProps: array expected\";\n                for (var i = 0; i < message.metadataProps.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.metadataProps[i]);\n                    if (error)\n                        return \"metadataProps.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a ModelProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ModelProto} ModelProto\n         */\n        ModelProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ModelProto)\n                return object;\n            var message = new $root.onnx.ModelProto();\n            if (object.irVersion != null)\n                if ($util.Long)\n                    (message.irVersion = $util.Long.fromValue(object.irVersion)).unsigned = false;\n                else if (typeof object.irVersion === \"string\")\n                    message.irVersion = parseInt(object.irVersion, 10);\n                else if (typeof object.irVersion === \"number\")\n                    message.irVersion = object.irVersion;\n                else if (typeof object.irVersion === \"object\")\n                    message.irVersion = new $util.LongBits(object.irVersion.low >>> 0, object.irVersion.high >>> 0).toNumber();\n            if (object.opsetImport) {\n                if (!Array.isArray(object.opsetImport))\n                    throw TypeError(\".onnx.ModelProto.opsetImport: array expected\");\n                message.opsetImport = [];\n                for (var i = 0; i < object.opsetImport.length; ++i) {\n                    if (typeof object.opsetImport[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.opsetImport: object expected\");\n                    message.opsetImport[i] = $root.onnx.OperatorSetIdProto.fromObject(object.opsetImport[i]);\n                }\n            }\n            if (object.producerName != null)\n                message.producerName = String(object.producerName);\n            if (object.producerVersion != null)\n                message.producerVersion = String(object.producerVersion);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.modelVersion != null)\n                if ($util.Long)\n                    (message.modelVersion = $util.Long.fromValue(object.modelVersion)).unsigned = false;\n                else if (typeof object.modelVersion === \"string\")\n                    message.modelVersion = parseInt(object.modelVersion, 10);\n                else if (typeof object.modelVersion === \"number\")\n                    message.modelVersion = object.modelVersion;\n                else if (typeof object.modelVersion === \"object\")\n                    message.modelVersion = new $util.LongBits(object.modelVersion.low >>> 0, object.modelVersion.high >>> 0).toNumber();\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.graph != null) {\n                if (typeof object.graph !== \"object\")\n                    throw TypeError(\".onnx.ModelProto.graph: object expected\");\n                message.graph = $root.onnx.GraphProto.fromObject(object.graph);\n            }\n            if (object.metadataProps) {\n                if (!Array.isArray(object.metadataProps))\n                    throw TypeError(\".onnx.ModelProto.metadataProps: array expected\");\n                message.metadataProps = [];\n                for (var i = 0; i < object.metadataProps.length; ++i) {\n                    if (typeof object.metadataProps[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.metadataProps: object expected\");\n                    message.metadataProps[i] = $root.onnx.StringStringEntryProto.fromObject(object.metadataProps[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ModelProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.ModelProto} message ModelProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ModelProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.opsetImport = [];\n                object.metadataProps = [];\n            }\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.irVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.irVersion = options.longs === String ? \"0\" : 0;\n                object.producerName = \"\";\n                object.producerVersion = \"\";\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.modelVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.modelVersion = options.longs === String ? \"0\" : 0;\n                object.docString = \"\";\n                object.graph = null;\n            }\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (typeof message.irVersion === \"number\")\n                    object.irVersion = options.longs === String ? String(message.irVersion) : message.irVersion;\n                else\n                    object.irVersion = options.longs === String ? $util.Long.prototype.toString.call(message.irVersion) : options.longs === Number ? new $util.LongBits(message.irVersion.low >>> 0, message.irVersion.high >>> 0).toNumber() : message.irVersion;\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                object.producerName = message.producerName;\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                object.producerVersion = message.producerVersion;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (typeof message.modelVersion === \"number\")\n                    object.modelVersion = options.longs === String ? String(message.modelVersion) : message.modelVersion;\n                else\n                    object.modelVersion = options.longs === String ? $util.Long.prototype.toString.call(message.modelVersion) : options.longs === Number ? new $util.LongBits(message.modelVersion.low >>> 0, message.modelVersion.high >>> 0).toNumber() : message.modelVersion;\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                object.graph = $root.onnx.GraphProto.toObject(message.graph, options);\n            if (message.opsetImport && message.opsetImport.length) {\n                object.opsetImport = [];\n                for (var j = 0; j < message.opsetImport.length; ++j)\n                    object.opsetImport[j] = $root.onnx.OperatorSetIdProto.toObject(message.opsetImport[j], options);\n            }\n            if (message.metadataProps && message.metadataProps.length) {\n                object.metadataProps = [];\n                for (var j = 0; j < message.metadataProps.length; ++j)\n                    object.metadataProps[j] = $root.onnx.StringStringEntryProto.toObject(message.metadataProps[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this ModelProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ModelProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ModelProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ModelProto;\n    })();\n\n    onnx.StringStringEntryProto = (function() {\n\n        /**\n         * Properties of a StringStringEntryProto.\n         * @memberof onnx\n         * @interface IStringStringEntryProto\n         * @property {string|null} [key] StringStringEntryProto key\n         * @property {string|null} [value] StringStringEntryProto value\n         */\n\n        /**\n         * Constructs a new StringStringEntryProto.\n         * @memberof onnx\n         * @classdesc Represents a StringStringEntryProto.\n         * @implements IStringStringEntryProto\n         * @constructor\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         */\n        function StringStringEntryProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * StringStringEntryProto key.\n         * @member {string} key\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.key = \"\";\n\n        /**\n         * StringStringEntryProto value.\n         * @member {string} value\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.value = \"\";\n\n        /**\n         * Creates a new StringStringEntryProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto instance\n         */\n        StringStringEntryProto.create = function create(properties) {\n            return new StringStringEntryProto(properties);\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message, length delimited. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.StringStringEntryProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StringStringEntryProto message.\n         * @function verify\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StringStringEntryProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                if (!$util.isString(message.key))\n                    return \"key: string expected\";\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                if (!$util.isString(message.value))\n                    return \"value: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StringStringEntryProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         */\n        StringStringEntryProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.StringStringEntryProto)\n                return object;\n            var message = new $root.onnx.StringStringEntryProto();\n            if (object.key != null)\n                message.key = String(object.key);\n            if (object.value != null)\n                message.value = String(object.value);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a StringStringEntryProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.StringStringEntryProto} message StringStringEntryProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StringStringEntryProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.key = \"\";\n                object.value = \"\";\n            }\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                object.key = message.key;\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                object.value = message.value;\n            return object;\n        };\n\n        /**\n         * Converts this StringStringEntryProto to JSON.\n         * @function toJSON\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StringStringEntryProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return StringStringEntryProto;\n    })();\n\n    onnx.TensorAnnotation = (function() {\n\n        /**\n         * Properties of a TensorAnnotation.\n         * @memberof onnx\n         * @interface ITensorAnnotation\n         * @property {string|null} [tensorName] TensorAnnotation tensorName\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [quantParameterTensorNames] TensorAnnotation quantParameterTensorNames\n         */\n\n        /**\n         * Constructs a new TensorAnnotation.\n         * @memberof onnx\n         * @classdesc Represents a TensorAnnotation.\n         * @implements ITensorAnnotation\n         * @constructor\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         */\n        function TensorAnnotation(properties) {\n            this.quantParameterTensorNames = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorAnnotation tensorName.\n         * @member {string} tensorName\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.tensorName = \"\";\n\n        /**\n         * TensorAnnotation quantParameterTensorNames.\n         * @member {Array.<onnx.IStringStringEntryProto>} quantParameterTensorNames\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.quantParameterTensorNames = $util.emptyArray;\n\n        /**\n         * Creates a new TensorAnnotation instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         * @returns {onnx.TensorAnnotation} TensorAnnotation instance\n         */\n        TensorAnnotation.create = function create(properties) {\n            return new TensorAnnotation(properties);\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.tensorName);\n            if (message.quantParameterTensorNames != null && message.quantParameterTensorNames.length)\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.quantParameterTensorNames[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message, length delimited. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorAnnotation();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorName = reader.string();\n                    break;\n                case 2:\n                    if (!(message.quantParameterTensorNames && message.quantParameterTensorNames.length))\n                        message.quantParameterTensorNames = [];\n                    message.quantParameterTensorNames.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorAnnotation message.\n         * @function verify\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorAnnotation.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                if (!$util.isString(message.tensorName))\n                    return \"tensorName: string expected\";\n            if (message.quantParameterTensorNames != null && message.hasOwnProperty(\"quantParameterTensorNames\")) {\n                if (!Array.isArray(message.quantParameterTensorNames))\n                    return \"quantParameterTensorNames: array expected\";\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.quantParameterTensorNames[i]);\n                    if (error)\n                        return \"quantParameterTensorNames.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorAnnotation message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         */\n        TensorAnnotation.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorAnnotation)\n                return object;\n            var message = new $root.onnx.TensorAnnotation();\n            if (object.tensorName != null)\n                message.tensorName = String(object.tensorName);\n            if (object.quantParameterTensorNames) {\n                if (!Array.isArray(object.quantParameterTensorNames))\n                    throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: array expected\");\n                message.quantParameterTensorNames = [];\n                for (var i = 0; i < object.quantParameterTensorNames.length; ++i) {\n                    if (typeof object.quantParameterTensorNames[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: object expected\");\n                    message.quantParameterTensorNames[i] = $root.onnx.StringStringEntryProto.fromObject(object.quantParameterTensorNames[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorAnnotation message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.TensorAnnotation} message TensorAnnotation\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorAnnotation.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.quantParameterTensorNames = [];\n            if (options.defaults)\n                object.tensorName = \"\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                object.tensorName = message.tensorName;\n            if (message.quantParameterTensorNames && message.quantParameterTensorNames.length) {\n                object.quantParameterTensorNames = [];\n                for (var j = 0; j < message.quantParameterTensorNames.length; ++j)\n                    object.quantParameterTensorNames[j] = $root.onnx.StringStringEntryProto.toObject(message.quantParameterTensorNames[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorAnnotation to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorAnnotation.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return TensorAnnotation;\n    })();\n\n    onnx.GraphProto = (function() {\n\n        /**\n         * Properties of a GraphProto.\n         * @memberof onnx\n         * @interface IGraphProto\n         * @property {Array.<onnx.INodeProto>|null} [node] GraphProto node\n         * @property {string|null} [name] GraphProto name\n         * @property {Array.<onnx.ITensorProto>|null} [initializer] GraphProto initializer\n         * @property {string|null} [docString] GraphProto docString\n         * @property {Array.<onnx.IValueInfoProto>|null} [input] GraphProto input\n         * @property {Array.<onnx.IValueInfoProto>|null} [output] GraphProto output\n         * @property {Array.<onnx.IValueInfoProto>|null} [valueInfo] GraphProto valueInfo\n         * @property {Array.<onnx.ITensorAnnotation>|null} [quantizationAnnotation] GraphProto quantizationAnnotation\n         */\n\n        /**\n         * Constructs a new GraphProto.\n         * @memberof onnx\n         * @classdesc Represents a GraphProto.\n         * @implements IGraphProto\n         * @constructor\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         */\n        function GraphProto(properties) {\n            this.node = [];\n            this.initializer = [];\n            this.input = [];\n            this.output = [];\n            this.valueInfo = [];\n            this.quantizationAnnotation = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * GraphProto node.\n         * @member {Array.<onnx.INodeProto>} node\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.node = $util.emptyArray;\n\n        /**\n         * GraphProto name.\n         * @member {string} name\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.name = \"\";\n\n        /**\n         * GraphProto initializer.\n         * @member {Array.<onnx.ITensorProto>} initializer\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.initializer = $util.emptyArray;\n\n        /**\n         * GraphProto docString.\n         * @member {string} docString\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.docString = \"\";\n\n        /**\n         * GraphProto input.\n         * @member {Array.<onnx.IValueInfoProto>} input\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.input = $util.emptyArray;\n\n        /**\n         * GraphProto output.\n         * @member {Array.<onnx.IValueInfoProto>} output\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.output = $util.emptyArray;\n\n        /**\n         * GraphProto valueInfo.\n         * @member {Array.<onnx.IValueInfoProto>} valueInfo\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.valueInfo = $util.emptyArray;\n\n        /**\n         * GraphProto quantizationAnnotation.\n         * @member {Array.<onnx.ITensorAnnotation>} quantizationAnnotation\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.quantizationAnnotation = $util.emptyArray;\n\n        /**\n         * Creates a new GraphProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         * @returns {onnx.GraphProto} GraphProto instance\n         */\n        GraphProto.create = function create(properties) {\n            return new GraphProto(properties);\n        };\n\n        /**\n         * Encodes the specified GraphProto message. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.node != null && message.node.length)\n                for (var i = 0; i < message.node.length; ++i)\n                    $root.onnx.NodeProto.encode(message.node[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n            if (message.initializer != null && message.initializer.length)\n                for (var i = 0; i < message.initializer.length; ++i)\n                    $root.onnx.TensorProto.encode(message.initializer[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 10, wireType 2 =*/82).string(message.docString);\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.input[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.output[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.valueInfo != null && message.valueInfo.length)\n                for (var i = 0; i < message.valueInfo.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.valueInfo[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.quantizationAnnotation != null && message.quantizationAnnotation.length)\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i)\n                    $root.onnx.TensorAnnotation.encode(message.quantizationAnnotation[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GraphProto message, length delimited. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.GraphProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.node && message.node.length))\n                        message.node = [];\n                    message.node.push($root.onnx.NodeProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    if (!(message.initializer && message.initializer.length))\n                        message.initializer = [];\n                    message.initializer.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.docString = reader.string();\n                    break;\n                case 11:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 12:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 13:\n                    if (!(message.valueInfo && message.valueInfo.length))\n                        message.valueInfo = [];\n                    message.valueInfo.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    if (!(message.quantizationAnnotation && message.quantizationAnnotation.length))\n                        message.quantizationAnnotation = [];\n                    message.quantizationAnnotation.push($root.onnx.TensorAnnotation.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GraphProto message.\n         * @function verify\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GraphProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.node != null && message.hasOwnProperty(\"node\")) {\n                if (!Array.isArray(message.node))\n                    return \"node: array expected\";\n                for (var i = 0; i < message.node.length; ++i) {\n                    var error = $root.onnx.NodeProto.verify(message.node[i]);\n                    if (error)\n                        return \"node.\" + error;\n                }\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.initializer != null && message.hasOwnProperty(\"initializer\")) {\n                if (!Array.isArray(message.initializer))\n                    return \"initializer: array expected\";\n                for (var i = 0; i < message.initializer.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.initializer[i]);\n                    if (error)\n                        return \"initializer.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.input[i]);\n                    if (error)\n                        return \"input.\" + error;\n                }\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.output[i]);\n                    if (error)\n                        return \"output.\" + error;\n                }\n            }\n            if (message.valueInfo != null && message.hasOwnProperty(\"valueInfo\")) {\n                if (!Array.isArray(message.valueInfo))\n                    return \"valueInfo: array expected\";\n                for (var i = 0; i < message.valueInfo.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.valueInfo[i]);\n                    if (error)\n                        return \"valueInfo.\" + error;\n                }\n            }\n            if (message.quantizationAnnotation != null && message.hasOwnProperty(\"quantizationAnnotation\")) {\n                if (!Array.isArray(message.quantizationAnnotation))\n                    return \"quantizationAnnotation: array expected\";\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i) {\n                    var error = $root.onnx.TensorAnnotation.verify(message.quantizationAnnotation[i]);\n                    if (error)\n                        return \"quantizationAnnotation.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a GraphProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.GraphProto} GraphProto\n         */\n        GraphProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.GraphProto)\n                return object;\n            var message = new $root.onnx.GraphProto();\n            if (object.node) {\n                if (!Array.isArray(object.node))\n                    throw TypeError(\".onnx.GraphProto.node: array expected\");\n                message.node = [];\n                for (var i = 0; i < object.node.length; ++i) {\n                    if (typeof object.node[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.node: object expected\");\n                    message.node[i] = $root.onnx.NodeProto.fromObject(object.node[i]);\n                }\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.initializer) {\n                if (!Array.isArray(object.initializer))\n                    throw TypeError(\".onnx.GraphProto.initializer: array expected\");\n                message.initializer = [];\n                for (var i = 0; i < object.initializer.length; ++i) {\n                    if (typeof object.initializer[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.initializer: object expected\");\n                    message.initializer[i] = $root.onnx.TensorProto.fromObject(object.initializer[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.GraphProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i) {\n                    if (typeof object.input[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.input: object expected\");\n                    message.input[i] = $root.onnx.ValueInfoProto.fromObject(object.input[i]);\n                }\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.GraphProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i) {\n                    if (typeof object.output[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.output: object expected\");\n                    message.output[i] = $root.onnx.ValueInfoProto.fromObject(object.output[i]);\n                }\n            }\n            if (object.valueInfo) {\n                if (!Array.isArray(object.valueInfo))\n                    throw TypeError(\".onnx.GraphProto.valueInfo: array expected\");\n                message.valueInfo = [];\n                for (var i = 0; i < object.valueInfo.length; ++i) {\n                    if (typeof object.valueInfo[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.valueInfo: object expected\");\n                    message.valueInfo[i] = $root.onnx.ValueInfoProto.fromObject(object.valueInfo[i]);\n                }\n            }\n            if (object.quantizationAnnotation) {\n                if (!Array.isArray(object.quantizationAnnotation))\n                    throw TypeError(\".onnx.GraphProto.quantizationAnnotation: array expected\");\n                message.quantizationAnnotation = [];\n                for (var i = 0; i < object.quantizationAnnotation.length; ++i) {\n                    if (typeof object.quantizationAnnotation[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.quantizationAnnotation: object expected\");\n                    message.quantizationAnnotation[i] = $root.onnx.TensorAnnotation.fromObject(object.quantizationAnnotation[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a GraphProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.GraphProto} message GraphProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GraphProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.node = [];\n                object.initializer = [];\n                object.input = [];\n                object.output = [];\n                object.valueInfo = [];\n                object.quantizationAnnotation = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.docString = \"\";\n            }\n            if (message.node && message.node.length) {\n                object.node = [];\n                for (var j = 0; j < message.node.length; ++j)\n                    object.node[j] = $root.onnx.NodeProto.toObject(message.node[j], options);\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.initializer && message.initializer.length) {\n                object.initializer = [];\n                for (var j = 0; j < message.initializer.length; ++j)\n                    object.initializer[j] = $root.onnx.TensorProto.toObject(message.initializer[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = $root.onnx.ValueInfoProto.toObject(message.input[j], options);\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = $root.onnx.ValueInfoProto.toObject(message.output[j], options);\n            }\n            if (message.valueInfo && message.valueInfo.length) {\n                object.valueInfo = [];\n                for (var j = 0; j < message.valueInfo.length; ++j)\n                    object.valueInfo[j] = $root.onnx.ValueInfoProto.toObject(message.valueInfo[j], options);\n            }\n            if (message.quantizationAnnotation && message.quantizationAnnotation.length) {\n                object.quantizationAnnotation = [];\n                for (var j = 0; j < message.quantizationAnnotation.length; ++j)\n                    object.quantizationAnnotation[j] = $root.onnx.TensorAnnotation.toObject(message.quantizationAnnotation[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this GraphProto to JSON.\n         * @function toJSON\n         * @memberof onnx.GraphProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GraphProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return GraphProto;\n    })();\n\n    onnx.TensorProto = (function() {\n\n        /**\n         * Properties of a TensorProto.\n         * @memberof onnx\n         * @interface ITensorProto\n         * @property {Array.<number|Long>|null} [dims] TensorProto dims\n         * @property {number|null} [dataType] TensorProto dataType\n         * @property {onnx.TensorProto.ISegment|null} [segment] TensorProto segment\n         * @property {Array.<number>|null} [floatData] TensorProto floatData\n         * @property {Array.<number>|null} [int32Data] TensorProto int32Data\n         * @property {Array.<Uint8Array>|null} [stringData] TensorProto stringData\n         * @property {Array.<number|Long>|null} [int64Data] TensorProto int64Data\n         * @property {string|null} [name] TensorProto name\n         * @property {string|null} [docString] TensorProto docString\n         * @property {Uint8Array|null} [rawData] TensorProto rawData\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [externalData] TensorProto externalData\n         * @property {onnx.TensorProto.DataLocation|null} [dataLocation] TensorProto dataLocation\n         * @property {Array.<number>|null} [doubleData] TensorProto doubleData\n         * @property {Array.<number|Long>|null} [uint64Data] TensorProto uint64Data\n         */\n\n        /**\n         * Constructs a new TensorProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorProto.\n         * @implements ITensorProto\n         * @constructor\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         */\n        function TensorProto(properties) {\n            this.dims = [];\n            this.floatData = [];\n            this.int32Data = [];\n            this.stringData = [];\n            this.int64Data = [];\n            this.externalData = [];\n            this.doubleData = [];\n            this.uint64Data = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorProto dims.\n         * @member {Array.<number|Long>} dims\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dims = $util.emptyArray;\n\n        /**\n         * TensorProto dataType.\n         * @member {number} dataType\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataType = 0;\n\n        /**\n         * TensorProto segment.\n         * @member {onnx.TensorProto.ISegment|null|undefined} segment\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.segment = null;\n\n        /**\n         * TensorProto floatData.\n         * @member {Array.<number>} floatData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.floatData = $util.emptyArray;\n\n        /**\n         * TensorProto int32Data.\n         * @member {Array.<number>} int32Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int32Data = $util.emptyArray;\n\n        /**\n         * TensorProto stringData.\n         * @member {Array.<Uint8Array>} stringData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.stringData = $util.emptyArray;\n\n        /**\n         * TensorProto int64Data.\n         * @member {Array.<number|Long>} int64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int64Data = $util.emptyArray;\n\n        /**\n         * TensorProto name.\n         * @member {string} name\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.name = \"\";\n\n        /**\n         * TensorProto docString.\n         * @member {string} docString\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.docString = \"\";\n\n        /**\n         * TensorProto rawData.\n         * @member {Uint8Array} rawData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.rawData = $util.newBuffer([]);\n\n        /**\n         * TensorProto externalData.\n         * @member {Array.<onnx.IStringStringEntryProto>} externalData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.externalData = $util.emptyArray;\n\n        /**\n         * TensorProto dataLocation.\n         * @member {onnx.TensorProto.DataLocation} dataLocation\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataLocation = 0;\n\n        /**\n         * TensorProto doubleData.\n         * @member {Array.<number>} doubleData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.doubleData = $util.emptyArray;\n\n        /**\n         * TensorProto uint64Data.\n         * @member {Array.<number|Long>} uint64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.uint64Data = $util.emptyArray;\n\n        /**\n         * Creates a new TensorProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         * @returns {onnx.TensorProto} TensorProto instance\n         */\n        TensorProto.create = function create(properties) {\n            return new TensorProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorProto message. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dims != null && message.dims.length) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                for (var i = 0; i < message.dims.length; ++i)\n                    writer.int64(message.dims[i]);\n                writer.ldelim();\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dataType);\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                $root.onnx.TensorProto.Segment.encode(message.segment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.floatData != null && message.floatData.length) {\n                writer.uint32(/* id 4, wireType 2 =*/34).fork();\n                for (var i = 0; i < message.floatData.length; ++i)\n                    writer.float(message.floatData[i]);\n                writer.ldelim();\n            }\n            if (message.int32Data != null && message.int32Data.length) {\n                writer.uint32(/* id 5, wireType 2 =*/42).fork();\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    writer.int32(message.int32Data[i]);\n                writer.ldelim();\n            }\n            if (message.stringData != null && message.stringData.length)\n                for (var i = 0; i < message.stringData.length; ++i)\n                    writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.stringData[i]);\n            if (message.int64Data != null && message.int64Data.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    writer.int64(message.int64Data[i]);\n                writer.ldelim();\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 8, wireType 2 =*/66).string(message.name);\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.rawData);\n            if (message.doubleData != null && message.doubleData.length) {\n                writer.uint32(/* id 10, wireType 2 =*/82).fork();\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    writer.double(message.doubleData[i]);\n                writer.ldelim();\n            }\n            if (message.uint64Data != null && message.uint64Data.length) {\n                writer.uint32(/* id 11, wireType 2 =*/90).fork();\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    writer.uint64(message.uint64Data[i]);\n                writer.ldelim();\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 12, wireType 2 =*/98).string(message.docString);\n            if (message.externalData != null && message.externalData.length)\n                for (var i = 0; i < message.externalData.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.externalData[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.dataLocation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorProto message, length delimited. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dims && message.dims.length))\n                        message.dims = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.dims.push(reader.int64());\n                    } else\n                        message.dims.push(reader.int64());\n                    break;\n                case 2:\n                    message.dataType = reader.int32();\n                    break;\n                case 3:\n                    message.segment = $root.onnx.TensorProto.Segment.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if (!(message.floatData && message.floatData.length))\n                        message.floatData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floatData.push(reader.float());\n                    } else\n                        message.floatData.push(reader.float());\n                    break;\n                case 5:\n                    if (!(message.int32Data && message.int32Data.length))\n                        message.int32Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int32Data.push(reader.int32());\n                    } else\n                        message.int32Data.push(reader.int32());\n                    break;\n                case 6:\n                    if (!(message.stringData && message.stringData.length))\n                        message.stringData = [];\n                    message.stringData.push(reader.bytes());\n                    break;\n                case 7:\n                    if (!(message.int64Data && message.int64Data.length))\n                        message.int64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int64Data.push(reader.int64());\n                    } else\n                        message.int64Data.push(reader.int64());\n                    break;\n                case 8:\n                    message.name = reader.string();\n                    break;\n                case 12:\n                    message.docString = reader.string();\n                    break;\n                case 9:\n                    message.rawData = reader.bytes();\n                    break;\n                case 13:\n                    if (!(message.externalData && message.externalData.length))\n                        message.externalData = [];\n                    message.externalData.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    message.dataLocation = reader.int32();\n                    break;\n                case 10:\n                    if (!(message.doubleData && message.doubleData.length))\n                        message.doubleData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.doubleData.push(reader.double());\n                    } else\n                        message.doubleData.push(reader.double());\n                    break;\n                case 11:\n                    if (!(message.uint64Data && message.uint64Data.length))\n                        message.uint64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.uint64Data.push(reader.uint64());\n                    } else\n                        message.uint64Data.push(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorProto message.\n         * @function verify\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dims != null && message.hasOwnProperty(\"dims\")) {\n                if (!Array.isArray(message.dims))\n                    return \"dims: array expected\";\n                for (var i = 0; i < message.dims.length; ++i)\n                    if (!$util.isInteger(message.dims[i]) && !(message.dims[i] && $util.isInteger(message.dims[i].low) && $util.isInteger(message.dims[i].high)))\n                        return \"dims: integer|Long[] expected\";\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                if (!$util.isInteger(message.dataType))\n                    return \"dataType: integer expected\";\n            if (message.segment != null && message.hasOwnProperty(\"segment\")) {\n                var error = $root.onnx.TensorProto.Segment.verify(message.segment);\n                if (error)\n                    return \"segment.\" + error;\n            }\n            if (message.floatData != null && message.hasOwnProperty(\"floatData\")) {\n                if (!Array.isArray(message.floatData))\n                    return \"floatData: array expected\";\n                for (var i = 0; i < message.floatData.length; ++i)\n                    if (typeof message.floatData[i] !== \"number\")\n                        return \"floatData: number[] expected\";\n            }\n            if (message.int32Data != null && message.hasOwnProperty(\"int32Data\")) {\n                if (!Array.isArray(message.int32Data))\n                    return \"int32Data: array expected\";\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    if (!$util.isInteger(message.int32Data[i]))\n                        return \"int32Data: integer[] expected\";\n            }\n            if (message.stringData != null && message.hasOwnProperty(\"stringData\")) {\n                if (!Array.isArray(message.stringData))\n                    return \"stringData: array expected\";\n                for (var i = 0; i < message.stringData.length; ++i)\n                    if (!(message.stringData[i] && typeof message.stringData[i].length === \"number\" || $util.isString(message.stringData[i])))\n                        return \"stringData: buffer[] expected\";\n            }\n            if (message.int64Data != null && message.hasOwnProperty(\"int64Data\")) {\n                if (!Array.isArray(message.int64Data))\n                    return \"int64Data: array expected\";\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    if (!$util.isInteger(message.int64Data[i]) && !(message.int64Data[i] && $util.isInteger(message.int64Data[i].low) && $util.isInteger(message.int64Data[i].high)))\n                        return \"int64Data: integer|Long[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                if (!(message.rawData && typeof message.rawData.length === \"number\" || $util.isString(message.rawData)))\n                    return \"rawData: buffer expected\";\n            if (message.externalData != null && message.hasOwnProperty(\"externalData\")) {\n                if (!Array.isArray(message.externalData))\n                    return \"externalData: array expected\";\n                for (var i = 0; i < message.externalData.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.externalData[i]);\n                    if (error)\n                        return \"externalData.\" + error;\n                }\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                switch (message.dataLocation) {\n                default:\n                    return \"dataLocation: enum value expected\";\n                case 0:\n                case 1:\n                    break;\n                }\n            if (message.doubleData != null && message.hasOwnProperty(\"doubleData\")) {\n                if (!Array.isArray(message.doubleData))\n                    return \"doubleData: array expected\";\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    if (typeof message.doubleData[i] !== \"number\")\n                        return \"doubleData: number[] expected\";\n            }\n            if (message.uint64Data != null && message.hasOwnProperty(\"uint64Data\")) {\n                if (!Array.isArray(message.uint64Data))\n                    return \"uint64Data: array expected\";\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    if (!$util.isInteger(message.uint64Data[i]) && !(message.uint64Data[i] && $util.isInteger(message.uint64Data[i].low) && $util.isInteger(message.uint64Data[i].high)))\n                        return \"uint64Data: integer|Long[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorProto} TensorProto\n         */\n        TensorProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorProto)\n                return object;\n            var message = new $root.onnx.TensorProto();\n            if (object.dims) {\n                if (!Array.isArray(object.dims))\n                    throw TypeError(\".onnx.TensorProto.dims: array expected\");\n                message.dims = [];\n                for (var i = 0; i < object.dims.length; ++i)\n                    if ($util.Long)\n                        (message.dims[i] = $util.Long.fromValue(object.dims[i])).unsigned = false;\n                    else if (typeof object.dims[i] === \"string\")\n                        message.dims[i] = parseInt(object.dims[i], 10);\n                    else if (typeof object.dims[i] === \"number\")\n                        message.dims[i] = object.dims[i];\n                    else if (typeof object.dims[i] === \"object\")\n                        message.dims[i] = new $util.LongBits(object.dims[i].low >>> 0, object.dims[i].high >>> 0).toNumber();\n            }\n            if (object.dataType != null)\n                message.dataType = object.dataType | 0;\n            if (object.segment != null) {\n                if (typeof object.segment !== \"object\")\n                    throw TypeError(\".onnx.TensorProto.segment: object expected\");\n                message.segment = $root.onnx.TensorProto.Segment.fromObject(object.segment);\n            }\n            if (object.floatData) {\n                if (!Array.isArray(object.floatData))\n                    throw TypeError(\".onnx.TensorProto.floatData: array expected\");\n                message.floatData = [];\n                for (var i = 0; i < object.floatData.length; ++i)\n                    message.floatData[i] = Number(object.floatData[i]);\n            }\n            if (object.int32Data) {\n                if (!Array.isArray(object.int32Data))\n                    throw TypeError(\".onnx.TensorProto.int32Data: array expected\");\n                message.int32Data = [];\n                for (var i = 0; i < object.int32Data.length; ++i)\n                    message.int32Data[i] = object.int32Data[i] | 0;\n            }\n            if (object.stringData) {\n                if (!Array.isArray(object.stringData))\n                    throw TypeError(\".onnx.TensorProto.stringData: array expected\");\n                message.stringData = [];\n                for (var i = 0; i < object.stringData.length; ++i)\n                    if (typeof object.stringData[i] === \"string\")\n                        $util.base64.decode(object.stringData[i], message.stringData[i] = $util.newBuffer($util.base64.length(object.stringData[i])), 0);\n                    else if (object.stringData[i].length)\n                        message.stringData[i] = object.stringData[i];\n            }\n            if (object.int64Data) {\n                if (!Array.isArray(object.int64Data))\n                    throw TypeError(\".onnx.TensorProto.int64Data: array expected\");\n                message.int64Data = [];\n                for (var i = 0; i < object.int64Data.length; ++i)\n                    if ($util.Long)\n                        (message.int64Data[i] = $util.Long.fromValue(object.int64Data[i])).unsigned = false;\n                    else if (typeof object.int64Data[i] === \"string\")\n                        message.int64Data[i] = parseInt(object.int64Data[i], 10);\n                    else if (typeof object.int64Data[i] === \"number\")\n                        message.int64Data[i] = object.int64Data[i];\n                    else if (typeof object.int64Data[i] === \"object\")\n                        message.int64Data[i] = new $util.LongBits(object.int64Data[i].low >>> 0, object.int64Data[i].high >>> 0).toNumber();\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.rawData != null)\n                if (typeof object.rawData === \"string\")\n                    $util.base64.decode(object.rawData, message.rawData = $util.newBuffer($util.base64.length(object.rawData)), 0);\n                else if (object.rawData.length)\n                    message.rawData = object.rawData;\n            if (object.externalData) {\n                if (!Array.isArray(object.externalData))\n                    throw TypeError(\".onnx.TensorProto.externalData: array expected\");\n                message.externalData = [];\n                for (var i = 0; i < object.externalData.length; ++i) {\n                    if (typeof object.externalData[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorProto.externalData: object expected\");\n                    message.externalData[i] = $root.onnx.StringStringEntryProto.fromObject(object.externalData[i]);\n                }\n            }\n            switch (object.dataLocation) {\n            case \"DEFAULT\":\n            case 0:\n                message.dataLocation = 0;\n                break;\n            case \"EXTERNAL\":\n            case 1:\n                message.dataLocation = 1;\n                break;\n            }\n            if (object.doubleData) {\n                if (!Array.isArray(object.doubleData))\n                    throw TypeError(\".onnx.TensorProto.doubleData: array expected\");\n                message.doubleData = [];\n                for (var i = 0; i < object.doubleData.length; ++i)\n                    message.doubleData[i] = Number(object.doubleData[i]);\n            }\n            if (object.uint64Data) {\n                if (!Array.isArray(object.uint64Data))\n                    throw TypeError(\".onnx.TensorProto.uint64Data: array expected\");\n                message.uint64Data = [];\n                for (var i = 0; i < object.uint64Data.length; ++i)\n                    if ($util.Long)\n                        (message.uint64Data[i] = $util.Long.fromValue(object.uint64Data[i])).unsigned = true;\n                    else if (typeof object.uint64Data[i] === \"string\")\n                        message.uint64Data[i] = parseInt(object.uint64Data[i], 10);\n                    else if (typeof object.uint64Data[i] === \"number\")\n                        message.uint64Data[i] = object.uint64Data[i];\n                    else if (typeof object.uint64Data[i] === \"object\")\n                        message.uint64Data[i] = new $util.LongBits(object.uint64Data[i].low >>> 0, object.uint64Data[i].high >>> 0).toNumber(true);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.TensorProto} message TensorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.dims = [];\n                object.floatData = [];\n                object.int32Data = [];\n                object.stringData = [];\n                object.int64Data = [];\n                object.doubleData = [];\n                object.uint64Data = [];\n                object.externalData = [];\n            }\n            if (options.defaults) {\n                object.dataType = 0;\n                object.segment = null;\n                object.name = \"\";\n                if (options.bytes === String)\n                    object.rawData = \"\";\n                else {\n                    object.rawData = [];\n                    if (options.bytes !== Array)\n                        object.rawData = $util.newBuffer(object.rawData);\n                }\n                object.docString = \"\";\n                object.dataLocation = options.enums === String ? \"DEFAULT\" : 0;\n            }\n            if (message.dims && message.dims.length) {\n                object.dims = [];\n                for (var j = 0; j < message.dims.length; ++j)\n                    if (typeof message.dims[j] === \"number\")\n                        object.dims[j] = options.longs === String ? String(message.dims[j]) : message.dims[j];\n                    else\n                        object.dims[j] = options.longs === String ? $util.Long.prototype.toString.call(message.dims[j]) : options.longs === Number ? new $util.LongBits(message.dims[j].low >>> 0, message.dims[j].high >>> 0).toNumber() : message.dims[j];\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                object.dataType = message.dataType;\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                object.segment = $root.onnx.TensorProto.Segment.toObject(message.segment, options);\n            if (message.floatData && message.floatData.length) {\n                object.floatData = [];\n                for (var j = 0; j < message.floatData.length; ++j)\n                    object.floatData[j] = options.json && !isFinite(message.floatData[j]) ? String(message.floatData[j]) : message.floatData[j];\n            }\n            if (message.int32Data && message.int32Data.length) {\n                object.int32Data = [];\n                for (var j = 0; j < message.int32Data.length; ++j)\n                    object.int32Data[j] = message.int32Data[j];\n            }\n            if (message.stringData && message.stringData.length) {\n                object.stringData = [];\n                for (var j = 0; j < message.stringData.length; ++j)\n                    object.stringData[j] = options.bytes === String ? $util.base64.encode(message.stringData[j], 0, message.stringData[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.stringData[j]) : message.stringData[j];\n            }\n            if (message.int64Data && message.int64Data.length) {\n                object.int64Data = [];\n                for (var j = 0; j < message.int64Data.length; ++j)\n                    if (typeof message.int64Data[j] === \"number\")\n                        object.int64Data[j] = options.longs === String ? String(message.int64Data[j]) : message.int64Data[j];\n                    else\n                        object.int64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.int64Data[j]) : options.longs === Number ? new $util.LongBits(message.int64Data[j].low >>> 0, message.int64Data[j].high >>> 0).toNumber() : message.int64Data[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                object.rawData = options.bytes === String ? $util.base64.encode(message.rawData, 0, message.rawData.length) : options.bytes === Array ? Array.prototype.slice.call(message.rawData) : message.rawData;\n            if (message.doubleData && message.doubleData.length) {\n                object.doubleData = [];\n                for (var j = 0; j < message.doubleData.length; ++j)\n                    object.doubleData[j] = options.json && !isFinite(message.doubleData[j]) ? String(message.doubleData[j]) : message.doubleData[j];\n            }\n            if (message.uint64Data && message.uint64Data.length) {\n                object.uint64Data = [];\n                for (var j = 0; j < message.uint64Data.length; ++j)\n                    if (typeof message.uint64Data[j] === \"number\")\n                        object.uint64Data[j] = options.longs === String ? String(message.uint64Data[j]) : message.uint64Data[j];\n                    else\n                        object.uint64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.uint64Data[j]) : options.longs === Number ? new $util.LongBits(message.uint64Data[j].low >>> 0, message.uint64Data[j].high >>> 0).toNumber(true) : message.uint64Data[j];\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.externalData && message.externalData.length) {\n                object.externalData = [];\n                for (var j = 0; j < message.externalData.length; ++j)\n                    object.externalData[j] = $root.onnx.StringStringEntryProto.toObject(message.externalData[j], options);\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                object.dataLocation = options.enums === String ? $root.onnx.TensorProto.DataLocation[message.dataLocation] : message.dataLocation;\n            return object;\n        };\n\n        /**\n         * Converts this TensorProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * DataType enum.\n         * @name onnx.TensorProto.DataType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} UINT8=2 UINT8 value\n         * @property {number} INT8=3 INT8 value\n         * @property {number} UINT16=4 UINT16 value\n         * @property {number} INT16=5 INT16 value\n         * @property {number} INT32=6 INT32 value\n         * @property {number} INT64=7 INT64 value\n         * @property {number} STRING=8 STRING value\n         * @property {number} BOOL=9 BOOL value\n         * @property {number} FLOAT16=10 FLOAT16 value\n         * @property {number} DOUBLE=11 DOUBLE value\n         * @property {number} UINT32=12 UINT32 value\n         * @property {number} UINT64=13 UINT64 value\n         * @property {number} COMPLEX64=14 COMPLEX64 value\n         * @property {number} COMPLEX128=15 COMPLEX128 value\n         * @property {number} BFLOAT16=16 BFLOAT16 value\n         */\n        TensorProto.DataType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"UINT8\"] = 2;\n            values[valuesById[3] = \"INT8\"] = 3;\n            values[valuesById[4] = \"UINT16\"] = 4;\n            values[valuesById[5] = \"INT16\"] = 5;\n            values[valuesById[6] = \"INT32\"] = 6;\n            values[valuesById[7] = \"INT64\"] = 7;\n            values[valuesById[8] = \"STRING\"] = 8;\n            values[valuesById[9] = \"BOOL\"] = 9;\n            values[valuesById[10] = \"FLOAT16\"] = 10;\n            values[valuesById[11] = \"DOUBLE\"] = 11;\n            values[valuesById[12] = \"UINT32\"] = 12;\n            values[valuesById[13] = \"UINT64\"] = 13;\n            values[valuesById[14] = \"COMPLEX64\"] = 14;\n            values[valuesById[15] = \"COMPLEX128\"] = 15;\n            values[valuesById[16] = \"BFLOAT16\"] = 16;\n            return values;\n        })();\n\n        TensorProto.Segment = (function() {\n\n            /**\n             * Properties of a Segment.\n             * @memberof onnx.TensorProto\n             * @interface ISegment\n             * @property {number|Long|null} [begin] Segment begin\n             * @property {number|Long|null} [end] Segment end\n             */\n\n            /**\n             * Constructs a new Segment.\n             * @memberof onnx.TensorProto\n             * @classdesc Represents a Segment.\n             * @implements ISegment\n             * @constructor\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             */\n            function Segment(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Segment begin.\n             * @member {number|Long} begin\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.begin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Segment end.\n             * @member {number|Long} end\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.end = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Creates a new Segment instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             * @returns {onnx.TensorProto.Segment} Segment instance\n             */\n            Segment.create = function create(properties) {\n                return new Segment(properties);\n            };\n\n            /**\n             * Encodes the specified Segment message. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.begin);\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.end);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Segment message, length delimited. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto.Segment();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.begin = reader.int64();\n                        break;\n                    case 2:\n                        message.end = reader.int64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Segment message.\n             * @function verify\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Segment.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (!$util.isInteger(message.begin) && !(message.begin && $util.isInteger(message.begin.low) && $util.isInteger(message.begin.high)))\n                        return \"begin: integer|Long expected\";\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (!$util.isInteger(message.end) && !(message.end && $util.isInteger(message.end.low) && $util.isInteger(message.end.high)))\n                        return \"end: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Segment message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorProto.Segment} Segment\n             */\n            Segment.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorProto.Segment)\n                    return object;\n                var message = new $root.onnx.TensorProto.Segment();\n                if (object.begin != null)\n                    if ($util.Long)\n                        (message.begin = $util.Long.fromValue(object.begin)).unsigned = false;\n                    else if (typeof object.begin === \"string\")\n                        message.begin = parseInt(object.begin, 10);\n                    else if (typeof object.begin === \"number\")\n                        message.begin = object.begin;\n                    else if (typeof object.begin === \"object\")\n                        message.begin = new $util.LongBits(object.begin.low >>> 0, object.begin.high >>> 0).toNumber();\n                if (object.end != null)\n                    if ($util.Long)\n                        (message.end = $util.Long.fromValue(object.end)).unsigned = false;\n                    else if (typeof object.end === \"string\")\n                        message.end = parseInt(object.end, 10);\n                    else if (typeof object.end === \"number\")\n                        message.end = object.end;\n                    else if (typeof object.end === \"object\")\n                        message.end = new $util.LongBits(object.end.low >>> 0, object.end.high >>> 0).toNumber();\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Segment message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.Segment} message Segment\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Segment.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.begin = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.begin = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.end = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.end = options.longs === String ? \"0\" : 0;\n                }\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (typeof message.begin === \"number\")\n                        object.begin = options.longs === String ? String(message.begin) : message.begin;\n                    else\n                        object.begin = options.longs === String ? $util.Long.prototype.toString.call(message.begin) : options.longs === Number ? new $util.LongBits(message.begin.low >>> 0, message.begin.high >>> 0).toNumber() : message.begin;\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (typeof message.end === \"number\")\n                        object.end = options.longs === String ? String(message.end) : message.end;\n                    else\n                        object.end = options.longs === String ? $util.Long.prototype.toString.call(message.end) : options.longs === Number ? new $util.LongBits(message.end.low >>> 0, message.end.high >>> 0).toNumber() : message.end;\n                return object;\n            };\n\n            /**\n             * Converts this Segment to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Segment.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Segment;\n        })();\n\n        /**\n         * DataLocation enum.\n         * @name onnx.TensorProto.DataLocation\n         * @enum {string}\n         * @property {number} DEFAULT=0 DEFAULT value\n         * @property {number} EXTERNAL=1 EXTERNAL value\n         */\n        TensorProto.DataLocation = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"DEFAULT\"] = 0;\n            values[valuesById[1] = \"EXTERNAL\"] = 1;\n            return values;\n        })();\n\n        return TensorProto;\n    })();\n\n    onnx.TensorShapeProto = (function() {\n\n        /**\n         * Properties of a TensorShapeProto.\n         * @memberof onnx\n         * @interface ITensorShapeProto\n         * @property {Array.<onnx.TensorShapeProto.IDimension>|null} [dim] TensorShapeProto dim\n         */\n\n        /**\n         * Constructs a new TensorShapeProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorShapeProto.\n         * @implements ITensorShapeProto\n         * @constructor\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         */\n        function TensorShapeProto(properties) {\n            this.dim = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorShapeProto dim.\n         * @member {Array.<onnx.TensorShapeProto.IDimension>} dim\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         */\n        TensorShapeProto.prototype.dim = $util.emptyArray;\n\n        /**\n         * Creates a new TensorShapeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         * @returns {onnx.TensorShapeProto} TensorShapeProto instance\n         */\n        TensorShapeProto.create = function create(properties) {\n            return new TensorShapeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dim != null && message.dim.length)\n                for (var i = 0; i < message.dim.length; ++i)\n                    $root.onnx.TensorShapeProto.Dimension.encode(message.dim[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dim && message.dim.length))\n                        message.dim = [];\n                    message.dim.push($root.onnx.TensorShapeProto.Dimension.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorShapeProto message.\n         * @function verify\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorShapeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dim != null && message.hasOwnProperty(\"dim\")) {\n                if (!Array.isArray(message.dim))\n                    return \"dim: array expected\";\n                for (var i = 0; i < message.dim.length; ++i) {\n                    var error = $root.onnx.TensorShapeProto.Dimension.verify(message.dim[i]);\n                    if (error)\n                        return \"dim.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorShapeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         */\n        TensorShapeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorShapeProto)\n                return object;\n            var message = new $root.onnx.TensorShapeProto();\n            if (object.dim) {\n                if (!Array.isArray(object.dim))\n                    throw TypeError(\".onnx.TensorShapeProto.dim: array expected\");\n                message.dim = [];\n                for (var i = 0; i < object.dim.length; ++i) {\n                    if (typeof object.dim[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorShapeProto.dim: object expected\");\n                    message.dim[i] = $root.onnx.TensorShapeProto.Dimension.fromObject(object.dim[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorShapeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.TensorShapeProto} message TensorShapeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorShapeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.dim = [];\n            if (message.dim && message.dim.length) {\n                object.dim = [];\n                for (var j = 0; j < message.dim.length; ++j)\n                    object.dim[j] = $root.onnx.TensorShapeProto.Dimension.toObject(message.dim[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorShapeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorShapeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TensorShapeProto.Dimension = (function() {\n\n            /**\n             * Properties of a Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @interface IDimension\n             * @property {number|Long|null} [dimValue] Dimension dimValue\n             * @property {string|null} [dimParam] Dimension dimParam\n             * @property {string|null} [denotation] Dimension denotation\n             */\n\n            /**\n             * Constructs a new Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @classdesc Represents a Dimension.\n             * @implements IDimension\n             * @constructor\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             */\n            function Dimension(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Dimension dimValue.\n             * @member {number|Long} dimValue\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Dimension dimParam.\n             * @member {string} dimParam\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimParam = \"\";\n\n            /**\n             * Dimension denotation.\n             * @member {string} denotation\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.denotation = \"\";\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * Dimension value.\n             * @member {\"dimValue\"|\"dimParam\"|undefined} value\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Object.defineProperty(Dimension.prototype, \"value\", {\n                get: $util.oneOfGetter($oneOfFields = [\"dimValue\", \"dimParam\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new Dimension instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension instance\n             */\n            Dimension.create = function create(properties) {\n                return new Dimension(properties);\n            };\n\n            /**\n             * Encodes the specified Dimension message. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.dimValue);\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.dimParam);\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.denotation);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Dimension message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto.Dimension();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dimValue = reader.int64();\n                        break;\n                    case 2:\n                        message.dimParam = reader.string();\n                        break;\n                    case 3:\n                        message.denotation = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Dimension message.\n             * @function verify\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Dimension.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                var properties = {};\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    properties.value = 1;\n                    if (!$util.isInteger(message.dimValue) && !(message.dimValue && $util.isInteger(message.dimValue.low) && $util.isInteger(message.dimValue.high)))\n                        return \"dimValue: integer|Long expected\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    if (properties.value === 1)\n                        return \"value: multiple values\";\n                    properties.value = 1;\n                    if (!$util.isString(message.dimParam))\n                        return \"dimParam: string expected\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    if (!$util.isString(message.denotation))\n                        return \"denotation: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Dimension message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             */\n            Dimension.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorShapeProto.Dimension)\n                    return object;\n                var message = new $root.onnx.TensorShapeProto.Dimension();\n                if (object.dimValue != null)\n                    if ($util.Long)\n                        (message.dimValue = $util.Long.fromValue(object.dimValue)).unsigned = false;\n                    else if (typeof object.dimValue === \"string\")\n                        message.dimValue = parseInt(object.dimValue, 10);\n                    else if (typeof object.dimValue === \"number\")\n                        message.dimValue = object.dimValue;\n                    else if (typeof object.dimValue === \"object\")\n                        message.dimValue = new $util.LongBits(object.dimValue.low >>> 0, object.dimValue.high >>> 0).toNumber();\n                if (object.dimParam != null)\n                    message.dimParam = String(object.dimParam);\n                if (object.denotation != null)\n                    message.denotation = String(object.denotation);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Dimension message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.Dimension} message Dimension\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Dimension.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.denotation = \"\";\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    if (typeof message.dimValue === \"number\")\n                        object.dimValue = options.longs === String ? String(message.dimValue) : message.dimValue;\n                    else\n                        object.dimValue = options.longs === String ? $util.Long.prototype.toString.call(message.dimValue) : options.longs === Number ? new $util.LongBits(message.dimValue.low >>> 0, message.dimValue.high >>> 0).toNumber() : message.dimValue;\n                    if (options.oneofs)\n                        object.value = \"dimValue\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    object.dimParam = message.dimParam;\n                    if (options.oneofs)\n                        object.value = \"dimParam\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    object.denotation = message.denotation;\n                return object;\n            };\n\n            /**\n             * Converts this Dimension to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Dimension.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Dimension;\n        })();\n\n        return TensorShapeProto;\n    })();\n\n    onnx.TypeProto = (function() {\n\n        /**\n         * Properties of a TypeProto.\n         * @memberof onnx\n         * @interface ITypeProto\n         * @property {onnx.TypeProto.ITensor|null} [tensorType] TypeProto tensorType\n         * @property {string|null} [denotation] TypeProto denotation\n         */\n\n        /**\n         * Constructs a new TypeProto.\n         * @memberof onnx\n         * @classdesc Represents a TypeProto.\n         * @implements ITypeProto\n         * @constructor\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         */\n        function TypeProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TypeProto tensorType.\n         * @member {onnx.TypeProto.ITensor|null|undefined} tensorType\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.tensorType = null;\n\n        /**\n         * TypeProto denotation.\n         * @member {string} denotation\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.denotation = \"\";\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * TypeProto value.\n         * @member {\"tensorType\"|undefined} value\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        Object.defineProperty(TypeProto.prototype, \"value\", {\n            get: $util.oneOfGetter($oneOfFields = [\"tensorType\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new TypeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         * @returns {onnx.TypeProto} TypeProto instance\n         */\n        TypeProto.create = function create(properties) {\n            return new TypeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TypeProto message. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\"))\n                $root.onnx.TypeProto.Tensor.encode(message.tensorType, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.denotation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TypeProto message, length delimited. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorType = $root.onnx.TypeProto.Tensor.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.denotation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TypeProto message.\n         * @function verify\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TypeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                properties.value = 1;\n                {\n                    var error = $root.onnx.TypeProto.Tensor.verify(message.tensorType);\n                    if (error)\n                        return \"tensorType.\" + error;\n                }\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                if (!$util.isString(message.denotation))\n                    return \"denotation: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TypeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TypeProto} TypeProto\n         */\n        TypeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TypeProto)\n                return object;\n            var message = new $root.onnx.TypeProto();\n            if (object.tensorType != null) {\n                if (typeof object.tensorType !== \"object\")\n                    throw TypeError(\".onnx.TypeProto.tensorType: object expected\");\n                message.tensorType = $root.onnx.TypeProto.Tensor.fromObject(object.tensorType);\n            }\n            if (object.denotation != null)\n                message.denotation = String(object.denotation);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TypeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.TypeProto} message TypeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TypeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.denotation = \"\";\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                object.tensorType = $root.onnx.TypeProto.Tensor.toObject(message.tensorType, options);\n                if (options.oneofs)\n                    object.value = \"tensorType\";\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                object.denotation = message.denotation;\n            return object;\n        };\n\n        /**\n         * Converts this TypeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TypeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TypeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TypeProto.Tensor = (function() {\n\n            /**\n             * Properties of a Tensor.\n             * @memberof onnx.TypeProto\n             * @interface ITensor\n             * @property {number|null} [elemType] Tensor elemType\n             * @property {onnx.ITensorShapeProto|null} [shape] Tensor shape\n             */\n\n            /**\n             * Constructs a new Tensor.\n             * @memberof onnx.TypeProto\n             * @classdesc Represents a Tensor.\n             * @implements ITensor\n             * @constructor\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             */\n            function Tensor(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Tensor elemType.\n             * @member {number} elemType\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.elemType = 0;\n\n            /**\n             * Tensor shape.\n             * @member {onnx.ITensorShapeProto|null|undefined} shape\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.shape = null;\n\n            /**\n             * Creates a new Tensor instance using the specified properties.\n             * @function create\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             * @returns {onnx.TypeProto.Tensor} Tensor instance\n             */\n            Tensor.create = function create(properties) {\n                return new Tensor(properties);\n            };\n\n            /**\n             * Encodes the specified Tensor message. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.elemType);\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    $root.onnx.TensorShapeProto.encode(message.shape, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Tensor message, length delimited. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto.Tensor();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.elemType = reader.int32();\n                        break;\n                    case 2:\n                        message.shape = $root.onnx.TensorShapeProto.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Tensor message.\n             * @function verify\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Tensor.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    if (!$util.isInteger(message.elemType))\n                        return \"elemType: integer expected\";\n                if (message.shape != null && message.hasOwnProperty(\"shape\")) {\n                    var error = $root.onnx.TensorShapeProto.verify(message.shape);\n                    if (error)\n                        return \"shape.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Tensor message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             */\n            Tensor.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TypeProto.Tensor)\n                    return object;\n                var message = new $root.onnx.TypeProto.Tensor();\n                if (object.elemType != null)\n                    message.elemType = object.elemType | 0;\n                if (object.shape != null) {\n                    if (typeof object.shape !== \"object\")\n                        throw TypeError(\".onnx.TypeProto.Tensor.shape: object expected\");\n                    message.shape = $root.onnx.TensorShapeProto.fromObject(object.shape);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Tensor message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.Tensor} message Tensor\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Tensor.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.elemType = 0;\n                    object.shape = null;\n                }\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    object.elemType = message.elemType;\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    object.shape = $root.onnx.TensorShapeProto.toObject(message.shape, options);\n                return object;\n            };\n\n            /**\n             * Converts this Tensor to JSON.\n             * @function toJSON\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Tensor.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Tensor;\n        })();\n\n        return TypeProto;\n    })();\n\n    onnx.OperatorSetIdProto = (function() {\n\n        /**\n         * Properties of an OperatorSetIdProto.\n         * @memberof onnx\n         * @interface IOperatorSetIdProto\n         * @property {string|null} [domain] OperatorSetIdProto domain\n         * @property {number|Long|null} [version] OperatorSetIdProto version\n         */\n\n        /**\n         * Constructs a new OperatorSetIdProto.\n         * @memberof onnx\n         * @classdesc Represents an OperatorSetIdProto.\n         * @implements IOperatorSetIdProto\n         * @constructor\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         */\n        function OperatorSetIdProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * OperatorSetIdProto domain.\n         * @member {string} domain\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.domain = \"\";\n\n        /**\n         * OperatorSetIdProto version.\n         * @member {number|Long} version\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new OperatorSetIdProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto instance\n         */\n        OperatorSetIdProto.create = function create(properties) {\n            return new OperatorSetIdProto(properties);\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domain);\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.version);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message, length delimited. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.OperatorSetIdProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.domain = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an OperatorSetIdProto message.\n         * @function verify\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        OperatorSetIdProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))\n                    return \"version: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates an OperatorSetIdProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         */\n        OperatorSetIdProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.OperatorSetIdProto)\n                return object;\n            var message = new $root.onnx.OperatorSetIdProto();\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.version != null)\n                if ($util.Long)\n                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;\n                else if (typeof object.version === \"string\")\n                    message.version = parseInt(object.version, 10);\n                else if (typeof object.version === \"number\")\n                    message.version = object.version;\n                else if (typeof object.version === \"object\")\n                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an OperatorSetIdProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.OperatorSetIdProto} message OperatorSetIdProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        OperatorSetIdProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.version = options.longs === String ? \"0\" : 0;\n            }\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (typeof message.version === \"number\")\n                    object.version = options.longs === String ? String(message.version) : message.version;\n                else\n                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;\n            return object;\n        };\n\n        /**\n         * Converts this OperatorSetIdProto to JSON.\n         * @function toJSON\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        OperatorSetIdProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OperatorSetIdProto;\n    })();\n\n    return onnx;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable import/no-internal-modules */\nimport {Backend, InferenceSession, SessionHandler} from 'onnxruntime-common';\n\nimport {Session} from './onnxjs/session';\nimport {OnnxjsSessionHandler} from './onnxjs/session-handler';\n\nclass OnnxjsBackend implements Backend {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  async init(): Promise<void> {}\n\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    // NOTE: Session.Config(from onnx.js) is not compatible with InferenceSession.SessionOptions(from\n    // onnxruntime-common).\n    //       In future we should remove Session.Config and use InferenceSession.SessionOptions.\n    //       Currently we allow this to happen to make test runner work.\n    const session = new Session(options as unknown as Session.Config);\n\n    // typescript cannot merge method override correctly (so far in 4.2.3). need if-else to call the method.\n    if (typeof pathOrBuffer === 'string') {\n      await session.loadModel(pathOrBuffer);\n    } else {\n      await session.loadModel(pathOrBuffer);\n    }\n\n    return new OnnxjsSessionHandler(session);\n  }\n}\n\nexport const onnxjsBackend = new OnnxjsBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\n\nimport {initWasm} from './wasm/proxy-wrapper';\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initWasm();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow terser to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow terser remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend} from 'onnxruntime-common';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = require('./backend-wasm').wasmBackend;\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n  registerBackend('xnnpack', wasmBackend, 9);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\nimport {decodeUtf8String, LongUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Attribute {\n  export interface DataTypeMap {\n    float: number;\n    int: number;\n    string: string;\n    tensor: Tensor;\n    floats: number[];\n    ints: number[];\n    strings: string[];\n    tensors: Tensor[];\n  }\n\n  export type DataType = keyof DataTypeMap;\n}\n\ntype ValueTypes = Attribute.DataTypeMap[Attribute.DataType];\n\ntype Value = [ValueTypes, Attribute.DataType];\n\nexport class Attribute {\n  constructor(attributes: onnx.IAttributeProto[]|ortFbs.Attribute[]|null|undefined) {\n    this._attributes = new Map();\n    if (attributes !== null && attributes !== undefined) {\n      for (const attr of attributes) {\n        if (attr instanceof onnx.AttributeProto) {\n          this._attributes.set(attr.name, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        } else if (attr instanceof ortFbs.Attribute) {\n          this._attributes.set(attr.name()!, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        }\n      }\n      if (this._attributes.size < attributes.length) {\n        throw new Error('duplicated attribute names');\n      }\n    }\n  }\n\n  set(key: string, type: Attribute.DataType, value: ValueTypes): void {\n    this._attributes.set(key, [value, type]);\n  }\n  delete(key: string): void {\n    this._attributes.delete(key);\n  }\n  getFloat(key: string, defaultValue?: Attribute.DataTypeMap['float']) {\n    return this.get(key, 'float', defaultValue);\n  }\n\n  getInt(key: string, defaultValue?: Attribute.DataTypeMap['int']) {\n    return this.get(key, 'int', defaultValue);\n  }\n\n  getString(key: string, defaultValue?: Attribute.DataTypeMap['string']) {\n    return this.get(key, 'string', defaultValue);\n  }\n\n  getTensor(key: string, defaultValue?: Attribute.DataTypeMap['tensor']) {\n    return this.get(key, 'tensor', defaultValue);\n  }\n\n  getFloats(key: string, defaultValue?: Attribute.DataTypeMap['floats']) {\n    return this.get(key, 'floats', defaultValue);\n  }\n\n  getInts(key: string, defaultValue?: Attribute.DataTypeMap['ints']) {\n    return this.get(key, 'ints', defaultValue);\n  }\n\n  getStrings(key: string, defaultValue?: Attribute.DataTypeMap['strings']) {\n    return this.get(key, 'strings', defaultValue);\n  }\n\n  getTensors(key: string, defaultValue?: Attribute.DataTypeMap['tensors']) {\n    return this.get(key, 'tensors', defaultValue);\n  }\n\n  private get<V extends Attribute.DataTypeMap[Attribute.DataType]>(\n      key: string, type: Attribute.DataType, defaultValue?: V): V {\n    const valueAndType = this._attributes.get(key);\n    if (valueAndType === undefined) {\n      if (defaultValue !== undefined) {\n        return defaultValue;\n      }\n      throw new Error(`required attribute not found: ${key}`);\n    }\n    if (valueAndType[1] !== type) {\n      throw new Error(`type mismatch: expected ${type} but got ${valueAndType[1]}`);\n    }\n    return valueAndType[0] as V;\n  }\n\n  private static getType(attr: onnx.IAttributeProto|ortFbs.Attribute): Attribute.DataType {\n    const type = attr instanceof onnx.AttributeProto ? (attr).type : (attr as ortFbs.Attribute).type();\n    switch (type) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return 'float';\n      case onnx.AttributeProto.AttributeType.INT:\n        return 'int';\n      case onnx.AttributeProto.AttributeType.STRING:\n        return 'string';\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return 'tensor';\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return 'floats';\n      case onnx.AttributeProto.AttributeType.INTS:\n        return 'ints';\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return 'strings';\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return 'tensors';\n      default:\n        throw new Error(`attribute type is not supported yet: ${onnx.AttributeProto.AttributeType[type]}`);\n    }\n  }\n\n  private static getValue(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    const attrType = attr instanceof onnx.AttributeProto ? attr.type : (attr as ortFbs.Attribute).type();\n    if (attrType === onnx.AttributeProto.AttributeType.GRAPH || attrType === onnx.AttributeProto.AttributeType.GRAPHS) {\n      throw new Error('graph attribute is not supported yet');\n    }\n\n    const value = this.getValueNoCheck(attr);\n\n    // cast LONG to number\n    if (attrType === onnx.AttributeProto.AttributeType.INT && LongUtil.isLong(value)) {\n      return LongUtil.longToNumber(value as Long | flatbuffers.Long);\n    }\n\n    // cast LONG[] to number[]\n    if (attrType === onnx.AttributeProto.AttributeType.INTS) {\n      const arr = (value as Array<number|Long|flatbuffers.Long>);\n      const numberValue: number[] = new Array<number>(arr.length);\n\n      for (let i = 0; i < arr.length; i++) {\n        const maybeLong = arr[i];\n        numberValue[i] = LongUtil.longToNumber(maybeLong);\n      }\n\n      return numberValue;\n    }\n\n    // cast onnx.TensorProto to onnxjs.Tensor\n    if (attrType === onnx.AttributeProto.AttributeType.TENSOR) {\n      return attr instanceof onnx.AttributeProto ? Tensor.fromProto(value as onnx.ITensorProto) :\n                                                   Tensor.fromOrtTensor(value as ortFbs.Tensor);\n    }\n\n    // cast onnx.TensorProto[] to onnxjs.Tensor[]\n    if (attrType === onnx.AttributeProto.AttributeType.TENSORS) {\n      if (attr instanceof onnx.AttributeProto) {\n        const tensorProtos = value as onnx.ITensorProto[];\n        return tensorProtos.map(value => Tensor.fromProto(value));\n      } else if (attr instanceof ortFbs.Attribute) {\n        const tensorProtos = value as ortFbs.Tensor[];\n        return tensorProtos.map(value => Tensor.fromOrtTensor(value));\n      }\n    }\n\n    // cast Uint8Array to string\n    if (attrType === onnx.AttributeProto.AttributeType.STRING) {\n      // string in onnx attribute is of uint8array type, so we need to convert it to string below. While in ort format,\n      // string attributes are returned as string, so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8String = value as Uint8Array;\n        return decodeUtf8String(utf8String);\n      }\n    }\n\n    // cast Uint8Array[] to string[]\n    if (attrType === onnx.AttributeProto.AttributeType.STRINGS) {\n      // strings in onnx attribute is returned as uint8array[], so we need to convert it to string[] below. While in ort\n      // format strings attributes are returned as string[], so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8Strings = value as Uint8Array[];\n        return utf8Strings.map(decodeUtf8String);\n      }\n    }\n\n    return value as ValueTypes;\n  }\n\n  private static getValueNoCheck(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    return attr instanceof (onnx.AttributeProto) ? this.getValueNoCheckFromOnnxFormat(attr) :\n                                                   this.getValueNoCheckFromOrtFormat(attr as ortFbs.Attribute);\n  }\n\n  private static getValueNoCheckFromOnnxFormat(attr: onnx.IAttributeProto) {\n    switch (attr.type!) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return attr.f;\n      case onnx.AttributeProto.AttributeType.INT:\n        return attr.i;\n      case onnx.AttributeProto.AttributeType.STRING:\n        return attr.s;\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return attr.t;\n      case onnx.AttributeProto.AttributeType.GRAPH:\n        return attr.g;\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return attr.floats;\n      case onnx.AttributeProto.AttributeType.INTS:\n        return attr.ints;\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return attr.strings;\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return attr.tensors;\n      case onnx.AttributeProto.AttributeType.GRAPHS:\n        return attr.graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${onnx.AttributeProto.AttributeType[attr.type!]}`);\n    }\n  }\n\n  private static getValueNoCheckFromOrtFormat(attr: ortFbs.Attribute) {\n    switch (attr.type()) {\n      case ortFbs.AttributeType.FLOAT:\n        return attr.f();\n      case ortFbs.AttributeType.INT:\n        return attr.i();\n      case ortFbs.AttributeType.STRING:\n        return attr.s();\n      case ortFbs.AttributeType.TENSOR:\n        return attr.t();\n      case ortFbs.AttributeType.GRAPH:\n        return attr.g();\n      case ortFbs.AttributeType.FLOATS:\n        return attr.floatsArray();\n      case ortFbs.AttributeType.INTS: {\n        const ints = [];\n        for (let i = 0; i < attr.intsLength(); i++) {\n          ints.push(attr.ints(i)!);\n        }\n        return ints;\n      }\n      case ortFbs.AttributeType.STRINGS: {\n        const strings = [];\n        for (let i = 0; i < attr.stringsLength(); i++) {\n          strings.push(attr.strings(i));\n        }\n        return strings;\n      }\n      case ortFbs.AttributeType.TENSORS: {\n        const tensors = [];\n        for (let i = 0; i < attr.tensorsLength(); i++) {\n          tensors.push(attr.tensors(i)!);\n        }\n        return tensors;\n      }\n      // case ortFbs.AttributeType.GRAPHS:\n      // TODO: Subgraph not supported yet.\n      // const graphs = [];\n      // for (let i = 0; i < attr.graphsLength(); i++) {\n      //   graphs.push(attr.graphs(i)!);\n      // }\n      // return graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${ortFbs.AttributeType[attr.type()]}`);\n    }\n  }\n\n  protected _attributes: Map<string, Value>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGLBackend} from './backends/backend-webgl';\nimport {Graph} from './graph';\nimport {Operator} from './operators';\nimport {OpSet} from './opset';\nimport {Session} from './session';\n\nexport interface InferenceHandler {\n  /**\n   * dispose the inference handler. it will be called as the last step in Session.run()\n   */\n  dispose(): void;\n}\n\nexport interface SessionHandler {\n  /**\n   * transform the graph at initialization time\n   * @param graphTransformer the graph transformer to manipulate the model graph\n   */\n  transformGraph?(graphTransformer: Graph.Transformer): void;\n\n  /**\n   * create an instance of InferenceHandler to use in a Session.run() call\n   */\n  createInferenceHandler(): InferenceHandler;\n\n  /**\n   * dispose the session handler. it will be called when a session is being disposed explicitly\n   */\n  dispose(): void;\n\n  /**\n   * Resolves the operator from the name and opset version; backend specific\n   * @param node the node to resolve\n   * @param opsets a list of opsets that exported from the model\n   * @param graph the completely initialized graph\n   */\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator;\n\n  /**\n   * This method let's the sessionHandler know that the graph initialization is complete\n   * @param graph the completely initialized graph\n   */\n  onGraphInitialized?(graph: Graph): void;\n\n  /**\n   * a reference to the corresponding backend\n   */\n  readonly backend: Backend;\n\n  /**\n   * a reference to the session context\n   */\n  readonly context: Session.Context;\n}\n\nexport interface Backend {\n  /**\n   * initialize the backend. will be called only once, when the first time the\n   * backend it to be used\n   */\n  initialize(): boolean|Promise<boolean>;\n\n  /**\n   * create an instance of SessionHandler to use in a Session object's lifecycle\n   */\n  createSessionHandler(context: Session.Context): SessionHandler;\n\n  /**\n   * dispose the backend. currently this will not be called\n   */\n  dispose(): void;\n}\n\n// caches all initialized backend instances\nconst backendsCache: Map<string, Backend> = new Map();\n\nexport const backend: {[name: string]: Backend} = {\n  webgl: new WebGLBackend(),\n};\n\n/**\n * Resolve a reference to the backend. If a hint is specified, the corresponding\n * backend will be used.\n */\nexport async function resolveBackend(hint?: string|readonly string[]): Promise<Backend> {\n  if (!hint) {\n    return resolveBackend(['webgl']);\n  } else {\n    const hints = typeof hint === 'string' ? [hint] : hint;\n\n    for (const backendHint of hints) {\n      const cache = backendsCache.get(backendHint);\n      if (cache) {\n        return cache;\n      }\n\n      const backend = await tryLoadBackend(backendHint);\n      if (backend) {\n        return backend;\n      }\n    }\n  }\n\n  throw new Error('no available backend to use');\n}\n\nasync function tryLoadBackend(backendHint: string): Promise<Backend|undefined> {\n  const backendObj = backend;\n\n  if (typeof backendObj[backendHint] !== 'undefined' && isBackend(backendObj[backendHint])) {\n    const backend = backendObj[backendHint];\n    let init = backend.initialize();\n    if (typeof init === 'object' && 'then' in init) {\n      init = await init;\n    }\n    if (init) {\n      backendsCache.set(backendHint, backend);\n      return backend;\n    }\n  }\n\n  return undefined;\n}\n\nfunction isBackend(obj: unknown) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const o = obj as any;\n\n  // check if an object is a Backend instance\n  if (\n      'initialize' in o && typeof o.initialize === 'function' &&                      // initialize()\n      'createSessionHandler' in o && typeof o.createSessionHandler === 'function' &&  // createSessionHandler()\n      'dispose' in o && typeof o.dispose === 'function'                               // dispose()\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport type BackendType = Backend;\nexport type SessionHandlerType = ReturnType<BackendType['createSessionHandler']>;\nexport type InferenceHandlerType = ReturnType<SessionHandlerType['createInferenceHandler']>;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport {Backend, SessionHandler} from '../backend';\nimport {Logger} from '../instrument';\nimport {Session} from '../session';\n\nimport {WebGLSessionHandler} from './webgl/session-handler';\nimport {WebGLContext} from './webgl/webgl-context';\nimport {createWebGLContext} from './webgl/webgl-context-factory';\n\n/**\n * WebGLBackend is the entry point for all WebGL opeartions\n * When it starts it created the WebGLRenderingContext\n * and other main framework components such as Program and Texture Managers\n */\nexport class WebGLBackend implements Backend {\n  glContext: WebGLContext;\n\n  get contextId(): 'webgl'|'webgl2'|undefined {\n    return env.webgl.contextId;\n  }\n  set contextId(value: 'webgl'|'webgl2'|undefined) {\n    env.webgl.contextId = value;\n  }\n\n  get matmulMaxBatchSize(): number|undefined {\n    return env.webgl.matmulMaxBatchSize;\n  }\n  set matmulMaxBatchSize(value: number|undefined) {\n    env.webgl.matmulMaxBatchSize = value;\n  }\n\n  get textureCacheMode(): 'initializerOnly'|'full'|undefined {\n    return env.webgl.textureCacheMode;\n  }\n  set textureCacheMode(value: 'initializerOnly'|'full'|undefined) {\n    env.webgl.textureCacheMode = value;\n  }\n\n  get pack(): boolean|undefined {\n    return env.webgl.pack;\n  }\n  set pack(value: boolean|undefined) {\n    env.webgl.pack = value;\n  }\n\n  get async(): boolean|undefined {\n    return env.webgl.async;\n  }\n  set async(value: boolean|undefined) {\n    env.webgl.async = value;\n  }\n\n  initialize(): boolean {\n    try {\n      this.glContext = createWebGLContext(this.contextId);\n      if (typeof this.matmulMaxBatchSize !== 'number') {\n        this.matmulMaxBatchSize = 16;\n      }\n      if (typeof this.textureCacheMode !== 'string') {\n        this.textureCacheMode = 'full';\n      }\n      if (typeof this.pack !== 'boolean') {\n        this.pack = false;\n      }\n      if (typeof this.async !== 'boolean') {\n        this.async = false;\n      }\n\n      Logger.setWithEnv(env);\n\n      Logger.verbose(\n          'WebGLBackend',\n          `Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${\n              this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${\n              this.async}.`);\n      return true;\n    } catch (e) {\n      Logger.warning('WebGLBackend', `Unable to initialize WebGLBackend. ${e}`);\n      return false;\n    }\n  }\n  createSessionHandler(context: Session.Context): SessionHandler {\n    return new WebGLSessionHandler(this, context);\n  }\n  dispose(): void {\n    this.glContext.dispose();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ArrayUtil, BroadcastUtil, ShapeUtil} from '../../util';\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\nimport {squeezeShape} from './texture-layout-strategy';\nimport {TextureLayout} from './types';\nimport {generateShaderFuncNameFromInputSamplerName, generateShaderFuncNameFromInputSamplerNameAtOutCoords, getCoordsDataType, getGlChannels, getSqueezedParams, squeezeInputShape} from './utils';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class CoordsGlslLib extends GlslLib {\n  returnType: string;\n\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.offsetToCoords(),\n      ...this.coordsToOffset(),\n      ...this.toVec(),\n      ...this.valueFrom(),\n      // TODO return these only when packing is enabled.\n      ...this.getCommonUtilFuncs(),\n      ...this.getInputsSamplingSnippets(),\n      ...this.getOutputSamplingSnippet()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected offsetToCoords(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'offsetToCoords';\n    return {\n      offsetToCoords: new GlslLibRoutine(`\n      vec2 ${funcName}(int offset, int width, int height) {\n        int t = offset / width;\n        int s = offset - t*width;\n        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);\n        return coords;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected coordsToOffset(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'coordsToOffset';\n    return {\n      coordsToOffset: new GlslLibRoutine(`\n      int ${funcName}(vec2 coords, int width, int height) {\n        float s = coords.s * float(width);\n        float t = coords.t * float(height);\n        int offset = int(t) * width + int(s);\n        return offset;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Generates code for output sampler.\n   */\n\n  protected getOutputSamplingSnippet(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    if (outputLayout.isPacked) {\n      return this.getPackedOutputSamplingSnippet(outputLayout);\n    } else {\n      return this.getUnpackedOutputSamplingSnippet(outputLayout);\n    }\n  }\n\n  /**\n   * Generates code for packed output sampler.\n   */\n  protected getPackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputPacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] = this.getOutputPacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputPacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        result[funcName] = this.getOutputPackedNDCoords(outShape, outTexShape as [number, number]);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRGBASource = `\n      void setOutput(vec4 val) {\n        ${glsl.output} = val;\n      }\n    `;\n    const floatTextureSetRGBAFuncName = 'floatTextureSetRGBA';\n    result[floatTextureSetRGBAFuncName] = new GlslLibRoutine(floatTextureSetRGBASource);\n    return result;\n  }\n\n  /**\n   * Generates code for unpacked output sampler.\n   */\n  protected getUnpackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputUnpacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] =\n            this.getOutputUnpacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputUnpacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      case 4:\n        result[funcName] = this.getOutputUnpacked4DCoords(\n            outShape as [number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 5:\n        result[funcName] = this.getOutputUnpacked5DCoords(\n            outShape as [number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 6:\n        result[funcName] = this.getOutputUnpacked6DCoords(\n            outShape as [number, number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        throw new Error(`Unsupported output dimensionality: ${outShape.length}`);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRSource = `\n        void setOutput(float val) {\n          ${glsl.output} = vec4(val, 0, 0, 0);\n        }\n    `;\n    const floatTextureSetRFuncName = 'floatTextureSetR';\n    result[floatTextureSetRFuncName] = new GlslLibRoutine(floatTextureSetRSource);\n    return result;\n  }\n\n  /**\n   * Scalar output coordinates.\n   */\n  protected getOutputScalarCoords(): GlslLibRoutine {\n    return new GlslLibRoutine(`\n      int getOutputCoords() {\n        return 0;\n      }\n    `);\n  }\n\n  /**\n   * 1D packed output coordinates.\n   */\n  protected getOutputPacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = texShape;\n    let source = '';\n    if (packedTexShape[0] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.y * ${packedTexShape[1]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    if (packedTexShape[1] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.x * ${packedTexShape[0]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                 vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          return 2 * (resTexRC.y * ${packedTexShape[0]} + resTexRC.x);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 2D packed output coordinates.\n   */\n  protected getOutputPacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    if (ArrayUtil.arraysEqual(shape, texShape)) {\n      source = `\n        ivec2 getOutputCoords() {\n          return 2 * ivec2(TexCoords.xy * vec2(${texShape[0]}, ${texShape[1]}));\n        }\n      `;\n      return new GlslLibRoutine(source);\n    }\n\n    const packedTexShape = texShape;\n    // texels needed to accommodate a logical row\n    const texelsInLogicalRow = Math.ceil(shape[1] / 2);\n\n    /**\n     * getOutputCoords\n     *\n     * resTexRC: The rows and columns of the texels. If you move over one\n     * texel to the right in the packed texture, you are moving over one column\n     * (not two).\n     *\n     * index: The texel index\n     */\n    source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 3D packed output coordinates.\n   */\n  protected getOutputPacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texelsInLogicalRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\n    const source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          int b = index / ${texelsInBatch};\n          index -= b * ${texelsInBatch};\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec3(b, r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * ND packed output coordinates.\n   */\n  protected getOutputPackedNDCoords(shape: readonly number[], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n\n    const texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\n    let texelsInBatchN = texelsInBatch;\n    let batches = '';\n    let coords = 'b, r, c';\n\n    for (let b = 2; b < shape.length - 1; b++) {\n      texelsInBatchN *= shape[shape.length - b - 1];\n      batches = `\n      int b${b} = index / ${texelsInBatchN};\n      index -= b${b} * ${texelsInBatchN};\n    ` + batches;\n      coords = `b${b}, ` + coords;\n    }\n    const source = `\n      ivec${shape.length} getOutputCoords() {\n        ivec2 resTexRC = ivec2(TexCoords.xy *\n                              vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n        int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n        ${batches}\n\n        int b = index / ${texelsInBatch};\n        index -= b * ${texelsInBatch};\n\n        // reverse r and c order for packed texture\n        int r = imod(index, ${texelsInLogicalRow}) * 2;\n        int c = 2 * (index / ${texelsInLogicalRow});\n\n        return ivec${shape.length}(${coords});\n      }\n    `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 1D output coordinates.\n   */\n  protected getOutputUnpacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          return resTexRC.y * ${texShape[0]} + resTexRC.x;\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 2D output coordinates.\n   */\n  protected getOutputUnpacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          int r = index / ${shape[1]};\n          int c = index - r * ${shape[1]};\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 3D output coordinates.\n   */\n  protected getOutputUnpacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec3(r, c, d);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 4D output coordinates.\n   */\n  protected getOutputUnpacked4DCoords(shape: [number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec4 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec4(r, c, d, d2);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 5D output coordinates.\n   */\n  protected getOutputUnpacked5DCoords(shape: [number, number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec5 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec5(r, c, d, d2, d3);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 6D output coordinates.\n   */\n  protected getOutputUnpacked6DCoords(shape: [number, number, number, number, number, number], texShape: [\n    number, number\n  ]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3', 'd4'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n     ivec6 getOutputCoords() {\n         ivec2 resTexRC = ivec2(TexCoords.xy *\n                               vec2(${texShape[0]}, ${texShape[1]}));\n         int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n         ${coordsFromIndexSnippet}\n         return ivec6(r, c, d, d2, d3, d4);\n       }\n     `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Generates code for common UV coords computation utility functions.\n   */\n  protected getCommonUtilFuncs(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    let funcName = 'uvFromFlat';\n    result[funcName] = new GlslLibRoutine(`\n    vec2 uvFromFlat(int texNumR, int texNumC, int index) {\n      int texC = index / texNumR;\n      int texR = index - texC * texNumR;\n      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to\n      //       v.\n      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);\n    }\n    `);\n    funcName = 'packedUVfrom1D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n        int texelIndex = index / 2;\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom2D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {\n        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom3D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom3D(int texNumR, int texNumC,\n          int texelsInBatch, int texelsInLogicalRow, int b,\n          int row, int col) {\n        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = index / texNumC;\n        int texC = index - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'sampleTexture';\n    const glsl = getGlsl(this.context.glContext.version);\n    result[funcName] = new GlslLibRoutine(`\n        float sampleTexture(sampler2D textureSampler, vec2 uv) {\n            return ${glsl.texture2D}(textureSampler, uv).r;\n        }`);\n    return result;\n  }\n\n  /**\n   * Constructing snippets for inputs\n   */\n  protected getInputsSamplingSnippets(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const outputLayout = this.context.outputTextureLayout;\n    this.context.programInfo.inputNames.forEach((samplerName, i) => {\n      const inputLayout = this.context.inputTextureLayouts[i];\n      const funcName = generateShaderFuncNameFromInputSamplerName(samplerName);\n      if (inputLayout.isPacked) {\n        result[funcName] = this.getPackedSamplerFromInput(funcName, samplerName, inputLayout);\n      } else {\n        result[funcName] = this.getUnpackedSamplerFromInput(funcName, samplerName, inputLayout);\n      }\n\n      const outCoordFuncName = generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName);\n      if (inputLayout.unpackedShape.length <= outputLayout.unpackedShape.length) {\n        if (inputLayout.isPacked) {\n          result[outCoordFuncName] =\n              this.getPackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        } else {\n          result[outCoordFuncName] =\n              this.getUnpackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        }\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Constructing snippets for output coordinates of samplers\n   */\n  protected getPackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texName = name;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(texName);\n\n    const inRank = inShape.length;\n    const outRank = outShape.length;\n\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n\n    const type = getCoordsDataType(outRank);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n\n    let output = 'return outputValue;';\n    const inSize = ShapeUtil.size(inShape);\n    const isInputScalar = inSize === 1;\n    const outSize = ShapeUtil.size(outShape);\n    const isOutputScalar = outSize === 1;\n\n    if (inRank === 1 && !isInputScalar && !isOutputScalar) {\n      output = `\n        return vec4(outputValue.xy, outputValue.xy);\n      `;\n    } else if (isInputScalar && !isOutputScalar) {\n      if (outRank === 1) {\n        output = `\n          return vec4(outputValue.x, outputValue.x, 0., 0.);\n        `;\n      } else {\n        output = `\n          return vec4(outputValue.x);\n        `;\n      }\n    } else if (broadcastDims.length) {\n      const rows = inRank - 2;\n      const cols = inRank - 1;\n\n      if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.x);';\n      } else if (broadcastDims.indexOf(rows) > -1) {\n        output = 'return vec4(outputValue.x, outputValue.y, ' +\n            'outputValue.x, outputValue.y);';\n      } else if (broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.xx, outputValue.zz);';\n      }\n    }\n\n    const swapLastDimsSnippet = `\n        int lastDim = coords.${fields[outRank - 1]};\n        coords.${fields[outRank - 1]} = coords.${fields[outRank - 2]};\n        coords.${fields[outRank - 2]} = lastDim;\n      `;\n    const source = `\n      vec4 ${funcName}() {\n        ${type} coords = getOutputCoords();\n        ${swapLastDimsSnippet}\n        ${coordsSnippet}\n        vec4 outputValue = ${texFuncSnippet}(${unpackedCoordsSnippet});\n        ${output}\n      }\n    `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for unpacked output coordinates of samplers\n   */\n  protected getUnpackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const inTexShape = [inputLayout.width, inputLayout.height];\n    const inRank = inputLayout.unpackedShape.length;\n    const outRank = outputLayout.unpackedShape.length;\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(name);\n\n    if (inRank === outRank && ArrayUtil.arraysEqual(inTexShape, outTexShape)) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, TexCoords);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const type = getCoordsDataType(outRank);\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inputLayout.unpackedShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n    const source = `\n        float ${funcName}() {\n          ${type} coords = getOutputCoords();\n          ${coordsSnippet}\n          return ${texFuncSnippet}(${unpackedCoordsSnippet});\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for packed operations.\n   */\n  protected getPackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    switch (inputLayout.unpackedShape.length) {\n      case 0:\n        return this.getPackedSamplerScalar(funcName, name);\n      case 1:\n        return this.getPackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getPackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getPackedSampler3D(funcName, name, inputLayout);\n      default:\n        return this.getPackedSamplerND(funcName, name, inputLayout);\n    }\n  }\n\n  /**\n   * Constructing snippets for unpacked operations.\n   */\n  protected getUnpackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    switch (shape.length) {\n      case 0:\n        return this.getUnpackedSamplerScalar(funcName, name, inputLayout);\n      case 1:\n        return this.getUnpackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getUnpackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getUnpackedSampler3D(funcName, name, inputLayout);\n      case 4:\n        return this.getUnpackedSampler4D(funcName, name, inputLayout);\n      case 5:\n        return this.getUnpackedSampler5D(funcName, name, inputLayout);\n      case 6:\n        return this.getUnpackedSampler6D(funcName, name, inputLayout);\n      default:\n        // TODO support more dimensionalities\n        throw new Error(`Unsupported dimension ${shape.length}-D`);\n    }\n  }\n\n  /**\n   * Packed scalar snippet.\n   */\n  protected getPackedSamplerScalar(funcName: string, name: string): GlslLibRoutine {\n    const glsl = getGlsl(this.context.glContext.version);\n    const source = `\n          vec4 ${funcName}() {\n            return ${glsl.texture2D}(${name}, halfCR);\n          }\n        `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Packed 1D snippet.\n   */\n  protected getPackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[1], texShape[0]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedSampler = `vec4 ${funcName}(int index) {\n      vec2 uv = packedUVfrom1D(\n      ${packedTexShape[0]}, ${packedTexShape[1]}, index);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom1D']);\n  }\n\n  /**\n   * Packed 2D snippet.\n   */\n  protected getPackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const packedSampler = `vec4 ${funcName}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n        return ${glsl.texture2D}(${name}, uv);\n      }`;\n\n      return new GlslLibRoutine(packedSampler);\n    }\n    const packedTexShape = texShape;\n    const valuesPerRow = Math.ceil(shape[1] / 2);\n    const packedSampler = `vec4 ${funcName}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${packedTexShape[1]}, ${packedTexShape[0]}, ${valuesPerRow}, row, col);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom2D']);\n  }\n\n  /**\n   * Packed 3D snippet.\n   */\n  protected getPackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[0], texShape[1]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    if (shape[0] === 1) {\n      const squeezedShape = shape.slice(1);\n      const keptDims = [1, 2];\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['b', 'row', 'col'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const samplerRoutine = this.getPackedSamplerFromInput(funcName, name, newInputLayout);\n      const packedSampler = `${samplerRoutine.routineBody}\n      vec4 ${funcName}(int b, int row, int col) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      } `;\n      const source = packedSampler;\n      return new GlslLibRoutine(source, samplerRoutine.dependencies);\n    }\n    const texNumR = packedTexShape[0];\n    const texNumC = packedTexShape[1];\n\n    const valuesPerRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\n\n    const packedSampler = `vec4 ${funcName}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${texNumC}, ${texNumR}, ${texelsInBatch}, ${valuesPerRow}, b, row, col);\n      return ${glsl.texture2D}(${name}, uv);}`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom3D']);\n  }\n  /*\n   * Packed ND snippet.\n   */\n  protected getPackedSamplerND(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const rank = shape.length;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texNumR = packedTexShape[1];\n    const texNumC = packedTexShape[0];\n    const valuesPerRow = Math.ceil(shape[rank - 1] / 2);\n    let texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\n    let params = 'int b, int row, int col';\n    let index = `b * ${texelsInBatch} + (row / 2) * ${valuesPerRow} + (col / 2)`;\n    for (let b = 2; b < rank - 1; b++) {\n      params = `int b${b}, ` + params;\n      texelsInBatch *= shape[rank - b - 1];\n      index = `b${b} * ${texelsInBatch} + ` + index;\n    }\n    const packedSampler = `vec4 ${funcName}(${params}) {\n      int index = ${index};\n      int texR = index / ${texNumC};\n      int texC = index - texR * ${texNumC};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}, ${texNumR});\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked scalar snippet.\n   */\n  protected getUnpackedSamplerScalar(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const [texNumR, texNumC] = [inputLayout.width, inputLayout.height];\n    if (texNumR === 1 && texNumC === 1) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, halfCR);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const source = `\n        float ${funcName}() {\n          int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, offset_${name});\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 1D snippet.\n   */\n  protected getUnpackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const tNumR = inputLayout.width;\n    const tNumC = inputLayout.height;\n\n    if (tNumC === 1 && tNumR === 1) {\n      const source = `\n        float ${funcName}(int index) {\n          return sampleTexture(${name}, halfCR);\n        }\n      `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    if (tNumC === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2((float(index) + 0.5) / ${tNumR}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    if (tNumR === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${tNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    const source = `\n        float ${funcName}(int index) {\n          vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 2D snippet.\n   */\n\n  protected getUnpackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n\n    // TODO: modify row/col order for other dimensions.\n    const texShape = [inputLayout.height, inputLayout.width];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const texNumR = texShape[1];\n      const texNumC = texShape[0];\n      const source = `\n          float ${funcName}(int row, int col) {\n            vec2 uv = (vec2(row, col) + halfCR) / vec2(${texNumR}.0, ${texNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const params = ['col', 'row'];\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const texNumR = texShape[1];\n    const texNumC = texShape[0];\n    if (texNumC === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2(0.5, (index + 0.5) / ${texNumR}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    if (texNumR === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2((index + 0.5) / ${texNumC}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    const source = `\n        float ${funcName}(int row, int col) {\n          int index = col * ${shape[1]} + row;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 3D snippet.\n   */\n\n  protected getUnpackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride0 = shape[1] * shape[2];\n    const stride1 = shape[2];\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['batch', 'col', 'row'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const routine = this.getUnpackedSamplerFromInput(funcName, name, newInputLayout);\n      // TODO: revisit the logic here to make it simpler\n      const revDims = keptDims.reverse();\n      const source = `\n          ${routine.routineBody}\n          float ${funcName}(int batch, int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, revDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, routine.dependencies);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int depth, int row, int col) {\n            // Explicitly use integer operations as dot() only works on floats.\n            int index = depth * ${stride0} + col * ${stride1} + row;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 4D snippet.\n   */\n\n  protected getUnpackedSampler4D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride2 = shape[3];\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    //\n    // TODO: re-enable this shortcut once the index calculation bug is fixed.\n    //\n    // const {newShape, keptDims} = squeezeShape(shape as number[]);\n    // if (newShape.length < shape.length) {\n    //   const newInputShape = squeezeInputShape(shape, newShape);\n    //   const params = ['row', 'col', 'depth', 'depth2'];\n    //   // Deep copy of input texture layout.\n    //   const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n    //   newInputLayout.unpackedShape = newInputShape;\n    //   const source = `\n    //       ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n    //       float ${funcName}(int row, int col, int depth, int depth2) {\n    //         return ${funcName}(${getSqueezedParams(params, keptDims)});\n    //       }\n    //     `;\n    //   return new GlslLibRoutine(\n    //       source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    // }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2) {\n          int index = row * ${stride0} + col * ${stride1} +\n              depth2 * ${stride2} + depth;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 5D snippet.\n   */\n  protected getUnpackedSampler5D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride3 = shape[4];\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n          int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n          depth3 * ${stride3} + depth2;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n  }\n\n  /**\n   * Unpacked 6D snippet.\n   */\n  protected getUnpackedSampler6D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride4 = shape[5];\n    const stride3 = shape[4] * stride4;\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n            ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n            float ${funcName}(int row, int col, int depth,\n              int depth2, int depth3, int depth4) {\n              return ${funcName}(${getSqueezedParams(params, keptDims)});\n            }\n          `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int row, int col, int depth,\n            int depth2, int depth3, int depth4) {\n            int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n            depth2 * ${stride3} + depth3 * ${stride4} + depth4;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * This is the main function to map from the given texture coordiantes (s,t)\n   * to logical indices for the output\n   * There will only be one single variation of this\n   * Also see coordsToOffset and offsetToIndices for input-specific versions\n   */\n  protected toVec(): {[name: string]: GlslLibRoutine} {\n    const output = this.context.outputTextureLayout;\n    const rank = output.shape.length;\n    const strides = output.strides;\n    const xScale = output.width;\n    const yScale = output.height;\n\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n        c[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= c[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n        c[${rank - 1}] = offset;`);\n    const body = `\n      void toVec(vec2 texCoords, out int c[${rank}]) {\n        int offset = coordsToOffset(texCoords, ${xScale}, ${yScale});\n        ${stridesBlock.join('')}\n      }\n      void toVec(int offset, out int c[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n    `;\n    return {toVec: new GlslLibRoutine(body, ['coordinates.coordsToOffset'])};\n  }\n  /**\n   * These are value getter functions generated for each input\n   * Each function is hardwired to the name and dimensions of the input\n   * An '_T' variation is also produced which accesses values as if the\n   * input was transposed\n   */\n  protected valueFrom(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const layout = this.context.inputTextureLayouts[i];\n      const shape = layout.unpackedShape.length > 0 ? layout.unpackedShape : layout.shape;\n      const rank = shape.length;\n      let funcName = `_${name}`;\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, false),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n      funcName = funcName + '_T';\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, true),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n    });\n    return result;\n  }\n  /**\n   * Produces one value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getValueFromSingle(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        float ${name}(int m[${rank}]) {\n          int offset = indicesToOffset${name}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          float value = getColorAsFloat(${glsl.texture2D}(${varName}, coords));\n          return value;\n        }\n        `;\n  }\n\n  /**\n   * Produces a packed value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getPackedValueFrom(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}_Pack`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        vec4 ${name}(int m[${rank}]) {\n          int offset = indicesToOffset_${varName}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          return ${glsl.texture2D}(${varName}, coords);\n        }\n        `;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ProgramInfo, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport enum FunctionType {\n  ValueBased,\n  Positional\n}\nexport interface GlslFunction<T extends FunctionType> {\n  body: string;\n  name: string;\n  type: T;\n}\nexport type GlslValueFunction = GlslFunction<FunctionType.ValueBased>;\nexport interface GlslPositionalFunction extends GlslFunction<FunctionType.Positional> {\n  inputShape: readonly number[];\n  outputShape: readonly number[];\n}\n\nexport class GlslContext {\n  constructor(\n      public glContext: WebGLContext, public programInfo: ProgramInfo, public inputTextureLayouts: TextureLayout[],\n      public outputTextureLayout: TextureLayout) {}\n}\nexport abstract class GlslLib {\n  constructor(public context: GlslContext) {}\n  abstract getFunctions(): {[name: string]: GlslLibRoutine};\n  abstract getCustomTypes(): {[name: string]: string};\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies\nexport class GlslLibRoutine {\n  constructor(public routineBody: string, public dependencies?: string[]) {}\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies AS GRAPH Nodes\n// this level of abstraction is used to topologically sort routines before fragment shade inclusion\nexport class GlslLibRoutineNode {\n  dependencies: GlslLibRoutineNode[];\n  routineBody: string;\n  constructor(public name: string, routineBody?: string, dependencies?: GlslLibRoutineNode[]) {\n    if (dependencies) {\n      this.dependencies = dependencies;\n    } else {\n      this.dependencies = [];\n    }\n\n    if (routineBody) {\n      this.routineBody = routineBody;\n    }\n  }\n  addDependency(node: GlslLibRoutineNode) {\n    if (node) {\n      this.dependencies.push(node);\n    }\n  }\n}\n\n// topologically sort GLSL library routines (graph nodes abstraction) before shader script inclusion\nexport class TopologicalSortGlslRoutines {\n  static returnOrderedNodes(nodes: GlslLibRoutineNode[]): GlslLibRoutineNode[] {\n    if (!nodes || nodes.length === 0) {\n      return [];\n    }\n\n    if (nodes.length === 1) {\n      return nodes;\n    }\n\n    const cycleCheck = new Set<string>();\n    const alreadyTraversed = new Set<string>();\n    const result = new Array<GlslLibRoutineNode>();\n\n    this.createOrderedNodes(nodes, cycleCheck, alreadyTraversed, result);\n    return result;\n  }\n\n  private static createOrderedNodes(\n      graphNodes: GlslLibRoutineNode[], cycleCheck: Set<string>, alreadyTraversed: Set<string>,\n      result: GlslLibRoutineNode[]) {\n    for (let i = 0; i < graphNodes.length; ++i) {\n      this.dfsTraverse(graphNodes[i], cycleCheck, alreadyTraversed, result);\n    }\n  }\n\n  private static dfsTraverse(\n      root: GlslLibRoutineNode, cycleCheck: Set<string>, alreadyTraversed: Set<string>, result: GlslLibRoutineNode[]) {\n    // if this root has already been traversed return\n    if (!root || alreadyTraversed.has(root.name)) {\n      return;\n    }\n\n    // cyclic dependency has been detected\n    if (cycleCheck.has(root.name)) {\n      throw new Error('Cyclic dependency detected. Can\\'t topologically sort routines needed for shader.');\n    }\n\n    // hold this node to detect cycles if any\n    cycleCheck.add(root.name);\n\n    // traverse children in a dfs fashion\n    const dependencies = root.dependencies;\n    if (dependencies && dependencies.length > 0) {\n      for (let i = 0; i < dependencies.length; ++i) {\n        this.dfsTraverse(dependencies[i], cycleCheck, alreadyTraversed, result);\n      }\n    }\n\n    // add to result holder\n    result.push(root);\n\n    // mark this node as traversed so that we don't traverse from this again\n    alreadyTraversed.add(root.name);\n\n    // release the hold\n    cycleCheck.delete(root.name);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * This GLSL library handles routines converting\n * float32 to/from Unsigned byte or float 16\n */\nexport class EncodingGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.encodeFloat32(), ...this.decodeFloat32()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected encodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      encode: new GlslLibRoutine(`highp vec4 encode(highp float f) {\n        return vec4(f, 0.0, 0.0, 0.0);\n      }\n        `)\n    };\n  }\n  protected decodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      decode: new GlslLibRoutine(`highp float decode(highp vec4 rgba) {\n        return rgba.r;\n      }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode encode a 32bit float to a vec4 (of unsigned bytes)\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected encodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      encode: new GlslLibRoutine(`\n      highp vec4 encode(highp float f) {\n        highp float F = abs(f);\n        highp float Sign = step(0.0,-f);\n        highp float Exponent = floor(log2(F));\n        highp float Mantissa = (exp2(- Exponent) * F);\n        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));\n        highp vec4 rgba;\n        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));\n        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);\n        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));\n        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));\n        ${endianness}\n        rgba = rgba / 255.0; // values need to be normalized to [0,1]\n        return rgba;\n    }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode a vec4 of unsigned bytes to float32\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected decodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      decode: new GlslLibRoutine(`\n        highp float decode(highp vec4 rgba) {\n          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]\n          ${endianness}\n          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;\n          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;\n          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);\n          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));\n          return Result;\n      }\n        `)\n    };\n  }\n  /**\n   * Determines if the machine is little endian or not\n   * @credit: https://gist.github.com/TooTallNate/4750953\n   */\n  static isLittleEndian(): boolean {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) {\n      return true;\n    }\n    if (c[0] === 0xde) {\n      return false;\n    }\n    throw new Error('unknown endianness');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\n\n/**\n * This GLSL library handles routines around reading a texlet and writing to it\n * Reading and writing could be more than just dealing with one channel\n * It may require encoding/decoding to/from 4 channels into one\n */\nexport class FragColorGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.setFragColor(), ...this.getColorAsFloat()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected setFragColor(): {[name: string]: GlslLibRoutine} {\n    const glsl = getGlsl(this.context.glContext.version);\n    return {\n      setFragColor: new GlslLibRoutine(\n          `\n        void setFragColor(float value) {\n            ${glsl.output} = encode(value);\n        }\n        `,\n          ['encoding.encode'])\n    };\n  }\n  protected getColorAsFloat(): {[name: string]: GlslLibRoutine} {\n    return {\n      getColorAsFloat: new GlslLibRoutine(\n          `\n        float getColorAsFloat(vec4 color) {\n            return decode(color);\n        }\n        `,\n          ['encoding.decode'])\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nconst INLINE_FUNC_DEF_REGEX = /@inline[\\s\\n\\r]+(\\w+)[\\s\\n\\r]+([0-9a-zA-Z_]+)\\s*\\(([^)]*)\\)\\s*{(([^}]|[\\n\\r])*)}/gm;\nconst FUNC_CALL_REGEX = '(\\\\w+)?\\\\s+([_0-9a-zA-Z]+)\\\\s+=\\\\s+__FUNC__\\\\((.*)\\\\)\\\\s*;';\n/**\n * GLSL preprocessor responsible for resolving @inline directives\n */\nexport function replaceInlines(script: string): string {\n  const inlineDefs: {[name: string]: {params: Array<{type: string; name: string}|null>; body: string}} = {};\n  let match;\n  while ((match = INLINE_FUNC_DEF_REGEX.exec(script)) !== null) {\n    const params = match[3]\n                       .split(',')\n                       .map(s => {\n                         const tokens = s.trim().split(' ');\n                         if (tokens && tokens.length === 2) {\n                           return {type: tokens[0], name: tokens[1]};\n                         }\n                         return null;\n                       })\n                       .filter(v => v !== null);\n    inlineDefs[match[2]] = {params, body: match[4]};\n  }\n  for (const name in inlineDefs) {\n    const regexString = FUNC_CALL_REGEX.replace('__FUNC__', name);\n    const regex = new RegExp(regexString, 'gm');\n    while ((match = regex.exec(script)) !== null) {\n      const type = match[1];\n      const variable = match[2];\n      const params = match[3].split(',');\n      const declLine = (type) ? `${type} ${variable};` : '';\n      let newBody: string = inlineDefs[name].body;\n      let paramRedecLine = '';\n      inlineDefs[name].params.forEach((v, i) => {\n        if (v) {\n          paramRedecLine += `${v.type} ${v.name} = ${params[i]};\\n`;\n        }\n      });\n      newBody = `${paramRedecLine}\\n ${newBody}`;\n      newBody = newBody.replace('return', `${variable} = `);\n      const replacement = `\n      ${declLine}\n      {\n        ${newBody}\n      }\n      `;\n      script = script.replace(match[0], replacement);\n    }\n  }\n  script = script.replace(INLINE_FUNC_DEF_REGEX, '');\n  return script;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutineNode, TopologicalSortGlslRoutines} from './glsl-definitions';\nimport {replaceInlines} from './glsl-function-inliner';\nimport {glslRegistry} from './glsl-registered-libs';\nimport {getDefaultFragShaderMain, getFragShaderPreamble} from './glsl-source';\nimport {ProgramInfo, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * Preprocessor for the additions to the GLSL language\n * It deals with:\n *  @include directives\n *  @inline\n *  Loop unrolling (not implemented)\n *  Macro resolution (not implemented)\n */\nexport class GlslPreprocessor {\n  readonly context: GlslContext;\n  readonly libs: {[name: string]: GlslLib} = {};\n  readonly glslLibRoutineDependencyGraph: {[routineName: string]: GlslLibRoutineNode} = {};\n\n  constructor(\n      glContext: WebGLContext, programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[],\n      outputTextureLayout: TextureLayout) {\n    this.context = new GlslContext(glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n\n    // construct GlslLibs\n    Object.keys(glslRegistry).forEach((name: string) => {\n      const lib = new glslRegistry[name](this.context);\n      this.libs[name] = lib;\n    });\n\n    // construct GlslRoutineDependencyGraph\n    const map = this.glslLibRoutineDependencyGraph;\n    for (const libName in this.libs) {\n      const lib = this.libs[libName];\n      const routinesInLib = lib.getFunctions();\n      for (const routine in routinesInLib) {\n        const key = libName + '.' + routine;\n        let currentNode: GlslLibRoutineNode;\n        if (map[key]) {\n          currentNode = map[key];\n          currentNode.routineBody = routinesInLib[routine].routineBody;\n        } else {\n          currentNode = new GlslLibRoutineNode(key, routinesInLib[routine].routineBody);\n          map[key] = currentNode;\n        }\n        const dependencies = routinesInLib[routine].dependencies;\n        if (dependencies) {\n          for (let i = 0; i < dependencies.length; ++i) {\n            if (!map[dependencies[i]]) {\n              const node = new GlslLibRoutineNode(dependencies[i]);\n              map[dependencies[i]] = node;\n              currentNode.addDependency(node);\n            } else {\n              currentNode.addDependency(map[dependencies[i]]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  preprocess(): string {\n    const programInfo = this.context.programInfo;\n    let source = programInfo.shaderSource;\n\n    // append main() function\n    if (!this.context.programInfo.hasMain) {\n      source = `${source}\n      ${getDefaultFragShaderMain(this.context.glContext.version, this.context.outputTextureLayout.shape.length)}`;\n    }\n    // replace inlines\n    source = replaceInlines(source);\n\n    // concat final source string\n    return `${getFragShaderPreamble(this.context.glContext.version)}\n    ${this.getUniforms(programInfo.inputNames, programInfo.variables)}\n    ${this.getImports(source)}\n    ${source}`;\n  }\n\n  protected getImports(script: string): string {\n    const routinesIncluded = this.selectGlslLibRoutinesToBeIncluded(script);\n\n    if (routinesIncluded.length === 0) {\n      return '';\n    }\n\n    let routines = '';\n    for (let i = 0; i < routinesIncluded.length; ++i) {\n      if (routinesIncluded[i].routineBody) {\n        routines += routinesIncluded[i].routineBody + '\\n';\n      } else {\n        throw new Error(`Missing body for the Glsl Library routine: ${routinesIncluded[i].name}`);\n      }\n    }\n\n    return routines;\n  }\n  private selectGlslLibRoutinesToBeIncluded(script: string): GlslLibRoutineNode[] {\n    const nodes: GlslLibRoutineNode[] = [];\n\n    Object.keys(this.glslLibRoutineDependencyGraph).forEach(classAndRoutine => {\n      const routine = classAndRoutine.split('.')[1];\n      if (script.indexOf(routine) !== -1) {\n        nodes.push(this.glslLibRoutineDependencyGraph[classAndRoutine]);\n      }\n    });\n\n    return TopologicalSortGlslRoutines.returnOrderedNodes(nodes);\n  }\n\n  protected getUniforms(samplers?: string[], variables?: VariableInfo[]): string {\n    const uniformLines: string[] = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLines.push(`uniform sampler2D ${sampler};`);\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLines.push(\n            `uniform ${variable.type} ${variable.name}${variable.arrayLength ? `[${variable.arrayLength}]` : ''};`);\n      }\n    }\n    return uniformLines.join('\\n');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {CoordsGlslLib} from './glsl-coordinate-lib';\nimport {GlslContext, GlslLib} from './glsl-definitions';\nimport {EncodingGlslLib} from './glsl-encoding-lib';\nimport {FragColorGlslLib} from './glsl-fragcolor-lib';\nimport {ShapeUtilsGlslLib} from './glsl-shape-utils-lib';\nimport {VecGlslLib} from './glsl-vec-lib';\n\nexport const glslRegistry: {[name: string]: new (context: GlslContext) => GlslLib} = {\n  'encoding': EncodingGlslLib,\n  'fragcolor': FragColorGlslLib,\n  'vec': VecGlslLib,\n  'shapeUtils': ShapeUtilsGlslLib,\n  'coordinates': CoordsGlslLib,\n  //  'arrays': ArrayGlslSLib\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class ShapeUtilsGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.bcastIndex(),\n      ...this.bcastMatmulIndex(),\n      ...this.offsetToIndices(),\n      ...this.indicesToOffset(),\n      ...this.incrementIndices()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  protected bcastIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].unpackedShape;\n      if (shape.length <= outputRank) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName} (int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected bcastMatmulIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      if (!(shape.length < 2 || shape.length > outputRank)) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastMatmulIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank - 2; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName}(int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n          realIndices[${rank - 1}] = bcastedIndices[${outputRank - 1}];\n          realIndices[${rank - 2}] = bcastedIndices[${outputRank - 2}];\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected indicesToOffset(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `indicesToOffset_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides));\n      funcName = `indicesToOffset_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static indexToOffsetSingle(name: string, rank: number, strides: readonly number[]): string {\n    let block = '';\n    for (let i = rank - 1; i >= 0; --i) {\n      block += `\n        offset += indices[${i}] * ${strides[i]};\n        `;\n    }\n    return `\n      int ${name}(int indices[${rank}]) {\n        int offset = 0;\n        ${block}\n        return offset;\n      }\n      `;\n  }\n  protected offsetToIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `offsetToIndices_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides));\n      funcName = `offsetToIndices_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static offsetToIndicesSingle(name: string, rank: number, strides: readonly number[]): string {\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n      indices[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= indices[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n      indices[${rank - 1}] = offset;`);\n    return `\n      void ${name}(int offset, out int indices[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n      `;\n  }\n  protected incrementIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const rank = shape.length;\n      const funcName = `incrementIndices_${name}`;\n      let shapeInit = '';\n      for (let i = 0; i < rank; ++i) {\n        shapeInit += `\n        shape[${i}] = ${shape[i]};`;\n      }\n      const body = `\n        void ${funcName}(int axis, out int indices[${rank}]) {\n          int shape[${rank}];\n          ${shapeInit};\n          for(int i = ${rank} -1 ; i >= 0; --i) {\n            if(i > axis) continue;\n            indices[i] += 1;\n            if(indices[i] < shape[i]) {\n              break;\n            }\n            indices[i] = 0;\n          }\n        }\n        `;\n      result[funcName] = new GlslLibRoutine(body);\n    });\n    return result;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * represent a version irrelevant abstraction of for GLSL source code\n */\nexport interface Glsl {\n  readonly version: string;\n  readonly attribute: string;\n  readonly varyingVertex: string;\n  readonly varyingFrag: string;\n  readonly texture2D: string;\n  readonly output: string;\n  readonly outputDeclaration: string;\n}\n\nconst GLSL_ES_2_0: Glsl = {\n  version: '',\n  attribute: 'attribute',\n  varyingVertex: 'varying',\n  varyingFrag: 'varying',\n  texture2D: 'texture2D',\n  output: 'gl_FragColor',\n  outputDeclaration: '',\n};\nconst GLSL_ES_3_0: Glsl = {\n  version: '#version 300 es',\n  attribute: 'in',\n  varyingVertex: 'out',\n  varyingFrag: 'in',\n  texture2D: 'texture',\n  output: 'outputColor',\n  outputDeclaration: 'out vec4 outputColor;',\n};\n\nexport function getGlsl(version: 1|2) {\n  return version === 1 ? GLSL_ES_2_0 : GLSL_ES_3_0;\n}\n\nexport function getVertexShaderSource(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n      precision highp float;\n      ${glsl.attribute} vec3 position;\n      ${glsl.attribute} vec2 textureCoord;\n\n      ${glsl.varyingVertex} vec2 TexCoords;\n\n      void main()\n      {\n          gl_Position = vec4(position, 1.0);\n          TexCoords = textureCoord;\n      }`;\n}\n\nexport function getFragShaderPreamble(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${glsl.varyingFrag} vec2 TexCoords;\n    ${glsl.outputDeclaration}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    // Custom vector types to handle higher dimenalities.\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    `;\n}\n\nexport function getDefaultFragShaderMain(version: 1|2, outputShapeLength: number): string {\n  const glsl = getGlsl(version);\n  return `\n  void main() {\n    int indices[${outputShapeLength}];\n    toVec(TexCoords, indices);\n    vec4 result = vec4(process(indices));\n    ${glsl.output} = result;\n  }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for vec routines\n * Vec is an varible length int array. The length is fixed at the time of\n * generating the library functions from the dimensions of the output.\n */\nexport class VecGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.binaryVecFunctions(), ...this.copyVec(), ...this.setVecItem(), ...this.getVecItem()};\n  }\n  protected binaryVecFunctions(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    const nameOp: {[name: string]: string} = {add: '+=', sub: '-=', mul: '*=', div: '/='};\n    const result: {[name: string]: GlslLibRoutine} = {};\n    for (const name in nameOp) {\n      const fname = `${name}Vec`;\n      let assignmentBlock = '';\n      for (let i = 0; i < rank; ++i) {\n        assignmentBlock += `\n          dest[${i}] ${nameOp[name]} src[${i}];\n          `;\n      }\n      const body = `\n        void ${fname}(int src[${rank}], out int dest[${rank}]) {\n          ${assignmentBlock}\n        }\n        `;\n      result[fname] = new GlslLibRoutine(body);\n    }\n\n    return result;\n  }\n  protected copyVec(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let assignmentBlock = '';\n    for (let i = 0; i < rank; ++i) {\n      assignmentBlock += `\n        dest[${i}] = src[${i}];\n        `;\n    }\n    const body = `\n      void copyVec(int src[${rank}], out int dest[${rank}]) {\n        ${assignmentBlock}\n      }\n      `;\n    return {copyVec: new GlslLibRoutine(body)};\n  }\n\n  protected setVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index =${rank} + index;\n        if (index == 0)\n            m[0] = value;\n        `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            m[${i}] = value;\n            `;\n    }\n    block += `\n        else\n            m[${rank - 1}] = value;\n        `;\n    const body = `\n      void setVecItem(out int m[${rank}], int index, int value) {\n        ${block}\n      }\n        `;\n    return {setVecItem: new GlslLibRoutine(body)};\n  }\n  protected getVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index = ${rank} + index;\n        if (index == 0)\n            return m[0];\n      `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            return m[${i}];\n      `;\n    }\n    block += `\n        else\n            return m[${rank - 1}];\n        `;\n    const body = `\n      int getVecItem(int m[${rank}], int index) {\n        ${block}\n      }\n    `;\n    return {getVecItem: new GlslLibRoutine(body)};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from '../../backend';\nimport {Logger} from '../../instrument';\nimport {Tensor} from '../../tensor';\nimport {ShapeUtil} from '../../util';\n\nimport {createPackProgramInfoLoader} from './ops/pack';\nimport {createPackedReshape3DProgramInfoLoader, isReshapeCheap, processDims3D} from './ops/reshape-packed';\nimport {encodeAsUint8} from './ops/uint8-encode';\nimport {createUnpackProgramInfoLoader} from './ops/unpack';\nimport {WebGLSessionHandler} from './session-handler';\nimport {Encoder} from './texture-data-encoder';\nimport {calculateTextureWidthAndHeight, createTextureLayoutFromShape, createTextureLayoutFromTextureType} from './texture-layout';\nimport {Artifact, ProgramInfo, ProgramInfoLoader, TextureData, TextureLayout, TextureType} from './types';\n\nconst getProgramInfoUniqueKey =\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTextureDatas: TextureData[]): string => {\n      const inputs =\n          inputTextureDatas.map(texture => `${texture.unpackedShape.join(',')};${texture.width}x${texture.height}`)\n              .join('_');\n      let key = programInfo.name;\n      if (programInfo.cacheHint) {\n        key += '[' + programInfo.cacheHint + ']';\n      }\n      key += ':' + inputs;\n      return key;\n    };\n\nexport class WebGLInferenceHandler implements InferenceHandler {\n  private packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  private unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  constructor(public session: WebGLSessionHandler) {\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  /**\n   * @returns [width, height]\n   */\n  calculateTextureWidthAndHeight(shape: readonly number[], textureType: TextureType): [number, number] {\n    return calculateTextureWidthAndHeight(this.session.layoutStrategy, shape, textureType);\n  }\n\n  executeProgram(program: ProgramInfo|ProgramInfoLoader, inputs: readonly Tensor[]): TextureData {\n    if (inputs.length < program.inputNames.length) {\n      throw new Error(`Input size mustn't be less than ${program.inputNames.length}.`);\n    }\n    if (program.inputNames.length !== program.inputTypes.length) {\n      throw new Error('input names size does not match input types');\n    }\n\n    // create texture info for input\n    const inputTextureDatas: TextureData[] = [];\n    for (let i = 0; i < program.inputNames.length; ++i) {\n      inputTextureDatas[i] = this.getOrCreateTextureData(inputs[i], program.inputTypes[i]);\n    }\n\n    const key = getProgramInfoUniqueKey(program, inputTextureDatas);\n    let artifact = this.session.programManager.getArtifact(key);\n    const programInfo = artifact ?\n        artifact.programInfo :\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\n                                                                    (program as ProgramInfo));\n\n    // create texture info for output\n    const outputTextureLayout = createTextureLayoutFromTextureType(\n        this.session.layoutStrategy, programInfo.output.dims, programInfo.output.textureType);\n    const outputTextureData = this.createTextureData(outputTextureLayout, programInfo.output.type);\n\n    if (!artifact) {\n      artifact = this.session.programManager.build(programInfo, inputTextureDatas, outputTextureData);\n      this.session.programManager.setArtifact(key, artifact);\n    }\n\n    this.runProgram(artifact, inputTextureDatas, outputTextureData);\n    return outputTextureData;\n  }\n\n  run(program: ProgramInfoLoader, inputs: readonly Tensor[]): Tensor {\n    const outputTextureData = this.executeProgram(program, inputs);\n    return outputTextureData.tensor;\n  }\n\n  private runProgram(artifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    // input should match\n    for (let i = 0; i < inputs.length; ++i) {\n      if (!!inputs[i].isPacked !== (artifact.programInfo.inputTypes[i] === TextureType.packed)) {\n        throw new Error(`input[${i}] property packed inconsistent`);\n      }\n    }\n\n    // output should match\n    if (!!output.isPacked !== (artifact.programInfo.output.textureType === TextureType.packed)) {\n      throw new Error('output property packed inconsistent');\n    }\n\n    this.session.programManager.run(artifact, inputs, output);\n  }\n\n  /**\n   * Create a TextureData object from a tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * If a related texture data is found in cache, returns it;\n   * Otherwise:\n   *   Creates a new texture layout if not provided;\n   *   Creates WebGLTexture with the layout;\n   *   Upload tensor data to the texture;\n   *   Creates a texture data object associated with the given tensor.\n   * @param tensor the tensor with data to upload\n   */\n  private getOrCreateTextureData(tensor: Tensor, textureType: TextureType) {\n    let td = this.getTextureData(tensor.dataId, textureType === TextureType.packed);\n\n    if (!td) {\n      // check if we have texture data in different type\n      td = this.getTextureData(tensor.dataId, textureType !== TextureType.packed);\n      if (td) {\n        if (textureType === TextureType.packed) {\n          return this.pack(td);\n        } else {\n          return this.unpack(td);\n        }\n      }\n    }\n\n    if (!td) {\n      const layout = createTextureLayoutFromTextureType(this.session.layoutStrategy, tensor.dims, textureType);\n\n      if (textureType === TextureType.packedLastDimension) {\n        const group = 1;\n        const channels = 4;\n        const shape = tensor.dims;\n        if (shape.length === 4) {\n          // pre-processing for kernel data of Conv.\n          //\n          // TODO: currently this is a hacking to overwrite Conv's weight. The correct way to do this should be:\n          // 1. implement texture based const-folding\n          // 2. create a WebGL program \"preprocessConvWeight\" to do the same work as below\n          // 3. run the program before dotProduct.\n          //\n          const adjustedKernelShape = [shape[0], Math.ceil((shape[1] * shape[2] * shape[3]) / channels)];\n          const adjustedLayout =\n              createTextureLayoutFromTextureType(this.session.layoutStrategy, adjustedKernelShape, textureType);\n          let buffer = tensor.numberData;\n          if (shape[1] * shape[2] * shape[3] % channels !== 0) {\n            const numFeatureMaps = shape[0];\n            const oldRowSize = shape[1] * shape[2] * shape[3];\n            const newRowSize = Math.ceil(oldRowSize * group / channels) * channels;\n            const newSize = numFeatureMaps * newRowSize;\n            buffer = new Float32Array(newSize);\n            for (let f = 0; f < numFeatureMaps; ++f) {\n              const oldOffset = f * oldRowSize;\n              const newOffset = f * newRowSize + f % group * oldRowSize;\n              buffer.set(tensor.numberData.subarray(oldOffset, oldOffset + oldRowSize), newOffset);\n            }\n          }\n          return this.createTextureData(adjustedLayout, tensor.type, buffer, tensor, Encoder.Usage.UploadOnly);\n        }\n      }\n\n      if (textureType === TextureType.packed) {\n        const unpackedTextureLayout =\n            createTextureLayoutFromShape(this.session.layoutStrategy, tensor.dims, 1, [], {reverseWH: true});\n        const unpackedTextureData = this.createTextureData(\n            unpackedTextureLayout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n        td = this.pack(unpackedTextureData);\n      } else {\n        td = this.createTextureData(layout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n      }\n    }\n    return td;\n  }\n\n  /**\n   * Create a TextureData object using the given data and bind to the given tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * NOTE: this function is a hack for Conv implementation. should remove this function, after rewriting Conv\n   * implementation by Graph.Transformer\n   * @param dataType the tensor data type\n   * @param data the actual data to upload\n   * @param tensor the tensor to bind. tensor's data is ignored.\n   */\n  createTextureDataFromLayoutBindTensor(\n      layout: TextureLayout, dataType: Tensor.DataType, data: Tensor.NumberType, tensor: Tensor): TextureData {\n    return this.createTextureData(layout, dataType, data, tensor, Encoder.Usage.UploadOnly);\n  }\n\n  private createTextureData(\n      layout: TextureLayout, dataType: Tensor.DataType, data?: Tensor.NumberType, tensor?: Tensor,\n      usage?: Encoder.Usage): TextureData {\n    Logger.verbose('InferenceHandler', `Creating TextureData: layout:[${JSON.stringify(layout)}]`);\n    const texture = this.session.textureManager.createTextureFromLayout(dataType, layout, data, usage);\n    return this.createTextureDataFromTexture(layout, dataType, texture, tensor);\n  }\n\n  reshapeUnpacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureLayout: TextureLayout = {\n      channels: inputTD.channels,\n      height: inputTD.height,\n      width: inputTD.width,\n      // handle reshaping into scalar Tensors\n      shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n      strides: ShapeUtil.computeStrides(reshapedDims),\n      unpackedShape: reshapedDims,\n    };\n    const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  reshapePacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.packed);\n\n    // check if the reshape is 'cheap'\n    if (isReshapeCheap(input.dims, reshapedDims)) {\n      const newTextureLayout: TextureLayout = {\n        channels: inputTD.channels,\n        height: inputTD.height,\n        width: inputTD.width,\n        // handle reshaping into scalar Tensors\n        shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n        strides: ShapeUtil.computeStrides(reshapedDims),\n        unpackedShape: reshapedDims,\n        isPacked: true\n      };\n      const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n      return newTextureData.tensor;\n    }\n\n    const squeezedInputShape = processDims3D(input.dims);\n    const squeezedOutputShape = processDims3D(reshapedDims);\n\n    const squeezedInputTensor = this.reshapePacked(input, squeezedInputShape);\n    const squeezedOutputTensor = this.run(\n        createPackedReshape3DProgramInfoLoader(this, squeezedInputTensor, squeezedOutputShape), [squeezedInputTensor]);\n    const outputTensor = this.reshapePacked(squeezedOutputTensor, reshapedDims);\n    return outputTensor;\n  }\n\n  cast(input: Tensor, type: Tensor.DataType): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureData = this.createTextureDataFromTexture(inputTD as TextureLayout, type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  private createTextureDataFromTexture(\n      layout: TextureLayout, dataType: Tensor.DataType, texture: WebGLTexture, tensor?: Tensor, tensorId?: Tensor.Id) {\n    const textureData: TextureData = {\n      ...layout,\n      tensor: tensor ||\n          new Tensor(\n                  layout.unpackedShape, dataType, (_id: Tensor.Id) => this.readTexture(textureData),\n                  async (_id: Tensor.Id) => this.readTextureAsync(textureData), undefined, tensorId),\n      texture\n    };\n    this.setTextureData(textureData.tensor.dataId, textureData, layout.isPacked);\n    return textureData;\n  }\n\n  private getTextureData(tensorId: Tensor.Id, isPacked = false): TextureData|undefined {\n    return this.session.isInitializer(tensorId) ? this.session.getTextureData(tensorId, isPacked) :\n        isPacked                                ? this.packedTextureDataCache.get(tensorId) :\n                                                  this.unpackedTextureDataCache.get(tensorId);\n  }\n  setTextureData(tensorId: Tensor.Id, td: TextureData, isPacked = false): void {\n    if (this.session.isInitializer(tensorId)) {\n      this.session.setTextureData(tensorId, td, isPacked);\n    } else {\n      (isPacked ? this.packedTextureDataCache : this.unpackedTextureDataCache).set(tensorId, td);\n    }\n  }\n  isTextureLayoutCached(tensor: Tensor, isPacked = false): boolean {\n    return !!this.getTextureData(tensor.dataId, isPacked);\n  }\n\n  dispose(): void {\n    this.session.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  readTexture(textureData: TextureData): Tensor.NumberType {\n    if (textureData.isPacked) {\n      return this.readTexture(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTexture(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  async readTextureAsync(textureData: TextureData): Promise<Tensor.NumberType> {\n    if (textureData.isPacked) {\n      return this.readTextureAsync(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTextureAsync(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  pack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createPackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n\n  unpack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createUnpackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OpSet} from '../../opset';\n\nimport {batchNormalization, parseBatchNormalizationAttributes} from './ops/batch-normalization';\nimport * as binaryOps from './ops/binary-op';\nimport {cast, parseCastAttributes} from './ops/cast';\nimport {concat, parseConcatAttributes} from './ops/concat';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {convTranspose, parseConvTransposeAttributes} from './ops/conv-transpose';\nimport {depthToSpace, parseDepthToSpaceAttributes} from './ops/depth-to-space';\nimport {flatten, parseFlattenAttributes} from './ops/flatten';\nimport {gather, parseGatherAttributes} from './ops/gather';\nimport {gemm, parseGemmAttributesV11, parseGemmAttributesV7} from './ops/gemm';\nimport {imageScaler, parseImageScalerAttributes} from './ops/image-scaler';\nimport {instanceNormalization, parseInstanceNormalizationAttributes} from './ops/instance-normalization';\nimport {matMul, parseMatMulAttributes} from './ops/matmul';\nimport {padV11, padV2, parsePadAttributesV11, parsePadAttributesV2} from './ops/pad';\nimport {averagePool, globalAveragePool, globalMaxPool, maxPool, parseAveragePoolAttributes, parseGlobalAveragePoolAttributes, parseMaxPoolAttributes} from './ops/pool';\nimport {parseReduceAttributes, reduceLogSum, reduceLogSumSquare, reduceMax, reduceMean, reduceMin, reduceProd, reduceSum} from './ops/reduce';\nimport {reshape} from './ops/reshape';\nimport {parseResizeAttributesV10, parseResizeAttributesV11, resize} from './ops/resize-packed';\nimport {shape} from './ops/shape';\nimport {parseSliceAttributes, slice, sliceV10} from './ops/slice';\nimport {parseSoftmaxAttributes, parseSoftmaxAttributesV13, softmax, softmaxV13} from './ops/softmax';\nimport {parseSplitAttributes, split} from './ops/split';\nimport {parseSqueezeAttributes, squeeze, squeezeV13} from './ops/squeeze';\nimport {sum} from './ops/sum';\nimport {tile} from './ops/tile';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {parseUnsqueezeAttributes, unsqueeze, unsqueezeV13} from './ops/unsqueeze';\nimport {parseUpsampleAttributesV7, parseUpsampleAttributesV9, upsample} from './ops/upsample';\n\nexport const WEBGL_OP_RESOLVE_RULES: readonly OpSet.ResolveRule[] = [\n  ['Abs', '', '6+', unaryOps.abs],\n  ['Acos', '', '7+', unaryOps.acos],\n  ['Add', '', '7+', binaryOps.add],\n  ['And', '', '7+', binaryOps.and],\n  ['Asin', '', '7+', unaryOps.asin],\n  ['Atan', '', '7+', unaryOps.atan],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', '', '7+', averagePool, parseAveragePoolAttributes],\n  ['BatchNormalization', '', '7+', batchNormalization, parseBatchNormalizationAttributes],\n  ['Cast', '', '6+', cast, parseCastAttributes],\n  ['Ceil', '', '6+', unaryOps.ceil],\n  ['Clip', '', '6-10', unaryOps.clip, unaryOps.parseClipAttributes],\n  ['Clip', '', '11+', unaryOps.clipV11],\n  ['Concat', '', '4+', concat, parseConcatAttributes],\n  ['Conv', '', '1+', conv, parseConvAttributes],\n  ['ConvTranspose', '', '1+', convTranspose, parseConvTransposeAttributes],\n  ['Cos', '', '7+', unaryOps.cos],\n  ['Div', '', '7+', binaryOps.div],\n  ['Dropout', '', '7+', unaryOps.identity],\n  ['DepthToSpace', '', '1+', depthToSpace, parseDepthToSpaceAttributes],\n  ['Equal', '', '7+', binaryOps.equal],\n  ['Elu', '', '6+', unaryOps.elu, unaryOps.parseEluAttributes],\n  ['Exp', '', '6+', unaryOps.exp],\n  ['Flatten', '', '1+', flatten, parseFlattenAttributes],\n  ['Floor', '', '6+', unaryOps.floor],\n  ['FusedConv', 'com.microsoft', '1+', conv, parseConvAttributes],\n  ['Gather', '', '1+', gather, parseGatherAttributes],\n  ['Gemm', '', '7-10', gemm, parseGemmAttributesV7],\n  ['Gemm', '', '11+', gemm, parseGemmAttributesV11],\n  ['GlobalAveragePool', '', '1+', globalAveragePool, parseGlobalAveragePoolAttributes],\n  ['GlobalMaxPool', '', '1+', globalMaxPool],\n  ['Greater', '', '7+', binaryOps.greater],\n  ['Identity', '', '1+', unaryOps.identity],\n  ['ImageScaler', '', '1+', imageScaler, parseImageScalerAttributes],\n  ['InstanceNormalization', '', '6+', instanceNormalization, parseInstanceNormalizationAttributes],\n  ['LeakyRelu', '', '6+', unaryOps.leakyRelu, unaryOps.parseLeakyReluAttributes],\n  ['Less', '', '7+', binaryOps.less],\n  ['Log', '', '6+', unaryOps.log],\n  ['MatMul', '', '1+', matMul, parseMatMulAttributes],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', '', '1+', maxPool, parseMaxPoolAttributes],\n  ['Mul', '', '7+', binaryOps.mul],\n  ['Neg', '', '6+', unaryOps.neg],\n  ['Not', '', '1+', unaryOps.not],\n  ['Or', '', '7+', binaryOps.or],\n  ['Pad', '', '2-10', padV2, parsePadAttributesV2],\n  ['Pad', '', '11+', padV11, parsePadAttributesV11],\n  ['Pow', '', '7+', binaryOps.pow],\n  ['PRelu', '', '7+', binaryOps.pRelu],\n  ['ReduceLogSum', '', '1+', reduceLogSum, parseReduceAttributes],\n  ['ReduceMax', '', '1+', reduceMax, parseReduceAttributes],\n  ['ReduceMean', '', '1+', reduceMean, parseReduceAttributes],\n  ['ReduceMin', '', '1+', reduceMin, parseReduceAttributes],\n  ['ReduceProd', '', '1+', reduceProd, parseReduceAttributes],\n  ['ReduceSum', '', '1-12', reduceSum, parseReduceAttributes],\n  ['ReduceSumSquare', '', '1+', reduceLogSumSquare, parseReduceAttributes],\n  ['Relu', '', '6+', unaryOps.relu],\n  ['Reshape', '', '5+', reshape],\n  ['Resize', '', '10', resize, parseResizeAttributesV10],\n  ['Resize', '', '11+', resize, parseResizeAttributesV11],\n  ['Shape', '', '1+', shape],\n  ['Sigmoid', '', '6+', unaryOps.sigmoid],\n  ['Sin', '', '7+', unaryOps.sin],\n  ['Slice', '', '10+', sliceV10],  // TODO: support 'steps' for Slice-10\n  ['Slice', '', '1-9', slice, parseSliceAttributes],\n  // The \"semantic\" meaning of axis has changed in opset-13.\n  ['Softmax', '', '1-12', softmax, parseSoftmaxAttributes],\n  ['Softmax', '', '13+', softmaxV13, parseSoftmaxAttributesV13],\n  // 'Split' operator has an optional attribute 'split'\n  // this attribute determines how the specified axis of input data is split.\n  // When the attribute is missing, we need the count of number of outputs\n  // so that we can determine the 'split' attribute from the runtime input to the Operator\n  ['Split', '', '2-12', split, parseSplitAttributes],\n  ['Sqrt', '', '6+', unaryOps.sqrt],\n  ['Squeeze', '', '1-12', squeeze, parseSqueezeAttributes],\n  ['Squeeze', '', '13+', squeezeV13],\n  ['Sub', '', '7+', binaryOps.sub],\n  ['Sum', '', '6+', sum],\n  ['Tan', '', '7+', unaryOps.tan],\n  ['Tanh', '', '6+', unaryOps.tanh],\n  ['Tile', '', '6+', tile],\n  ['Transpose', '', '1+', transpose, parseTransposeAttributes],\n  ['Upsample', '', '7-8', upsample, parseUpsampleAttributesV7],\n  ['Upsample', '', '9', upsample, parseUpsampleAttributesV9],\n  ['Unsqueeze', '', '1-12', unsqueeze, parseUnsqueezeAttributes],\n  ['Unsqueeze', '', '13+', unsqueezeV13],\n  ['Xor', '', '7+', binaryOps.xor],\n];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface BatchNormalizationAttributes extends AttributeWithCacheKey {\n  epsilon: number;\n  momentum: number;\n  spatial: number;\n}\n\nconst batchNormalizationProgramMetadata = {\n  name: 'BatchNormalization',\n  inputNames: ['A', 'Scale', 'B', 'Mean', 'Variance'],\n  inputTypes:\n      [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked]\n};\n\nexport const batchNormalization: OperatorImplementation<BatchNormalizationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...batchNormalizationProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createBatchNormalizationProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseBatchNormalizationAttributes: OperatorInitialization<BatchNormalizationAttributes> =\n    (node: Graph.Node): BatchNormalizationAttributes => {\n      const epsilon = node.attributes.getFloat('epsilon', 1e-5);\n      const momentum = node.attributes.getFloat('momentum', 0.9);\n      const spatial = node.attributes.getInt('spatial', 1);\n      return createAttributeWithCacheKey({epsilon, momentum, spatial});\n    };\n\nconst createBatchNormalizationProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes):\n        ProgramInfo => {\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const rank = inputs[0].dims.length;\n          const [scaleWidth, scaleHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(inputs[1].dims, TextureType.unpacked);\n          const shaderSource = `\n  float process(int[${rank}] indices) {\n    vec2 position = offsetToCoords(indices[1], ${scaleWidth}, ${scaleHeight});\n    float scale = getColorAsFloat(${glsl.texture2D}(Scale, position));\n    float mean = getColorAsFloat(${glsl.texture2D}(Mean, position));\n    float variance = getColorAsFloat(${glsl.texture2D}(Variance, position));\n    float b = getColorAsFloat(${glsl.texture2D}(B, position));\n\n    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${attributes.epsilon})) ) + b;\n  }`;\n          return {\n            ...batchNormalizationProgramMetadata,\n            output: {dims: inputs[0].dims, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 5) {\n    throw new Error('BatchNormalization requires 5 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n  const mean = inputs[3];\n  const var_ = inputs[4];\n\n  // input should atleast have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1 || mean.dims.length !== 1 ||\n      var_.dims.length !== 1) {\n    throw new Error('invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1] || mean.dims[0] !== X.dims[1] ||\n      var_.dims[0] !== X.dims[1]) {\n    throw new Error('invalid input shape.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64') || (mean.type !== 'float32' && mean.type !== 'float64') ||\n      (var_.type !== 'float32' && var_.type !== 'float64')) {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\n\nexport function glslAdd(): GlslValueFunction {\n  const name = 'add_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a + b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 + v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslDiv(): GlslValueFunction {\n  const name = 'div_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a / b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 / v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslMul(): GlslValueFunction {\n  const name = 'mul_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a * b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 * v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSub(): GlslValueFunction {\n  const name = 'sub_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a - b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 - v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslEqual(): GlslValueFunction {\n  const name = 'equal_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a == b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(equal(v1, v2));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslGreater(): GlslValueFunction {\n  const name = 'greater_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a > b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r > v2.r ,\n      v1.g > v2.g,\n      v1.b > v2.b,\n      v1.a > v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLess(): GlslValueFunction {\n  const name = 'less_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a < b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r < v2.r ,\n                v1.g < v2.g,\n                v1.b < v2.b,\n                v1.a < v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslAnd(): GlslValueFunction {\n  const name = 'and_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) && bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r && b2.r ,\n                b1.g && b2.g,\n                b1.b && b2.b,\n                b1.a && b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslOr(): GlslValueFunction {\n  const name = 'or_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) || bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r || b2.r ,\n                b1.g || b2.g,\n                b1.b || b2.b,\n                b1.a || b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslXor(): GlslValueFunction {\n  const name = 'xor_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) ^^ bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r ^^ b2.r ,\n                b1.g ^^ b2.g,\n                b1.b ^^ b2.b,\n                b1.a ^^ b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslPow(): GlslValueFunction {\n  return glslBuiltinBinary('pow');\n}\nexport function glslPRelu(): GlslValueFunction {\n  const name = 'prelu_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a < 0.0 ? a * b: a;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(\n      v1.r < 0.0 ? v1.r * v2.r: v1.r,\n      v1.g < 0.0 ? v1.g * v2.g: v1.g,\n      v1.b < 0.0 ? v1.b * v2.b: v1.b,\n      v1.a < 0.0 ? v1.a * v2.a: v1.a\n      );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nfunction glslBuiltinBinary(fname: string): GlslValueFunction {\n  const name = `${fname}_`;\n  const body = `\n  float ${name}(float a, float b) {\n    return ${fname}(a, b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return ${fname}(v1, v2);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nconst createBinaryProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type, cacheKey?: string): ProgramInfoLoader => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        cacheHint: cacheKey,\n        get: () => createBinaryProgramInfo(handler, inputs, glslFunc, outputTensorType)\n      };\n    };\n\nconst createBinaryProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type): ProgramInfo => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n      let outputShape = inputs[0].dims;\n\n      const usePackedTexture = handler.session.pack;\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(inputs[0].dims, inputs[1].dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        const outputRank = outputShape.length;\n        const aRank = inputs[0].dims.length !== 0 ? inputs[0].dims.length : 1;\n        const bRank = inputs[1].dims.length !== 0 ? inputs[1].dims.length : 1;\n        const aBcast = inputs[0].dims.length !== 0 ? 'bcastIndices_A(indices, aindices);' : 'aindices[0] = 0;';\n        const bBcast = inputs[1].dims.length !== 0 ? 'bcastIndices_B(indices, bindices);' : 'bindices[0] = 0;';\n\n        const glsl = getGlsl(handler.session.backend.glContext.version);\n        const shaderSource = usePackedTexture ? `\n      ${glslFunc.body}\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n        vec4 result = ${glslFunc.name}(a, b);\n        ${glsl.output} = result;\n      }` :\n                                                `\n      ${glslFunc.body}\n      float process(int indices[${outputRank}]) {\n        int aindices[${aRank}];\n        int bindices[${bRank}];\n        ${aBcast}\n        ${bBcast}\n        return ${glslFunc.name}(_A(aindices), _B(bindices));\n      }`;\n\n        return {\n          name: glslFunc.name,\n          inputNames: ['A', 'B'],\n          inputTypes: [textureType, textureType],\n          output: {dims: outputShape, type: outputTensorType, textureType},\n          shaderSource,\n          hasMain: usePackedTexture\n        };\n      }\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n      const shaderSource = `\n    ${glslFunc.body}\n    void main() {\n      vec4 v1 = ${glsl.texture2D}(A, TexCoords);\n      vec4 v2 = ${glsl.texture2D}(B, TexCoords);\n      vec4 result = ${glslFunc.name}(v1, v2);\n      ${glsl.output} = result;\n    }\n    `;\n\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        output: {dims: inputs[0].dims, type: outputTensorType, textureType},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const add = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAdd()), inputs)];\n\nexport const and = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAnd(), 'bool'), inputs)];\n\nexport const div = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslDiv()), inputs)];\n\nexport const equal = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslEqual(), 'bool'), inputs)];\n\nexport const greater = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslGreater(), 'bool'), inputs)];\n\nexport const less = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslLess(), 'bool'), inputs)];\n\nexport const mul = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslMul()), inputs)];\n\nexport const or = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslOr(), 'bool'), inputs)];\n\nexport const pow = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPow()), inputs)];\n\nexport const pRelu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPRelu()), inputs)];\n\nexport const sub = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslSub()), inputs)];\n\nexport const xor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslXor(), 'bool'), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ProtoUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const cast: OperatorImplementation<Tensor.DataType> =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], to: Tensor.DataType): Tensor[] => {\n      validateInputs(inputs);\n      return [handler.cast(inputs[0], to)];\n    };\n\nexport const parseCastAttributes: OperatorInitialization<Tensor.DataType> = (node: Graph.Node): Tensor.DataType =>\n    ProtoUtil.tensorDataTypeFromProto(node.attributes.getInt('to'));\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Cast requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {ConcatAttributes} from './concat';\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst createPackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat (packed)',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.packed),\n  cacheHint\n});\n\nconst createPackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n      const coords = getChannels('coords', rank);\n      const dtype = getCoordsDataType(rank);\n      const unpackChannel = unpackFromChannel();\n\n      const shapes = inputs.map(i => i.dims);\n      const channels = getGlChannels(rank);\n      const offsets: number[] = new Array(shapes.length - 1);\n\n      offsets[0] = shapes[0][axis];\n      for (let i = 1; i < offsets.length; i++) {\n        offsets[i] = offsets[i - 1] + shapes[i][axis];\n      }\n\n      const channel = channels[axis];\n      const lastChannels = channels.slice(-2);\n      const allChannels = channels.join();\n\n      let getValueSnippet = `if (${channel} < ${offsets[0]}) {\n        return getChannel(\n            getX0(${allChannels}), vec2(${lastChannels.join()}));\n        }`;\n      for (let i = 1; i < offsets.length; i++) {\n        const shift = offsets[i - 1];\n        getValueSnippet += `\n            if (${channel} < ${offsets[i]}  && ${channel} >= ${offsets[i - 1]}) {\n              return getChannel(\n                getX${i}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n                vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));\n            }`;\n      }\n      const lastIndex = offsets.length;\n      const shift = offsets[offsets.length - 1];\n      getValueSnippet += `\n            return getChannel(\n              getX${lastIndex}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n              vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));`;\n\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n\n      const shaderSource = `\n          ${unpackChannel}\n          float getValue(${channels.map(x => 'int ' + x)}) {\n            ${getValueSnippet}\n          }\n\n          void main() {\n            ${dtype} coords = getOutputCoords();\n            int lastDim = coords.${channels[rank - 1]};\n            coords.${channels[rank - 1]} = coords.${channels[rank - 2]};\n            coords.${channels[rank - 2]} = lastDim;\n\n            vec4 result = vec4(getValue(${coords}), 0., 0., 0.);\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} + 1;\n            if (${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.g = getValue(${coords});\n            }\n\n            ${coords[rank - 2]} = ${coords[rank - 2]} + 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]}) {\n              result.a = getValue(${coords});\n            }\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} - 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]} &&\n                ${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.b = getValue(${coords});\n            }\n            ${glsl.output} = result;\n          }\n        `;\n\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createPackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createPackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createPackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getShiftedChannelsSnippet = (channels: string[], channel: string, shift: number): string => {\n  const channelIdx = channels.indexOf(channel);\n  const res = channels.map((c, idx) => {\n    if (idx === channelIdx) {\n      return `${c} - ${shift}`;\n    } else {\n      return c;\n    }\n  });\n  return res.join();\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {createPackedConcatProgramInfoLoader} from './concat-packed';\n\nexport interface ConcatAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const concat: OperatorImplementation<ConcatAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): Tensor[] => {\n      validateInputs(inputs);\n      if (inferenceHandler.session.pack && inputs[0].dims.length > 1) {\n        const output =\n            inferenceHandler.run(createPackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      } else {\n        const output =\n            inferenceHandler.run(createUnpackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      }\n    };\n\nconst createUnpackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.unpacked),\n  cacheHint\n});\n\nconst createUnpackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n\n      const sizeInConcatAxis = new Array<number>(inputs.length);\n      let previousSum = 0;\n      for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n        previousSum += inputs[i].dims[axis];\n        sizeInConcatAxis[i] = previousSum;\n      }\n\n      let getTextureIndexWhereDataResidesMethod = '';\n      // in most cases linear search is sufficient, as in most scenarios, only 2 tensors are concatenated\n      if (inputs.length < 5) {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n      } else {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesBinarySearch(sizeInConcatAxis);\n      }\n\n      const fetchDataFromCorrectTextureMethod = getFetchDataFromCorrectTextureMethod(inputs.length, rank);\n      const getSizeInConcatAxisValueFromIndexMethod = getGetSizeInConcatAxisValueFromIndexMethod(sizeInConcatAxis);\n      const shaderSource = `\n        ${fetchDataFromCorrectTextureMethod}\n        ${getSizeInConcatAxisValueFromIndexMethod}\n        ${getTextureIndexWhereDataResidesMethod}\n        float process(int indices[${rank}]) {\n          int textureIndex = getTextureWhereDataResides (indices[${axis}]);\n\n          if(textureIndex != 0) {\n            indices[${axis}] = indices[${axis}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));\n          }\n\n          return fetchDataFromCorrectTexture(textureIndex, indices);\n        }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n      };\n    };\n\nconst createUnpackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createUnpackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createUnpackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getTextureIndexWhereDataResidesLinearSearch = (sizeInConcatAxis: number[]): string => {\n  const searchAxis = sizeInConcatAxis.map((size, i) => `if(index<${size}) {return ${i};}\n`);\n  return `int getTextureWhereDataResides(int index) {\n      ${searchAxis.join('')}\n    }`;\n};\n\n// TODO: Implement BinarySearch in GLSL\nconst getTextureIndexWhereDataResidesBinarySearch = (sizeInConcatAxis: number[]): string =>\n    getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n\nconst getFetchDataFromCorrectTextureMethod = (numberOfTensors: number, tensorRank: number) => {\n  const codeLines: string[] = [`float fetchDataFromCorrectTexture(int textureIndex, int indices[${tensorRank}]) {`];\n  for (let i = 0; i < numberOfTensors; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    } else if (i === numberOfTensors - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return _X${i}(indices); }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst getGetSizeInConcatAxisValueFromIndexMethod = (sizeInConcatAxis: number[]): string => {\n  const codeLines: string[] = ['int getSizeInConcatAxisValueFromIndex(int index) {'];\n  for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    } else if (i === sizeInConcatAxis.length - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return ${sizeInConcatAxis[i]}; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n\n  return codeLines.join('\\n');\n};\n\nexport const parseConcatAttributes: OperatorInitialization<ConcatAttributes> = (node: Graph.Node): ConcatAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis')});\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 1) {\n    throw new Error('too few inputs');\n  }\n\n  const inputType = inputs[0].type;\n  const inputDimensionality = inputs[0].dims.length;\n\n  // TODO: Support string concat\n  if (inputType === 'string') {\n    throw new Error('string tensor is not supported yet');\n  }\n\n  for (const input of inputs) {\n    // make sure types of all inputs match\n    if (input.type !== inputType) {\n      throw new Error('input tensors should be one type');\n    }\n\n    // make sure the dimensionality of all inputs are the same\n    if (input.dims.length !== inputDimensionality) {\n      throw new Error('input tensors should have the same shape');\n    }\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../../instrument';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActivationSnippet} from './fuse-utils';\n\nconst createUnpackedGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'GroupedConv',\n  inputNames: hasBias ? ['X', 'W', 'Bias'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedGroupedConvProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBias(output_channel);' : '';\n      const xShape = inputs[0].dims.slice();\n      const wShape = inputs[1].dims.slice();\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n      Logger.verbose(\n          'GroupedConv',\n          `autpPad:${attributes.autoPad}, dilations:${attributes.dilations}, group:${attributes.group}, kernelShape:${\n              attributes.kernelShape}, pads:${attributes.pads}, strides:${attributes.strides}`);\n      const outputShape =\n          calculateOutputShape(xShape, wShape, attributes.dilations, attributes.pads, attributes.strides);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n    ivec2 xRCCorner = coords.zw * strides - pads;\n    int group_id = output_channel / ${outputChannelsPerGroup};\n\n    float value = 0.0;\n    for (int wInChannel = 0; wInChannel < ${wShape[1]}; wInChannel++) {\n      int input_channel = group_id * ${wShape[1]} + wInChannel;\n      for (int wHeight = 0; wHeight < ${wShape[2]}; wHeight++) {\n        int xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]};\n\n        if (xHeight < 0 || xHeight >= ${xShape[2]}) {\n          continue;\n        }\n\n        for (int wWidth = 0; wWidth < ${wShape[3]}; wWidth++) {\n          int xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]};\n          if (xWidth < 0 || xWidth >= ${xShape[3]}) {\n            continue;\n          }\n\n          float xVal = getX(batch, input_channel, xWidth, xHeight);\n          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createUnpackedGroupedConvProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes):\n        ProgramInfoLoader => {\n          const metadata = createUnpackedGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedGroupedConvProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {createPackedIm2ColProgramInfoLoader} from './im2col-pack';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const conv2DPackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapePacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapePacked(matmulOutput, outputShape);\n    };\n\nexport const conv2DPacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n\n      // run im2col\n      const im2colOutput = inferenceHandler.run(\n          createPackedIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes),\n          [inputs[0]]);\n\n      // reshape kernel\n      const kernelReshaped = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1] * kshape[2] * kshape[3]]);\n\n      // run matmul\n      const matmulInputs =\n          (inputs.length === 3) ? [kernelReshaped, im2colOutput, inputs[2]] : [kernelReshaped, im2colOutput];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n\n      // reshape output\n      const outputReshaped = inferenceHandler.reshapePacked(matmulOutput, outputShape);\n      return outputReshaped;\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\nimport {getActivationSnippet, parseInternalActivationAttributes} from './fuse-utils';\n\nconst computeTotalPad =\n    (inDim: number, stride: number, adj: number, kernel: number, dilation: number, outSize: number) =>\n        (inDim - 1) * stride + adj + (kernel - 1) * dilation + 1 - outSize;\n\nconst distributePadding = (totalPad: number, autoPad: string, pads: number[], head: number, tail: number) => {\n  const smallPad = Math.floor(totalPad / 2);\n  if (autoPad === 'SAME_UPPER') {\n    pads[head] = smallPad;\n    pads[tail] = totalPad - smallPad;\n  } else if (autoPad === 'SAME_LOWER') {\n    pads[head] = totalPad - smallPad;\n    pads[tail] = smallPad;\n  }\n};\n\nconst calculateOutputShapeAndPads =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[], autoPad: string,\n     pads: number[], strides: readonly number[], outputPadding: readonly number[], outputShape: number[]) => {\n      const spatialRank = inputShape.length - 2;\n      const updateShape = outputShape.length === 0;\n      for (let i = 0; i < spatialRank; ++i) {\n        const outSize = updateShape ? inputShape[i + 2] * strides[i] : outputShape[i];\n        const totalPad = computeTotalPad(inputShape[i + 2], strides[i], pads[i], kernelShape[i], dilations[i], outSize);\n        distributePadding(totalPad, autoPad, pads, i, i + spatialRank);\n        if (updateShape) {\n          outputShape.push(\n              strides[i] * (inputShape[i + 2] - 1) + outputPadding[i] + (kernelShape[i] - 1) * dilations[i] + 1 -\n              pads[i] - pads[i + spatialRank]);\n        }\n      }\n    };\n\nexport interface ConvTransposeAttributes extends ConvAttributes {\n  readonly outputPadding: readonly number[];\n  readonly outputShape: readonly number[];\n}\n\nexport const convTranspose: OperatorImplementation<ConvTransposeAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvTransposeAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not convTranspose2D\n      return convTranspose2d(inferenceHandler, inputs, attributes);\n    };\n\nconst convTranspose2d: OperatorImplementation<ConvTransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvTransposeAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvTransposeAttributes(attributes, inputs);\n      return [convTranspose2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n    };\n\nconst createConvTransposeProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'ConvTranspose',\n  inputNames: hasBias ? ['X', 'W', 'B'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedConvTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvTransposeAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const valueInit = hasBias ? 'getB(output_channel)' : '0.0';\n      const xShape = inputs[0].dims;\n      const wShape = inputs[1].dims;\n      const outputChannelsPerGroup = wShape[1];\n      const inputChannelsPerGroup = wShape[0] / attributes.group;\n      const outputShape = [inputs[0].dims[0], inputs[1].dims[1] * attributes.group, ...attributes.outputShape];\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n\n    ivec2 loc = coords.zw + pads;\n\n    int group_id = output_channel / ${outputChannelsPerGroup};\n    int wOutChannel = output_channel - group_id * ${outputChannelsPerGroup};\n\n    float value = ${valueInit};\n    for (int inChannelOffset = 0; inChannelOffset < ${inputChannelsPerGroup}; inChannelOffset++) {\n      int input_channel = group_id * ${inputChannelsPerGroup} + inChannelOffset;\n      for (int wWOff = 0; wWOff < ${wShape[2]}; wWOff++) {\n        for (int wHOff = 0; wHOff < ${wShape[3]}; wHOff++) {\n          ivec2 wOff = ivec2(wWOff * ${attributes.dilations[0]}, wHOff * ${attributes.dilations[1]});\n          ivec2 wLoc = loc - wOff;\n          ivec2 wLocIn = wLoc / strides;\n          if (\n            wLocIn * strides == wLoc &&\n            wLocIn.x >= 0 && wLocIn.x < ${xShape[2]} &&\n            wLocIn.y >= 0 && wLocIn.y < ${xShape[3]}\n          ) {\n            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);\n            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);\n            value += xVal * wVal;\n          }\n        }\n      }\n    }\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nconst createUnpackedConvTransposeProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvTransposeAttributes):\n        ProgramInfoLoader => {\n          const metadata = createConvTransposeProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedConvTransposeProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n\n\nconst convTranspose2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvTransposeAttributes):\n        Tensor => {\n          const result = inferenceHandler.run(\n              createUnpackedConvTransposeProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n          return result;\n        };\n\nconst getAdjustedConvTransposeAttributes = <T extends ConvTransposeAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n\n  const pads = attributes.pads.slice();\n  const outputShape = attributes.outputShape.slice();\n  const inputShape = inputs[0].dims;\n  // If outputShape is not specified in the attributes of this op, infer it from the parameters\n  // Similarly, automatically infer pads if not specified\n  calculateOutputShapeAndPads(\n      inputShape, kernelShape, attributes.dilations, attributes.autoPad, pads, attributes.strides,\n      attributes.outputPadding, outputShape);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, outputShape, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvTransposeAttributes: OperatorInitialization<ConvTransposeAttributes> =\n    (node: Graph.Node): ConvTransposeAttributes => {\n      const attributes = node.attributes;\n      const activationAttributes = parseInternalActivationAttributes(attributes);\n      // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n      const autoPad = attributes.getString('auto_pad', 'NOTSET');\n      const dilations = attributes.getInts('dilations', [1, 1]);\n      const group = attributes.getInt('group', 1);\n      const kernelShape = attributes.getInts('kernel_shape', []);\n      const outputPadding = attributes.getInts('output_padding', [0, 0]);\n      const outputShape = attributes.getInts('output_shape', []);\n      const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n      const strides = attributes.getInts('strides', [1, 1]);\n\n      return createAttributeWithCacheKey(\n          {autoPad, dilations, group, kernelShape, outputPadding, outputShape, pads, strides, ...activationAttributes});\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvTransposeAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/main/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[0];\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  const featureMaps = inputs[1].dims[1] * attributes.group;\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[2].dims[0] !== featureMaps)) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // Wrong output padding dimension\n  if (attributes.outputPadding.length !== spatialRank) {\n    throw new Error(`output_padding should be ${spatialRank}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // as with kernelShape, must have same number of spatial dims as input\n  if (attributes.outputShape.length !== 0 && attributes.outputShape.length !== inputs[0].dims.length - 2) {\n    throw new Error('invalid output shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('ConvTranspose input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('ConvTranspose input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {createUnpackedGroupedConvProgramInfoLoader} from './conv-grouped';\nimport {conv2DPacked} from './conv-pack';\nimport {createDotProductProgramInfoLoader} from './dot-product';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createIm2ColProgramInfoLoader} from './im2col';\nimport {createMatmulProgramInfoLoader} from './matmul';\n\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[]): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(2);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputSpatialShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      const outputShape = [batchSize, outChannels].concat(...outputSpatialShape);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n}\n\nexport const conv: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not conv2D\n      return conv2d(inferenceHandler, inputs, attributes);\n    };\n\nconst conv2d: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n      const packMode = inferenceHandler.session.pack;\n      const isPointwise = adjustedAttributes.kernelShape[0] === 1 && adjustedAttributes.kernelShape[1] === 1;\n      if (adjustedAttributes.group > 1) {\n        const result = inferenceHandler.run(\n            createUnpackedGroupedConvProgramInfoLoader(inferenceHandler, inputs, adjustedAttributes), inputs);\n        return [result];\n      } else if (isPointwise && packMode) {\n        return [conv2DUnpackedPointwise(inferenceHandler, inputs, adjustedAttributes)];\n      } else if (packMode && inputs[0].dims.length === 4 && inputs[0].dims[0] === 1 && !isPointwise) {\n        return [conv2DPacked(inferenceHandler, inputs, adjustedAttributes)];\n      } else {\n        return [conv2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n      }\n    };\n\nconst conv2DUnpackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapeUnpacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapeUnpacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(createMatmulProgramInfoLoader(matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapeUnpacked(matmulOutput, outputShape);\n    };\n\nconst conv2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const xIm2Col = inferenceHandler.run(\n          createIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes), [inputs[0]]);\n\n      const dotProductInputs = inputs.length === 3 ? [xIm2Col, inputs[1], inputs[2]] : [xIm2Col, inputs[1]];\n      const output = inferenceHandler.run(\n          createDotProductProgramInfoLoader(inferenceHandler, inputs, outputShape, attributes), dotProductInputs);\n      return output;\n    };\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes: OperatorInitialization<ConvAttributes> = (node: Graph.Node): ConvAttributes => {\n  const attributes = node.attributes;\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const autoPad = attributes.getString('auto_pad', 'NOTSET');\n  const dilations = attributes.getInts('dilations', [1, 1]);\n  const group = attributes.getInt('group', 1);\n  const kernelShape = attributes.getInts('kernel_shape', []);\n  const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n  const strides = attributes.getInts('strides', [1, 1]);\n\n  return createAttributeWithCacheKey({autoPad, dilations, group, kernelShape, pads, strides, ...activationAttributes});\n};\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/main/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('Conv input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('Conv input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface DepthToSpaceAttributes {\n  mode: 'DCR'|'CRD';\n  blocksize: number;\n}\n\nexport const depthToSpace: OperatorImplementation<DepthToSpaceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: DepthToSpaceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const blocksize = attributes.blocksize;\n      const blocksizeSqr = blocksize * blocksize;\n      const transposePerm = attributes.mode === 'DCR' ? [0, 3, 4, 1, 5, 2] : [0, 1, 4, 2, 5, 3];\n      const firstReshapeShape = attributes.mode === 'DCR' ?\n          [\n            inputs[0].dims[0], blocksize, blocksize, inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ] :\n          [\n            inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, blocksize, blocksize, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ];\n\n      // const transpose = new WebGLTranspose();\n      // const attributes = new Attribute(undefined);\n      // attributes.set('perm', 'ints', transposePerm);\n      // transpose.initialize(attributes);\n\n      // First reshape\n      const firstReshapedTensor = inferenceHandler.reshapeUnpacked(inputs[0], firstReshapeShape);\n\n      // transpose\n      const transposeAttributes: TransposeAttributes = {perm: transposePerm, cacheKey: `${transposePerm}`};\n      const [transposeOutput] = transpose(inferenceHandler, [firstReshapedTensor], transposeAttributes);\n\n      // Second reshape\n      const secondReshapeShape = [\n        inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2] * blocksize,\n        inputs[0].dims[3] * blocksize\n      ];\n      const result = inferenceHandler.reshapeUnpacked(transposeOutput, secondReshapeShape);\n      return [result];\n    };\n\nexport const parseDepthToSpaceAttributes: OperatorInitialization<DepthToSpaceAttributes> =\n    (node: Graph.Node): DepthToSpaceAttributes => {\n      // processing node attributes\n      const blocksize = node.attributes.getInt('blocksize');\n      if (blocksize < 1) {\n        throw new Error(`blocksize must be >= 1, but got : ${blocksize} for DepthToSpace`);\n      }\n      const mode = node.attributes.getString('mode', 'DCR');\n      if (mode !== 'DCR' && mode !== 'CRD') {\n        throw new Error(`unrecognized mode: ${mode} for DepthToSpace`);\n      }\n      return {mode, blocksize};\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (inputs.length !== 1) {\n    throw new Error(`DepthToSpace expect 1 inputs, but got ${inputs.length}`);\n  }\n\n  // Input has to be a 4-D tensor\n  // TODO: Support string depth-to-space.\n  if (inputs[0].type === 'string' || inputs[0].dims.length !== 4) {\n    throw new TypeError('DepthToSpace input should be a 4-D numeric tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {getActivationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {calculateIm2ColDims} from './im2col';\n\nconst createDotProductProgramMetadata = (hasBias: boolean, attributes: InternalActivationAttributes) => ({\n  name: 'ConvDotProduct',\n  inputNames: hasBias ? ['Im2Col', 'K', 'B'] : ['Im2Col', 'K'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.packedLastDimension],\n  cacheKey: attributes.activationCacheKey\n});\n\nconst createDotProductProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: readonly Tensor[],\n     outputShape: number[], attributes: InternalActivationAttributes): ProgramInfo => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const adjustedKernelShape = [kshape[0], Math.ceil((xshape[1] * kshape[2] * kshape[3]) / 4)];\n      const im2colShape = calculateIm2ColDims(xshape, kshape, outputShape);\n      const [kWidth, kHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(adjustedKernelShape, TextureType.packedLastDimension);\n\n      const im2colStrides = ShapeUtil.computeStrides(im2colShape);\n      const [im2colWidth, im2colHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(im2colShape, TextureType.packedLastDimension);\n      const rank = outputShape.length;\n\n      const initValue = (inputs.length < 3) ? '0.0' : '_B(b)';\n      const sharedDim = Math.ceil(xshape[1] * kshape[2] * kshape[3] / 4);\n      const {activationFunction, applyActivation} = getActivationSnippet(attributes);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n${activationFunction}\nfloat process(int indices[${rank}]) {\n  int b[1];\n  b[0] = indices[1];\n  int im2col[4];\n  im2col[0] = indices[0];\n  im2col[1] = indices[2];\n  im2col[2] = indices[3];\n  int im2colOffset = im2col[0] * ${im2colStrides[0]} + im2col[1] * ${im2colStrides[1]} + im2col[2] * ${\n          im2colStrides[2]};\n  int kernelOffset = indices[1] * ${adjustedKernelShape[1]};\n  float value = ${initValue};\n  for (int i = 0; i < ${sharedDim}; ++i) {\n    vec2 im2colCoords = offsetToCoords(im2colOffset, ${im2colWidth}, ${im2colHeight});\n    vec2 kernelCoords = offsetToCoords(kernelOffset, ${kWidth}, ${kHeight});\n    value += dot(${glsl.texture2D}(Im2Col, im2colCoords), ${glsl.texture2D}(K, kernelCoords));\n    ++im2colOffset;\n    ++kernelOffset;\n  }\n  ${applyActivation}\n  return value;\n}`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nexport const createDotProductProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], outputShape: number[],\n     attributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createDotProductProgramMetadata(inputs.length > 2, attributes);\n      return {\n        ...metadata,\n        get: () => createDotProductProgramInfo(inferenceHandler, metadata, inputs, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const flatten: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number): Tensor[] => {\n      validateInputs(inputs, axis);\n\n      const outputDims = ShapeUtil.flattenShape(inputs[0].dims, axis);\n      return [inferenceHandler.reshapeUnpacked(inputs[0], outputDims)];\n    };\n\nexport const parseFlattenAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getInt('axis', 1);  // default axis is 1\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Flatten requires 1 input.');\n  }\n\n  const r = inputs[0].dims.length;\n  if (r === 0) {\n    throw new Error('scalar tensor is not supported.');\n  }\n\n  if (axis < -r || axis > r) {\n    throw new Error('Invalid axis');\n  }\n\n  // TODO: Support string type\n  if (inputs[0].type === 'string') {\n    throw new Error('string tensor is not supported.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Attribute} from '../../../attribute';\nimport {MAX_CLIP, MIN_CLIP} from '../../../util';\nimport {GlslValueFunction} from '../glsl-definitions';\n\nimport {glslClip, glslRelu, glslSigmoid} from './unary-op';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport function getActivationSnippet(attributes: InternalActivationAttributes) {\n  let func: GlslValueFunction;\n  switch (attributes.activation) {\n    case 'Relu':\n      func = glslRelu();\n      break;\n    case 'Sigmoid':\n      func = glslSigmoid();\n      break;\n    case 'Clip':\n      func = glslClip(attributes.clipMin!, attributes.clipMax!);\n      break;\n    // TODO: adding other activations that can be fused.\n    default:\n      return {activationFunction: '', applyActivation: ''};\n  }\n\n  const activationName = func.name;\n  const activationFunction = func.body;\n  const applyActivation = `value = ${activationName}_(value);`;\n  return {activationFunction, applyActivation};\n}\n\nexport const parseInternalActivationAttributes = (attributes: Attribute): InternalActivationAttributes => {\n  const activation = attributes.getString('activation', '');\n\n  if (activation === 'Clip') {\n    const [clipMin, clipMax] = attributes.getFloats('activation_params', [MIN_CLIP, MAX_CLIP]);\n    return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n  }\n  return {activation, activationCacheKey: activation};\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\ninterface GatherAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const gather: OperatorImplementation<GatherAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): Tensor[] => {\n      validateInputs(inputs, attributes.axis);\n      const output = inferenceHandler.run(createGatherProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseGatherAttributes: OperatorInitialization<GatherAttributes> = (node: Graph.Node): GatherAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 0)});\n\nconst gatherProgramMetadata = {\n  name: 'Gather',\n  inputNames: ['A', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createGatherProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const indexDataShape = inputs[1].dims.slice();\n      const outputShape = new Array(inputShape.length + indexDataShape.length - 1);\n\n      axis = ShapeUtil.normalizeAxis(axis, inputShape.length);\n      const indexCopyOps: string[] = [];\n      for (let i = 0; i < outputShape.length; i++) {\n        // outputShape is divided into three parts: A, B, C\n        // |0        axis|  axis + indexDataShape.length |          end|\n        // |     A       |             B                 |      C      |\n        //\n        // inputIdx: [A, inputs[1][B], C]\n        if (i < axis) {  // A\n          outputShape[i] = inputShape[i];\n          indexCopyOps.push(`inputIdx[${i}] = outputIdx[${i}];`);\n        } else {\n          if (i < axis + indexDataShape.length) {  // B\n            outputShape[i] = indexDataShape[i - axis];\n            indexCopyOps.push(`indexDataIdx[${i - axis}] = outputIdx[${i}];`);\n          } else {                                                       // C\n            outputShape[i] = inputShape[i - indexDataShape.length + 1];  // skip 1 for axis\n            indexCopyOps.push(`inputIdx[${i - indexDataShape.length + 1}] = outputIdx[${i}];`);\n          }\n        }\n      }\n\n      const orank = outputShape.length || 1;\n      const irank = inputShape.length;\n      const iDrank = indexDataShape.length || 1;\n      const shaderSource = `\n      float process(int outputIdx[${orank}]) {\n        int inputIdx[${irank}];\n        int indexDataIdx[${iDrank}];\n        indexDataIdx[0] = 0;\n        ${indexCopyOps.join('\\n        ')}\n        int idx = int(_B(indexDataIdx));\n        inputIdx[${axis}] = idx < 0 ? idx + ${inputShape[axis]} : idx;\n        return _A(inputIdx);\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createGatherProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): ProgramInfoLoader => {\n      const metadata = {...gatherProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createGatherProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Gather requires 2 inputs.');\n  }\n  const tensorRank = inputs[0].dims.length;\n  if (tensorRank < 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (axis < -tensorRank || axis > tensorRank - 1) {\n    throw new Error('Invalid axis.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invaid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invaid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {GemmUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n  isOptionalC: boolean;  // in opset 11, C becomes optional\n}\n\nexport const gemm: OperatorImplementation<GemmAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GemmAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(createGemmProgramInfoLoader(inputs, attributes), inputs);\n      return [output];\n    };\n\nconst parseGemmAttributes = (node: Graph.Node, isOptionalC: boolean): GemmAttributes => {\n  const transA = node.attributes.getInt('transA', 0) !== 0;\n  const transB = node.attributes.getInt('transB', 0) !== 0;\n  const alpha = node.attributes.getFloat('alpha', 1.0);\n  const beta = node.attributes.getFloat('beta', 1.0);\n  return createAttributeWithCacheKey({transA, transB, alpha, beta, isOptionalC});\n};\n\nexport const parseGemmAttributesV7: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, false);\n\nexport const parseGemmAttributesV11: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, true);\n\nconst createGemmProgramInfoLoader = (inputs: Tensor[], attributes: GemmAttributes): ProgramInfoLoader => {\n  const metadata = {\n    name: 'Gemm',\n    inputNames: inputs.length === 3 ? ['A', 'B', 'C'] : ['A', 'B'],\n    inputTypes: inputs.length === 3 ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                                      [TextureType.unpacked, TextureType.unpacked],\n    key: attributes.cacheKey\n  };\n\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\n};\n\nconst createGemmProgramInfo =\n    (metadata: ProgramMetadata, inputs: Tensor[], attributes: GemmAttributes): ProgramInfo => {\n      const aShape = inputs[0].dims.slice();\n      const bShape = inputs[1].dims.slice();\n      const [M, N] = GemmUtil.getShapeOfGemmResult(\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n      const outputShape = [M, N];\n      if (!outputShape) {\n        throw new Error('Can\\'t use gemm on the given tensors');\n      }\n      let sharedDim = aShape[aShape.length - 1];\n      let line = '';\n      if (attributes.transA) {\n        sharedDim = aShape[0];\n      }\n      if (attributes.transA && attributes.transB) {\n        line = 'value += _A_T(a) * _B_T(b);';\n      } else if (attributes.transA && !attributes.transB) {\n        line = 'value += _A_T(a) * _B(b);';\n      } else if (!attributes.transA && attributes.transB) {\n        line = 'value += _A(a) * _B_T(b);';\n      } else if (!attributes.transA && !attributes.transB) {\n        line = 'value += _A(a) * _B(b);';\n      }\n      const rank = outputShape.length;\n      const declareC = inputs.length === 3 ? `int c[${inputs[2].dims.length}];` : '';\n      const broadcastC = inputs.length === 3 ? 'bcastIndices_C(indices, c);' : '';\n      const calculateC = inputs.length === 3 ? 'value += beta * _C(c);' : '';\n      const shaderSource = `\n      float process(int indices[${rank}]) {\n          int a[${rank}];\n          int b[${rank}];\n          ${declareC}\n\n          copyVec(indices, a);\n          copyVec(indices, b);\n          ${broadcastC}\n\n          float value = 0.0;\n          for (int k=0; k<${sharedDim}; ++k) {\n              a[${rank - 1}] = k;\n              b[${rank - 2}] = k;\n              ${line}\n          }\n\n          value = value * alpha;\n          ${calculateC}\n          return value;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        variables: [\n          {name: 'alpha', type: 'float', data: attributes.alpha}, {name: 'beta', type: 'float', data: attributes.beta}\n        ],\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: GemmAttributes): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (attributes.isOptionalC && (inputs.length < 2 || inputs.length > 3)) {\n    throw new Error('Invaid input shape.');\n  }\n  if (!attributes.isOptionalC && inputs.length !== 3) {\n    throw new Error('Gemm requires 3 inputs');\n  }\n\n  // 'C' can be of dimensionality 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length !== 1 && inputs[2].dims.length !== 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64') ||\n      (inputs.length === 3 && inputs[2].type !== 'float32' && inputs[2].type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n\n  if ((inputs[0].type !== inputs[1].type) || (inputs.length === 3 && inputs[0].type !== inputs[2].type)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col (packed)',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed],\n  cacheHint,\n});\n\nconst createPackedIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n      const rowDim = 2;\n      const colDim = 3;\n      const rank = outputShape.length;\n      const im2colShape = [wshape[1] * wshape[2] * wshape[3], outputShape[2] * outputShape[3]];\n      const kernelSize = wshape[2] * wshape[3];\n      const unpackChannel = unpackFromChannel();\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      let unrolled = '';\n\n      for (let row = 0; row <= 1; row++) {\n        for (let col = 0; col <= 1; col++) {\n          unrolled += `\n            blockIndex = rc.x + ${col};\n            pos = rc.y + ${row};\n\n            if(blockIndex < ${im2colShape[1]} && pos < ${im2colShape[0]}) {\n              offsetY = int(blockIndex / (${outputShape[rank - 1]})) * ${attributes.strides[0]} -\n                ${attributes.pads[0]};\n              d0 = offsetY + ${attributes.dilations[0]} * (imod(pos, ${kernelSize}) / ${wshape[2]});\n\n              if(d0 < ${xshape[rowDim]} && d0 >= 0) {\n                offsetX = imod(blockIndex, ${outputShape[rank - 1]}) * ${attributes.strides[1]} -\n                  ${attributes.pads[1]};\n                d1 = offsetX + ${attributes.dilations[1]} * imod(imod(pos, ${kernelSize}), ${wshape[2]});\n\n                if(d1 < ${xshape[colDim]} && d1 >= 0) {\n\n                  ch = int(float(pos)/ ${kernelSize}.);\n                    innerDims = vec2(d0, d1);\n                    result[${row * 2 + col}] = getChannel(\n                      getA(0, ch, int(innerDims.x),\n                      int(innerDims.y)), innerDims);\n                }\n              }\n            }\n\n          `;\n        }\n      }\n\n      const shaderSource = `\n      ${unpackChannel}\n\n      void main() {\n        ivec2 rc = getOutputCoords();\n          vec4 result = vec4(0.0);\n          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n          vec2 innerDims;\n          ${unrolled}\n          ${glsl.output} = result;\n      }\n            `;\n      return {\n        ...metadata,\n        output: {dims: im2colShape, type: x.type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createPackedIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {ConvAttributes} from './conv';\n\nconst createIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n  cacheHint,\n});\n\nconst createIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n\n      const rank = outputShape.length;\n      const im2colDims = calculateIm2ColDims(xshape, wshape, outputShape, 4);\n\n      const shaderSource = `\n        const int XC = ${xshape[1]};\n        const int XH = ${xshape[2]};\n        const int XW = ${xshape[3]};\n        const int KH = ${attributes.kernelShape[0]};\n        const int KW = ${attributes.kernelShape[1]};\n        const int dilationH = ${attributes.dilations[0]};\n        const int dilationW = ${attributes.dilations[1]};\n        const int strideH = ${attributes.strides[0]};\n        const int strideW = ${attributes.strides[1]};\n        const int padH = ${attributes.pads[0]};\n        const int padW = ${attributes.pads[1]};\n        const int KHKW = KH*KW;\n        const int XCKHKW = XC * KHKW;\n        const int outputChannels = 4;\n        vec4 process(int indices[${rank}]) {\n          int b  = indices[0]; // batch size\n          int oh = indices[1] * strideH - padH; //output height\n          int ow = indices[2] * strideW - padW; //output width\n          int p = indices[3] * outputChannels; //patch\n          vec4 value = vec4(0.0);\n          for(int i=0; i < outputChannels; ++i) {\n            if(p < XCKHKW) {\n              int patchC = p / KHKW;\n              int patchH = (p - patchC*KHKW) / KW;\n              int patchW = (p - patchC*KHKW) - patchH * KW;\n              int xh2 = oh + patchH * dilationH;\n              int xw2 = ow + patchW * dilationW;\n              int x[${xshape.length}];\n              x[0] = b;\n              x[1] = patchC;\n              x[2] = xh2;\n              x[3] = xw2;\n              if(xh2 >= 0 &&\n                  xh2 < XH &&\n                  xw2 >= 0 &&\n                  xw2 < XW) {\n                value[i] = _X(x);\n              }\n            }\n            ++p;\n          }\n          return value;\n        }\n        `;\n      return {\n        ...metadata,\n        output: {dims: im2colDims, type: x.type, textureType: TextureType.packedLastDimension},\n        shaderSource\n      };\n    };\n\nexport const createIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n\n\nexport const calculateIm2ColDims =\n    (inputShape: readonly number[], kernelShape: readonly number[], outputShape: readonly number[], channels = 4):\n        number[] =>\n            [outputShape[0], outputShape[2], outputShape[3],\n             Math.ceil(inputShape[1] * kernelShape[2] * kernelShape[3] / channels)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface ImageScalerAttributes extends AttributeWithCacheKey {\n  scale: number;\n  bias: number[];\n}\n\nexport const imageScaler: OperatorImplementation<ImageScalerAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output =\n          inferenceHandler.run(createImageScalerProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseImageScalerAttributes: OperatorInitialization<ImageScalerAttributes> =\n    (node: Graph.Node): ImageScalerAttributes => {\n      const scale = node.attributes.getFloat('scale');\n      const bias = node.attributes.getFloats('bias');\n      return createAttributeWithCacheKey({scale, bias});\n    };\n\nconst imageScalerProgramMetadata = {\n  name: 'ImageScaler',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createImageScalerProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], attributes: ImageScalerAttributes):\n        ProgramInfo => {\n          const outputShape = inputs[0].dims.slice();\n          const rank = outputShape.length;\n          const getBiasMethod = createGetBiasMethod(attributes.bias.length);\n          const shaderSource = `\n      ${getBiasMethod}\n      float process(int indices[${rank}]) {\n        return _X(indices) * scale + getBias(bias, indices[1]);\n      }`;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            variables: [\n              {name: 'bias', type: 'float', arrayLength: attributes.bias.length, data: attributes.bias},\n              {name: 'scale', type: 'float', data: attributes.scale}\n            ],\n            shaderSource\n          };\n        };\n\nconst createImageScalerProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): ProgramInfoLoader => {\n      const metadata = {...imageScalerProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createImageScalerProgramInfo(handler, metadata, inputs, attributes)};\n    };\n\nconst createGetBiasMethod = (numChannels: number): string => {\n  const codeLines: string[] = [`float getBias(float bias[${numChannels}], int channel) {`];\n  for (let i = 0; i < numChannels; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (channel == ${i}) { return bias[${i}]; }`);\n    } else if (i === numChannels - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return bias[${i}]; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (channel == ${i}) { return bias[${i}]; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('ImageScaler requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Invalid input shape.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport const instanceNormalization: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], epsilon: number): Tensor[] => {\n      validateInputs(inputs);\n\n      const meanAndVariance = inferenceHandler.run(createMeanAndVarianceProgramInfoLoader(inputs[0]), inputs);\n      const output = inferenceHandler.run(\n          createComputeOutputProgramInfoLoader(inferenceHandler, inputs[0], epsilon, meanAndVariance.dims),\n          [inputs[0], meanAndVariance, inputs[1], inputs[2]]);\n      return [output];\n    };\n\nexport const parseInstanceNormalizationAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getFloat('epsilon', 1e-5);\n\nconst meanAndVarianceProgramMetadata = {\n  name: 'InstanceNormalization_MeanAndVariance',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createMeanAndVarianceProgramInfo = (metadata: ProgramMetadata, input: Tensor): ProgramInfo => {\n  const xDims = input.dims.slice();\n  const channel = xDims[1];\n  const channelSize = xDims[2] * xDims[3];\n  const outputShape = [xDims[0], channel];\n\n  const shaderSource = `\n      vec4 process(int[2] indices) {\n        vec4 v = vec4(0.0);\n        int a[4];\n        a[0] = indices[0];\n        a[1] = indices[1];\n        float temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += x;\n          }\n        }\n        float mean = temp / float(${channelSize});\n        temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += (x - mean) * (x - mean);\n          }\n        }\n        v.r = mean;\n        v.g = temp / float(${channelSize});\n\n        return v;\n      }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: input.type, textureType: TextureType.packedLastDimension},\n    shaderSource\n  };\n};\n\nconst createMeanAndVarianceProgramInfoLoader = (input: Tensor): ProgramInfoLoader => ({\n  ...meanAndVarianceProgramMetadata,\n  get: () => createMeanAndVarianceProgramInfo(meanAndVarianceProgramMetadata, input)\n});\n\nconst computeOutputProgramMetadata = {\n  name: 'InstanceNormalization_ComputeOutput',\n  inputNames: ['X', 'MeanAndVariance', 'Scale', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createComputeOutputProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, epsilon: number,\n     meanAndVarianceShape: readonly number[]): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(meanAndVarianceShape, TextureType.packedLastDimension);\n      const [meanAndVarianceWidth, meanAndVarianceHeight] = [textureWidth / 4, textureHeight];\n      const shaderSource = `\n      vec4 get_MeanAndVariance(int[2] mv) {\n        int offset = indicesToOffset_MeanAndVariance(mv);\n        vec2 coords = offsetToCoords(offset, ${meanAndVarianceWidth}, ${meanAndVarianceHeight});\n        return ${glsl.texture2D}(MeanAndVariance, coords);\n      }\n\n      float process(int[4] indices) {\n        int mv[2];\n        mv[0] = indices[0];\n        mv[1] = indices[1];\n        vec4 mean_and_variance = get_MeanAndVariance(mv);\n        float mean = mean_and_variance.r;\n        float variance = mean_and_variance.g;\n\n        int sb[1];\n        sb[0] = indices[1];\n        float scale = _Scale(sb);\n        float b = _B(sb);\n\n        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        variables: [{name: 'epsilon', type: 'float', data: epsilon}],\n        shaderSource\n      };\n    };\n\nconst createComputeOutputProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, epsilon: number, meanAndVarianceShape: readonly number[]):\n        ProgramInfoLoader => {\n          const metadata = {...computeOutputProgramMetadata, cacheHint: `${epsilon}`};\n          return {\n            ...metadata,\n            get: () => createComputeOutputProgramInfo(inferenceHandler, metadata, input, epsilon, meanAndVarianceShape)\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 3) {\n    throw new Error('InstanceNormalization requires 3 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n\n  // input should at least have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1]) {\n    throw new Error('Input shapes are mismatched.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Only support 4-D input shape.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActivationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {getBiasForMatmul} from './matmul';\n\nconst createPackedMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul (packed)',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.packed, TextureType.packed, TextureType.packed] :\n                        [TextureType.packed, TextureType.packed],\n  cacheHint\n});\n\nconst createPackedMatmulProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n      const aShape = inputs[0].dims;\n      const bShape = inputs[1].dims;\n      const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n\n      if (!outputShape) {\n        throw new Error('Can\\'t use matmul on the given tensors');\n      }\n      const sharedDim = aShape[aShape.length - 1];\n      const sharedDimIndex = Math.ceil(sharedDim / 2);\n      const aRank = aShape.length;\n      const bRank = bShape.length;\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const coordsDataType = getCoordsDataType(outputShape.length);\n      const outRank = outputShape.length;\n      const allGlChannels = getGlChannels();\n      const {activationFunction, applyActivation} = getActivationSnippet(activationAttributes);\n\n      const getBiasForMatmulSnippet =\n          hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, true)}` : '';\n\n      const getBcastedSamplerForMatmulSnippet =\n          isBroadcast ? `${getBcastSamplerForMatmul(coordsDataType, allGlChannels, inputs, outputShape)}` : '';\n\n      const getSamplerAInLoopSnippet = isBroadcast ? 'getAAtOutCoordsMatmul(i)' : `getA(${getA(allGlChannels, aRank)})`;\n      const getSamplerBInLoopSnippet = isBroadcast ? 'getBAtOutCoordsMatmul(i)' : `getB(${getB(allGlChannels, bRank)})`;\n      const getOutputCoordsSnippet = isBroadcast ? '' : `${coordsDataType} rc =\n          getOutputCoords(); int lastDim = rc.${allGlChannels[outRank - 1]}; rc.${allGlChannels[outRank - 1]} =\n          rc.${allGlChannels[outRank - 2]}; rc.${allGlChannels[outRank - 2]} = lastDim;\n      `;\n      const shaderSource = `\n            ${getBcastedSamplerForMatmulSnippet}\n            ${getBiasForMatmulSnippet}\n            ${activationFunction}\n            void main() {\n              ${getOutputCoordsSnippet}\n\n              vec4 value = vec4(0);\n              for (int i = 0; i < ${sharedDimIndex}; i++) {\n                vec4 a = ${getSamplerAInLoopSnippet};\n                vec4 b = ${getSamplerBInLoopSnippet};\n\n                value += (a.rrbb * b.rgrg);\n                value += (a.ggaa * b.baba);\n              }\n              ${processBias}\n              ${applyActivation}\n              ${glsl.output} = value;\n            }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedMatmulProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createPackedMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedMatmulProgramInfo(inferenceHandler, metadata, inputs, activationAttributes)\n      };\n    };\n\nfunction getBcastSamplerForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inputs: Tensor[], outShape: readonly number[]): string {\n  let unpackedACoordsSnippet = [];\n  let unpackedBCoordsSnippet = [];\n\n  const inAShape = inputs[0].dims;\n  const inBShape = inputs[1].dims;\n\n  const inARank = inAShape.length;\n  const inBRank = inBShape.length;\n\n  const outRank = outShape.length;\n  const rankADiff = outRank - inARank;\n  const rankBDiff = outRank - inBRank;\n\n  unpackedACoordsSnippet = inAShape.map((s, i) => `coords.${allGlChannels[i + rankADiff]}`);\n  unpackedACoordsSnippet[inARank - 1] = 'i*2';\n  unpackedACoordsSnippet.join(', ');\n  unpackedBCoordsSnippet = inBShape.map((s, i) => `coords.${allGlChannels[i + rankBDiff]}`);\n  unpackedBCoordsSnippet[inBRank - 2] = 'i*2';\n  unpackedBCoordsSnippet.join(', ');\n\n  const broadcastADims = BroadcastUtil.getBroadcastDims(inAShape, outShape);\n  const broadcastBDims = BroadcastUtil.getBroadcastDims(inBShape, outShape);\n\n  const coordsASnippet = broadcastADims.map(d => `coords.${allGlChannels[d + rankADiff]} = 0;`).join('\\n');\n  const coordsBSnippet = broadcastBDims.map(d => `coords.${allGlChannels[d + rankBDiff]} = 0;`).join('\\n');\n  const swapDimSnippet = `int lastDim = coords.${allGlChannels[outRank - 1]};\n  coords.${allGlChannels[outRank - 1]} = coords.${allGlChannels[outRank - 2]};\n  coords.${allGlChannels[outRank - 2]} = lastDim;`;\n\n  const getBcastSamplerMatmulSource = `\nvec4 getAAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsASnippet}\n  vec4 outputValue = getA(${unpackedACoordsSnippet});\n  return outputValue;\n}\n\nvec4 getBAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsBSnippet}\n  vec4 outputValue = getB(${unpackedBCoordsSnippet});\n  return outputValue;\n}`;\n\n  return getBcastSamplerMatmulSource;\n}\n\nfunction getA(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += `rc.${allGlChannels[rank - 2]}, ` +\n      'i*2';\n  return res;\n}\n\nfunction getB(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += 'i*2, ' +\n      `rc.${allGlChannels[rank - 1]}`;\n  return res;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActivationSnippet, InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const matMul: OperatorImplementation<InternalActivationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: InternalActivationAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      if (inferenceHandler.session.pack) {\n        return [inferenceHandler.run(\n            createPackedMatmulProgramInfoLoader(inferenceHandler, inputs, attributes), inputs)];\n      } else {\n        return [inferenceHandler.run(createMatmulProgramInfoLoader(inputs, attributes), inputs)];\n      }\n    };\n\nexport const parseMatMulAttributes: OperatorInitialization<InternalActivationAttributes> =\n    (node: Graph.Node): InternalActivationAttributes => parseInternalActivationAttributes(node.attributes);\n\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nfunction createMatmulProgramInfo(\n    metadata: ProgramMetadata, inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfo {\n  const aShape = inputs[0].dims;\n  const bShape = inputs[1].dims;\n  const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n  if (!outputShape) {\n    throw new Error('Can\\'t use matmul on the given tensors');\n  }\n  const coordsDataType = getCoordsDataType(outputShape.length);\n  const allGlChannels = getGlChannels();\n  const {activationFunction, applyActivation} = getActivationSnippet(activationAttributes);\n\n  const hasBias = inputs.length > 2;\n  const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n  const getBiasForMatmulSnippet =\n      hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, false)}` : '';\n\n  const rank = outputShape.length;\n  const arank = aShape.length;\n  const brank = bShape.length;\n  const sharedDim = aShape[aShape.length - 1];\n  const shaderSource = `\n    ${activationFunction}\n    ${getBiasForMatmulSnippet}\n    float process(int indices[${rank}]) {\n        int a[${arank}];\n        int b[${brank}];\n        bcastMatmulIndices_A(indices, a);\n        bcastMatmulIndices_B(indices, b);\n\n        float value;\n        for (int k=0; k<${sharedDim}; ++k) {\n            a[${arank - 1}] = k;\n            b[${brank - 2}] = k;\n            value += _A(a) * _B(b);\n        }\n        ${processBias}\n        ${applyActivation}\n        return value;\n    }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n    shaderSource,\n  };\n}\n\nexport function createMatmulProgramInfoLoader(\n    inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader {\n  const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n  return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\n}\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64')) {\n    throw new Error('inputs should be float type');\n  }\n\n  if (inputs[0].type !== inputs[1].type) {\n    throw new Error('inputs types should match');\n  }\n};\n\nexport function getBiasForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inShape: readonly number[], outShape: readonly number[],\n    isPacked: boolean): string {\n  let unpackedCoordsSnippet = '';\n  const inRank = inShape.length;\n  const outRank = outShape.length;\n  const rankDiff = outRank - inRank;\n  if (outRank < 2 && inRank > 0) {\n    unpackedCoordsSnippet = 'coords';\n  } else {\n    unpackedCoordsSnippet = inShape.map((s, i) => `coords.${allGlChannels[i + rankDiff]}`).join(', ');\n  }\n  const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n  const coordsSnippet = broadcastDims.map(d => `coords.${allGlChannels[d + rankDiff]} = 0;`).join('\\n');\n  const inSize = ShapeUtil.size(inShape);\n  const isInputScalar = inSize === 1;\n  let output = 'vec4(outputValue.xx, outputValue.yy)';\n  if (isInputScalar) {\n    output = 'vec4(outputValue.x)';\n  }\n  const getBiasForMatmulSource = isPacked ? `\nvec4 getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  vec4 outputValue = getBias(${unpackedCoordsSnippet});\n  return ${output};\n}` :\n                                            `\nfloat getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  return getBias(coords.x);\n}`;\n\n  return getBiasForMatmulSource;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels} from './packing-utils';\n\nconst packProgramMetadata = {\n  name: 'pack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpackedReversed]\n};\n\nconst createPackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const inputShape = input.dims;\n\n  const inputRank = inputShape.length;\n  // createTextureLayoutFromShape won't change output rank. Need to verify by running tests\n  const outputRank = input.dims.length;\n\n  const coordsDataType = getCoordsDataType(outputRank);\n  const channels = getChannels('rc', outputRank);\n  const setup = getSetup(outputRank, channels, inputShape[inputShape.length - 2], inputShape[inputShape.length - 1]);\n\n  let reversedInputWH;\n  if (inputRank === 0) {\n    reversedInputWH = [1, 1];\n  } else if (inputRank === 1) {\n    reversedInputWH = [inputShape[0], 1];\n  } else {\n    reversedInputWH = [inputShape[outputRank - 1], inputShape[outputRank - 2]];\n  }\n  const outOfBoundsCondition = getOutOfBoundsCondition(outputRank, reversedInputWH, channels);\n  const output = getOutput(inputShape, channels);\n\n  const shaderSource = `\n        void main() {\n          ${coordsDataType} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            ${glsl.output} = vec4(0);\n          } else {\n            ${setup}\n\n            ${glsl.output} = vec4(${output});\n          }\n        }\n      `;\n  return {\n    ...packProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.packed},\n    shaderSource\n  };\n};\n\nexport const createPackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...packProgramMetadata, get: () => createPackProgramInfo(handler, input)});\n\n/**\n * check output coordinate location and return false if it is outside input's width/height boundary\n */\nfunction getOutOfBoundsCondition(rank: number, shape: readonly number[], dims: string[]): string {\n  if (rank === 0) {\n    return 'false';\n  }\n  if (rank === 1) {\n    return `rc > ${shape[0]}`;\n  }\n\n  let cond = '';\n  for (let i = rank - 2; i < rank; i++) {\n    cond += `${dims[i]} >= ${shape[i - rank + 2]}`;\n    if (i < rank - 1) {\n      cond += '||';\n    }\n  }\n\n  return cond;\n}\n\n/**\n * code snippet to sample input texture with output coordiantes\n */\nfunction getOutput(shape: readonly number[], dims: string[]): string {\n  const rank = shape.length;\n\n  if (rank === 0) {\n    return 'getA(), 0, 0, 0';\n  }\n\n  if (rank === 1) {\n    return `getA(rc),\n            rc + 1 >= ${shape[0]} ? 0. : getA(rc + 1),\n            0, 0`;\n  }\n\n  const coord00 = 'r, c';\n  const coord01 = 'r, cp1';\n  const coord10 = 'rp1, c';\n  const coord11 = 'rp1, cp1';\n  let D = '';\n  if (rank > 2) {\n    for (let i = 0; i < rank - 2; ++i) {\n      D = D + `${dims[i]},`;\n    }\n  }\n  return `getA(${D}${coord00}),\n          rEdge ? 0. : getA(${D}${coord10}),\n          cEdge ? 0. : getA(${D}${coord01}),\n          rEdge || cEdge ? 0. : getA(${D}${coord11})`;\n}\n\n/**\n * code snippet to setup 4 coordinates and edge conditions\n */\nfunction getSetup(rank: number, dims: string[], rows: number, cols: number): string {\n  if (rank === 0 || rank === 1) {\n    return '';\n  }\n  // rank >= 2 for width+height pack.\n  else {\n    const setup = `\n    int r = ${dims[rank - 2]};\n    int c = ${dims[rank - 1]};\n    int rp1 = ${dims[rank - 2]} + 1;\n    int cp1 = ${dims[rank - 1]} + 1;\n    bool rEdge = rp1 >= ${cols};\n    bool cEdge = cp1 >= ${rows};\n    `;\n    return setup;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlChannels} from '../utils';\n\nexport function getVecChannels(name: string, rank: number): string[] {\n  return getGlChannels(rank).map(d => `${name}.${d}`);\n}\n\nexport function getChannels(name: string, rank: number): string[] {\n  if (rank === 1) {\n    return [name];\n  }\n  return getVecChannels(name, rank);\n}\n\nexport function unpackFromChannel(): string {\n  return `\n    float getChannel(vec4 frag, int dim) {\n      int modCoord = imod(dim, 2);\n      return modCoord == 0 ? frag.r : frag.g;\n    }\n\n    float getChannel(vec4 frag, vec2 innerDims) {\n      vec2 modCoord = mod(innerDims, 2.);\n      return modCoord.x == 0. ?\n        (modCoord.y == 0. ? frag.r : frag.g) :\n        (modCoord.y == 0. ? frag.b : frag.a);\n    }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl, Glsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface PadAttributes extends AttributeWithCacheKey {\n  readonly mode: string;\n  readonly pads: number[];\n  readonly value: number;\n}\n\nconst padProgramMetadata = {\n  name: 'Pad',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const padV2: OperatorImplementation<PadAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): Tensor[] => {\n      validateInputsV2(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...padProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPadProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parsePadAttributesV2: OperatorInitialization<PadAttributes> = (node: Graph.Node): PadAttributes => {\n  const mode = node.attributes.getString('mode', 'constant');\n  const value = node.attributes.getFloat('value', 0.0);\n  const pads = node.attributes.getInts('pads');\n  return createAttributeWithCacheKey({mode, value, pads});\n};\n\nexport const padV11: OperatorImplementation<string> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], mode: string): Tensor[] => {\n      validateInputsV11(inputs);\n      const attrubutes = generatePadAttributesFromInputs(inferenceHandler, inputs, mode);\n      return padV2(inferenceHandler, [inputs[0]], attrubutes);\n    };\n\nexport const parsePadAttributesV11: OperatorInitialization<string> = (node: Graph.Node): string =>\n    node.attributes.getString('mode', 'constant');\n\nconst generatePadAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], mode: string): PadAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          (inputs.length >= 3 && !inferenceHandler.session.isInitializer(inputs[2].dataId))) {\n        throw new Error('dynamic pad attributes are not allowed');\n      }\n\n      const pads = Array.from(inputs[1].integerData);\n      const value = (inputs.length >= 3) ? inputs[2].floatData[0] : 0.0;\n\n      return createAttributeWithCacheKey({mode, pads, value});\n    };\n\nconst createPadProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): ProgramInfo => {\n      const outputShape = ShapeUtil.padShape(input.dims.slice(), attributes.pads);\n      const rank = outputShape.length;\n      const padFunction = getPadFunction(inferenceHandler, input, attributes);\n      const shaderSource = `\n      ${padFunction}\n      float process(int[${rank}] indices) {\n          return padA(indices);\n      }`;\n      return {\n        name: 'Pad',\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputsV2 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pad requires 1 input');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst validateInputsV11 = (inputs: Tensor[]): void => {\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Pad requires 2 or 3 inputs');\n  }\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 3 && inputs[2].type === 'string') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst getPadFunction = (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): string => {\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  const [width, height] = inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n  const strides = ShapeUtil.computeStrides(input.dims);\n\n  switch (attributes.mode) {\n    case 'constant':\n      return getPadConstant(glsl, input.dims, strides, width, height, attributes.pads, attributes.value);\n    case 'reflect':\n      return getPadReflect(glsl, input.dims, strides, width, height, attributes.pads);\n    case 'edge':\n      return getPadEdge(glsl, input.dims, strides, width, height, attributes.pads);\n    default:\n      throw new Error('Invalid mode');\n  }\n};\n\nconst getPadConstant =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[],\n     value: number): string => {\n      const rank = shape.length;\n      let block = '';\n      for (let i = rank - 1; i >= 0; --i) {\n        block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  return constant;\n        if (k >= ${shape[i]}) return constant;\n        offset += k * ${strides[i]};\n        `;\n      }\n      return `\n      float padA(int m[${rank}]) {\n        const float constant = float(${value});\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n    };\n\nconst getPadReflect =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0) { k = -k; }\n        {\n          const int _2n_1 = ${2 * (shape[i] - 1)};\n          k = int( mod( float(k), float(_2n_1) ) ) ;\n          if(k >= ${shape[i]}) { k = _2n_1 - k; }\n        }\n        offset += k * ${strides[i]};\n        `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n\nconst getPadEdge =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  k = 0;\n        if (k >= ${shape[i]}) k = ${shape[i] - 1};\n        offset += k * ${strides[i]};\n      `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface AveragePoolAttributes extends AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly countIncludePad: boolean;\n  readonly kernelShape: readonly number[];\n  readonly strides: readonly number[];\n  readonly pads: readonly number[];\n}\n\nexport const averagePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'AveragePool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n\n      // TODO: support attribute 'ceil_mode'\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n      }\n\n      return createAttributeWithCacheKey({autoPad, ceilMode, countIncludePad, kernelShape, strides, pads});\n    };\n\nconst createAveragePoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: AveragePoolAttributes):\n        ProgramInfo => {\n          const [adjustedAttributes, outputShape] =\n              getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n          const kernelSize = ShapeUtil.size(adjustedAttributes.kernelShape);\n          const op1 = 'value += _X(x);';\n          let op2 = '';\n          if (adjustedAttributes.countIncludePad) {\n            op2 += `value /= float(${kernelSize});`;\n          } else {\n            op2 += `value /= float(${kernelSize} - pad);`;\n          }\n          const poolingCode = generatePoolingCode(inputs[0].dims, adjustedAttributes, op1, op2, '0.0');\n          const shaderSource = `\n        ${poolingCode}\n      `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nexport const globalAveragePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata = {\n        name: 'GlobalAveragePool',\n        inputNames: ['X'],\n        inputTypes: [TextureType.unpacked],\n        cacheHint: `${attributes.countIncludePad}`\n      };\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, true, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseGlobalAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      return createAttributeWithCacheKey(\n          {autoPad: '', ceilMode: 0, countIncludePad, kernelShape: [], strides: [], pads: []});\n    };\n\nexport interface MaxPoolAttributes extends AveragePoolAttributes {\n  readonly storageOrder: number;\n  readonly dilations: number[];\n}\n\nexport const maxPool: OperatorImplementation<MaxPoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: MaxPoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'MaxPool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createMaxPoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseMaxPoolAttributes: OperatorInitialization<MaxPoolAttributes> =\n    (node: Graph.Node): MaxPoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n      const storageOrder = node.attributes.getInt('storage_order', 0);\n      const dilations = node.attributes.getInts('dilations', []);\n\n      // TODO: support attribute 'ceil_mode' and 'storage_order'\n      if (storageOrder !== 0) {\n        throw new Error('column major storage order is not yet supported for MaxPool');\n      }\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n      }\n\n      return createAttributeWithCacheKey(\n          {autoPad, ceilMode, countIncludePad: false, kernelShape, strides, pads, storageOrder, dilations});\n    };\n\nconst createMaxPoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: MaxPoolAttributes):\n        ProgramInfo => {\n          const [adjustedAttributes, outputShape] =\n              getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n          const op1 = `\n      value = max(_X(x), value);\n    `;\n          const op2 = '';\n          const poolingCode = generatePoolingCode(inputs[0].dims, adjustedAttributes, op1, op2, '-1e5');\n          const shaderSource = `\n      ${poolingCode}\n    `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst getAdjustedPoolAttributesAndOutputShape =\n    (inputs: Tensor[], attributes: AveragePoolAttributes|MaxPoolAttributes, isGlobalOperator: boolean):\n        [AveragePoolAttributes|MaxPoolAttributes, number[]] => {\n          const inputShape = inputs[0].dims.slice();\n          const hasDilations = Object.hasOwnProperty.call(attributes, 'dilations');\n          const kernelShape = attributes.kernelShape.slice();\n          const strides = attributes.strides.slice();\n          const dilations: number[] = hasDilations ? (attributes as MaxPoolAttributes).dilations.slice() : [];\n          const pads = attributes.pads.slice();\n          PoolConvUtil.adjustPoolAttributes(isGlobalOperator, inputShape, kernelShape, strides, dilations, pads);\n\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, strides, dilations, kernelShape, pads, attributes.autoPad);\n\n          const newAttributes = Object.assign({}, attributes);\n          if (hasDilations) {\n            Object.assign(newAttributes, {kernelShape, strides, pads, dilations, cacheKey: attributes.cacheKey});\n          } else {\n            Object.assign(newAttributes, {kernelShape, strides, pads, cacheKey: attributes.cacheKey});\n          }\n          return [newAttributes, outputShape];\n        };\n\nconst globalMaxPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  dilations: [],\n  cacheKey: ''\n};\n\nconst globalMaxPoolMetadata = {\n  name: 'GlobalMaxPool',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const globalMaxPool = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  const output = inferenceHandler.run(\n      {\n        ...globalMaxPoolMetadata,\n        get: () => createMaxPoolProgramInfo(inputs, globalMaxPoolMetadata, true, globalMaxPoolAttributes)\n      },\n      inputs);\n  return [output];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst generatePoolingCode =\n    (inputDims: readonly number[], attributes: AveragePoolAttributes, op1: string, op2: string, start: string):\n        string => {\n          const rank = inputDims.length;\n          if (attributes.kernelShape.length <= 2) {\n            const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n            const sw = attributes.strides[attributes.strides.length - 1];\n            const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n            const pwEnd = attributes.pads[attributes.pads.length - 1];\n            const dimW = inputDims[rank - 1];\n            let codeW = '';\n            let codeH = '';\n            let codeHEnd = '';\n            if (pwStart + pwEnd !== 0) {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            if (x[${rank} - 1] < 0 || x[${rank} - 1] >= ${dimW}) {\n              pad++;\n              continue;\n            }\n            ${op1}\n          }`;\n            } else {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            ${op1}\n          }`;\n            }\n\n            if (attributes.kernelShape.length === 2) {\n              const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n              const sh = attributes.strides[attributes.strides.length - 2];\n              const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n              const phEnd = attributes.pads[attributes.pads.length - 2];\n              const dimH = inputDims[rank - 2];\n              if (phStart + phEnd !== 0) {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n              if (x[${rank} - 2] < 0 || x[${rank} - 2] >= ${dimH}) {\n                pad+= ${kw};\n                continue;\n              }\n          `;\n              } else {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n            `;\n              }\n              codeHEnd = `\n          }\n        `;\n            }\n\n            const poolingCode = `\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n\n          float value = ${start};\n          int pad = 0;\n          ${codeH}\n          ${codeW}\n          ${codeHEnd}\n          ${op2}\n          return value;\n        }\n      `;\n            return poolingCode;\n          } else {\n            const kernelSize = ShapeUtil.size(attributes.kernelShape);\n            const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n            const stridesRank = kernelStrides.length;\n            const padsRank = attributes.pads.length;\n            const offsetToIndicesFunction = offsetToIndices(stridesRank);\n            const copyInputDims = copyArray(inputDims, 'inputDims');\n            const copyPads = copyArray(attributes.pads, 'pads');\n            const copyKernelStrides = copyArray(kernelStrides, 'kernelStrides');\n            const copyStrides = copyArray(attributes.strides, 'strides');\n            const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n            let padCode = '';\n            if (hasPads) {\n              padCode = `\n            if (x[j] >= inputDims[j] || x[j] < 0) {\n              pad++;\n              isPad = true;\n              break;\n            }\n          }\n          if (!isPad) {\n            ${op1}\n          }`;\n            } else {\n              padCode = `\n          }\n          ${op1}\n        `;\n            }\n            const poolingCode = `\n        ${offsetToIndicesFunction}\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n          int offset[${stridesRank}];\n          int pads[${padsRank}];\n          int inputDims[${rank}];\n          int kernelStrides[${stridesRank}];\n          int strides[${stridesRank}];\n          ${copyPads}\n          ${copyInputDims}\n          ${copyStrides}\n          ${copyKernelStrides}\n\n          float value = ${start};\n          int pad = 0;\n          bool isPad = false;\n          for (int i = 0; i < ${kernelSize}; i++) {\n            offsetToIndices(i, kernelStrides, offset);\n            isPad = false;\n            for (int j = ${rank} - ${stridesRank}; j < ${rank}; j++) {\n              x[j] = indices[j] * strides[j - ${rank} + ${stridesRank}]\n                + offset[j - ${rank} + ${stridesRank}] - pads[j - 2];\n              ${padCode}\n          }\n          ${op2}\n\n          return value;\n        }\n      `;\n            return poolingCode;\n          }\n        };\n\nconst copyArray = (array: readonly number[], arrayName: string): string => {\n  let block = '';\n  for (let i = 0; i < array.length; i++) {\n    block += `\n      ${arrayName}[${i}] = ${array[i]};\n    `;\n  }\n  return block;\n};\n\nconst offsetToIndices = (rank: number): string => `\n  void offsetToIndices(int offset, int[${rank}] strides, out int[${rank}] indices) {\n    if (${rank} == 0) {\n      return;\n    }\n    for (int i = 0; i < ${rank} - 1; ++i) {\n      indices[i] = offset / strides[i];\n      offset -= indices[i] * strides[i];\n    }\n    indices[${rank} - 1] = offset;\n  }`;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface ReduceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly keepDims: boolean;\n}\n\n// return [init ops, reduce ops, final ops]\ntype ReduceOp = (inputs: Tensor[], axes: number[]) => string[];\n\nconst reduce =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string,\n     reduceOp: ReduceOp): Tensor[] => {\n      validateInputs(inputs);\n\n      const reduceProgramMetadata = {\n        name,\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n      };\n\n      const output = inferenceHandler.run(\n          {\n            ...reduceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () =>\n                createReduceProgramInfo(inferenceHandler, inputs, attributes, name, reduceOp, reduceProgramMetadata)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseReduceAttributes: OperatorInitialization<ReduceAttributes> = (node: Graph.Node): ReduceAttributes => {\n  const axes = node.attributes.getInts('axes', []);\n  const keepDims = node.attributes.getInt('keepdims', 1) === 1;\n  return createAttributeWithCacheKey({axes, keepDims});\n};\n\nconst createReduceProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string, reduceOp: ReduceOp,\n     reduceProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const outputShape: number[] = [];\n      const iRank = inputs[0].dims.length || 1;\n\n      const idxCopy = [];  // copy output indexes to input indexes\n\n      const axes = ShapeUtil.normalizeAxes(attributes.axes, inputs[0].dims.length);\n      const ops = reduceOp(inputs, axes);\n      let reduceOps = ops[1];\n\n      for (let k = 0; k < inputs[0].dims.length; k++) {\n        // if this axis is reduced\n        if (axes.indexOf(k) >= 0 || axes.length === 0) {\n          if (attributes.keepDims) {\n            outputShape.push(1);\n          }  // else { remove the axis from outputShape; }\n\n          // loop over the d-th axis\n          reduceOps = `\n          for(int j${k} = 0; j${k} < ${inputs[0].dims[k]}; j${k}++) {\n            inputIdx[${k}] = j${k};\n            ${reduceOps}\n          }`;\n        } else {\n          idxCopy.push(`inputIdx[${k}] = outputIdx[${outputShape.length}];`);\n\n          outputShape.push(inputs[0].dims[k]);\n        }\n      }\n\n      const oRank = outputShape.length || 1;\n\n      const shaderSource = `\n      float process(int outputIdx[${oRank}]) {\n        float value;                 // final result\n        int inputIdx[${iRank}];      // addressing input data\n        ${idxCopy.join('\\n')}\n        ${ops[0]}       // init ops for reduce max/min\n        ${reduceOps}\n        ${ops[2]}       // final computation for reduce mean\n        return value;\n      }`;\n\n      return {\n        ...reduceProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Reduce op requires 1 input.');\n  }\n\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const reduceSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceSum', reduceOp);\n    };\n\nexport const reduceMean: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        let size = 1.0;\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            size *= inputs[0].dims[k];\n          }\n        }\n\n        return ['value = 0.0;', 'value += _A(inputIdx);', `value /= ${size}.;`];  // ensure real number with `.`\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMean', reduceOp);\n    };\n\nexport const reduceMax: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = max(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMax', reduceOp);\n    };\n\nexport const reduceMin: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = min(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMin', reduceOp);\n    };\n\nexport const reduceProd: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 1.0;', 'value *= _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceProd', reduceOp);\n    };\n\nexport const reduceLogSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', 'value = log(value);'];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSum', reduceOp);\n    };\n\nexport const reduceLogSumSquare: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['float t; value = 0.0;', 't = _A(inputIdx); value += t * t;', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSumSquare', reduceOp);\n    };","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedReshape3DProgramMetadata = (outputShape3D: readonly number[]) =>\n    ({name: 'Reshape (packed)', inputTypes: [TextureType.packed], inputNames: ['A'], cacheHint: `${outputShape3D}`});\n\nconst createPackedReshape3DProgramInfo =\n    (handler: WebGLInferenceHandler, input3D: Tensor, metadata: ProgramMetadata, outputShape3D: readonly number[]):\n        ProgramInfo => {\n          const inputShape3D = input3D.dims as [number, number, number];\n          const squeezedOutputShape = outputShape3D as [number, number, number];\n\n          let mainLoop = '';\n          for (let i = 0; i < 4; i++) {\n            let outputCoords = '';\n            switch (i) {\n              case 0:\n                outputCoords = 'outputCoords = rc;';\n                break;\n              case 1:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z);';\n                break;\n              case 2:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y, rc.z+1);';\n                break;\n              case 3:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);';\n                break;\n              default:\n                throw new Error();\n            }\n\n            mainLoop += `\n        ${outputCoords}\n        ${i > 0 ? 'if(outputCoords.y < rows && outputCoords.z < cols){' : ''}\n          int flattenedIndex = getFlattenedIndex(outputCoords);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);\n          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);\n\n        ${i > 0 ? '}' : ''}\n      `;\n          }\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n\n          const shaderSource = `\n      ${getReshapedInputCoords(inputShape3D)}\n      ${getFlattenedIndexFrom3D(squeezedOutputShape)}\n      ${unpackFromChannel()}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.0);\n\n        ivec3 outputCoords;\n        int rows = ${squeezedOutputShape[2]};\n        int cols = ${squeezedOutputShape[1]};\n\n        ${mainLoop}\n        ${glsl.output} = result;\n      }\n    `;\n\n          return {\n            ...metadata,\n            output: {dims: squeezedOutputShape, type: input3D.type, textureType: TextureType.packed},\n            shaderSource,\n            hasMain: true\n          };\n        };\n\nexport const createPackedReshape3DProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input3D: Tensor, outputShape3D: readonly number[]): ProgramInfoLoader => {\n      const metadata = createPackedReshape3DProgramMetadata(outputShape3D);\n      return {...metadata, get: () => createPackedReshape3DProgramInfo(handler, input3D, metadata, outputShape3D)};\n    };\n\nexport function processDims3D(shape: ArrayLike<number>): [number, number, number] {\n  if (shape.length === 0) {\n    return [1, 1, 1];\n  }\n  // TODO: squeeze other shapes to 2D case\n  let batch = 1;\n  for (let i = 0; i < shape.length - 2; ++i) {\n    batch *= shape[i];\n  }\n  return [batch, shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\n\n// For packed reshape, we need to re-arrange texel data for output shape.\n// Our pack is designed to pack a 2x2 tile in last h and w dimension, so\n// for the reshaped new tensor, we just need to re-arrange the last h and\n// w dimension. For any shape that is not in 3D, i.e. [batch, W, H], we\n// first convert it to 3D by collapsing other dimension to batch dim, then\n// process with the last two dimensions.\n// Note: we only need the shape tensor to calculate output shape, so the\n// content in shape tensor is never uploaded to GPU. It is always kept in CPU.\n// TODO: optimize the algorithm -- in some cases, if the last two dims are\n// the same between input shape and output shape, the packed reshape can be\n// treated as no-op.\nexport function isReshapeCheap(dims: readonly number[], reshapedDims: readonly number[]) {\n  let isCheapReshape = false;\n  if (dims.length === 0 || reshapedDims.length === 0) {  // scalar\n    isCheapReshape = true;\n  } else if (dims.length < 2 || reshapedDims.length < 2) {  // 1D\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1];\n  } else {  // 2D +\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1] &&\n        dims[dims.length - 2] === reshapedDims[reshapedDims.length - 2];\n  }\n\n  return isCheapReshape;\n}\n\nfunction getReshapedInputCoords(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n  const coords = ['b', 'r', 'c'];\n  const index = 'index';\n  const coordsFromIndexSnippet = strides\n                                     .map((stride, i) => {\n                                       const line1 = `int ${coords[i]} = ${index} / ${stride}`;\n                                       const line2 = i === strides.length - 1 ?\n                                           `int ${coords[i + 1]} = ${index} - ${coords[i]} * ${stride}` :\n                                           `index -= ${coords[i]} * ${stride}`;\n                                       return `${line1}; ${line2};`;\n                                     })\n                                     .join('');\n\n  return `\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${coordsFromIndexSnippet}\n      return ivec3(b, r, c);\n    }\n  `;\n}\n\nfunction getFlattenedIndexFrom3D(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n\n  return `\n  int getFlattenedIndex(ivec3 coords) {\n    // reverse y, z order\n    return coords.x * ${strides[0]} + coords.z * ${strides[1]} + coords.y;\n  }\n`;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const reshape = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const reshapedDims = ShapeUtil.calculateReshapedDims(inputs[0].dims, inputs[1].integerData);\n  if (handler.session.pack) {\n    return [handler.reshapePacked(inputs[0], reshapedDims)];\n  } else {\n    return [handler.reshapeUnpacked(inputs[0], reshapedDims)];\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {unpackFromChannel} from './packing-utils';\nimport {parseUpsampleAttributes, scalesValidation, UpsampleAttributes, validateInputs} from './upsample';\n\nconst resizeProgramMetadata = {\n  name: 'Resize',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const resize: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...resizeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPackedResizeProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseResizeAttributesV10: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 10);\n\nexport const parseResizeAttributesV11: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 11);\n\nconst createPackedResizeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [scales, outputShape] = prepareInputs(inputs, attributes);\n\n      const isSame =\n          scales.every((s: number) => s === 1) && attributes.coordinateTransformMode !== 'tf_crop_and_resize';\n      if (isSame) {\n        return {\n          ...resizeProgramMetadata,\n          output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n          hasMain: true,\n          shaderSource: `void main() {\n                    vec4 v = ${glsl.texture2D}(X, TexCoords);\n                    ${glsl.output} = v;\n                }`\n        };\n      }\n\n      const dim = outputShape.length;\n      if (dim < 2) {\n        throw new Error(`output dimension should be at least 2, but got ${dim}`);\n      }\n\n      const outputHeight = outputShape[dim - 2];\n      const outputWidth = outputShape[dim - 1];\n\n      const inputShape = inputs[0].dims;\n      if (dim !== inputShape.length) {\n        throw new Error(`output dimension should match input ${inputShape.length}, but got ${dim}`);\n      }\n      const inputHeight = inputShape[dim - 2];\n      const inputWidth = inputShape[dim - 1];\n\n      const scalesHeight = scales[dim - 2];\n      const scalesWidth = scales[dim - 1];\n\n      let getSourceFracIndex = '';\n\n      if (attributes.mode !== 'linear') {\n        // TODO: support other modes\n        throw new Error(`resize (packed) does not support mode: '${attributes.mode}'`);\n      }\n      switch (attributes.coordinateTransformMode) {\n        case 'asymmetric':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return vec4(coords) / scaleWHWH;\n                    }\n                `;\n          break;\n        case 'half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;\n                    }\n                `;\n          break;\n        case 'pytorch_half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 fcoords = vec4(coords);\n                        return vec4(\n                            ${outputWidth}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,\n                            ${outputHeight}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,\n                            ${outputWidth}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,\n                            ${outputHeight}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0\n                          );\n                    }\n                `;\n          break;\n        case 'align_corners':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 resized = vec4(${outputWidth}.0 - 1.0, ${outputHeight}.0 - 1.0, ${outputWidth}.0 - 1.0,\n                            ${outputHeight}.0 - 1.0);\n                        vec4 original = vec4(${inputWidth}.0 - 1.0, ${inputHeight}.0 - 1.0, ${inputWidth}.0 - 1.0,\n                            ${inputHeight}.0 - 1.0);\n                        vec4 new_scale = original / resized;\n                        return vec4(coords) * new_scale;\n                    }\n                `;\n          break;\n        default:\n          // TODO:supporting other coordinateTransformModes\n          throw new Error(`resize (packed) does not support coordinateTransformMode: \\\n                                '${attributes.coordinateTransformMode}'`);\n      }\n\n      const coordsDataType = getCoordsDataType(dim);\n      const unpackChannel = unpackFromChannel();\n      const shaderSource = `\n            const vec2 inputWH = vec2(${inputHeight}.0, ${inputWidth}.0);\n            const vec4 scaleWHWH = vec4(float(${scalesHeight}), float(${scalesWidth}), float(${scalesHeight}), float(${\n          scalesWidth}));\n            ${unpackChannel}\n            ${getSourceFracIndex}\n            float getAValue(int x10, int r, int c, int d) {\n                return getChannel(getA(x10, r, c, d), vec2(c, d));\n            }\n            void main() {\n                ${coordsDataType} rc = getOutputCoords();\n\n                int batch = rc[0];\n                int depth = rc[1];\n\n                // retrieve the 4 coordinates that is used in the 4 packed output values.\n                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);\n\n                // calculate the source index in fraction\n                vec4 sourceFrac = getSourceFracIndex(coords);\n\n                // get the lower and upper bound of the 4 values that will be packed into one texel.\n                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));\n                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));\n                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));\n                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));\n\n                bool hasNextRow = rc.w < ${outputHeight - 1};\n                bool hasNextCol = rc.z < ${outputWidth - 1};\n\n                // pack x00, x01, x10, x11's top-left corner into one vec4 structure\n                vec4 topLeft = vec4(\n                    getAValue(batch, depth, x00.x, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's top-right corner into one vec4 structure\n                vec4 topRight = vec4(\n                    getAValue(batch, depth, x00.x, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure\n                vec4 bottomLeft = vec4(\n                    getAValue(batch, depth, x00.z, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure\n                vec4 bottomRight = vec4(\n                    getAValue(batch, depth, x00.z, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);\n\n                // calculate the interpolation fraction on u and v direction\n                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);\n                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));\n\n                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);\n                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);\n                vec4 newValue = mix(top, bottom, clampFrac.xxzz);\n\n                ${glsl.output} = vec4(newValue);\n            }\n        `;\n      return {\n        ...resizeProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\n\nconst prepareInputs = (inputs: Tensor[], attributes: UpsampleAttributes): [readonly number[], readonly number[]] => {\n  const x = inputs[0];\n  const xDims = x.dims;\n\n  let scales = attributes.scales;\n  let outputSizes: number[]|undefined;\n  if (scales.length === 0) {\n    const scalesTensor = inputs[attributes.scalesInputIdx];\n    if (scalesTensor && scalesTensor.size !== 0) {\n      if (inputs[attributes.sizesInputIdx]) {\n        throw new Error('Only one of scales or sizes must be provided as input.');\n      }\n      scales = parseScalesData(scalesTensor, attributes.mode, attributes.isResize);\n    } else {\n      const sizesTensor = inputs[attributes.sizesInputIdx];\n      if (!sizesTensor || sizesTensor.size === 0) {\n        throw new Error('Either scales or sizes MUST be provided as input.');\n      }\n\n      outputSizes = Array.from(sizesTensor.integerData);\n      scales = parseScalesDataFromOutputSize(outputSizes, xDims, attributes.mode, attributes.isResize);\n    }\n  } else {\n    if (inputs[attributes.sizesInputIdx]) {\n      throw new Error('Only one of scales or sizes must be provided as input.');\n    }\n  }\n\n  const yDims = outputSizes || (xDims.map((dim, i) => Math.floor(dim * scales[i])));\n\n  return [scales, yDims];\n};\n\nconst parseScalesData = (scale: Tensor, mode: string, isResize: boolean): number[] => {\n  const scales = Array.from(scale.floatData);\n  scalesValidation(scales, mode, isResize);\n  return scales;\n};\n\nconst parseScalesDataFromOutputSize =\n    (yDims: readonly number[], xDims: readonly number[], mode: string, isResize: boolean): number[] => {\n      const length = xDims.length;\n      const scales = new Array<number>(length);\n\n      for (let i = 0, end = length; i < end; i++) {\n        if (xDims[i] === 0) {\n          if (yDims[i] !== 0) {\n            throw new Error('Input dim is zero but required output dim is non-zero.');\n          }\n          scales[i] = 1;\n        } else {\n          scales[i] = yDims[i] / xDims[i];\n        }\n      }\n      scalesValidation(scales, mode, isResize);\n      return scales;\n    };\n\n// roi data is not used yet. but leave here for future usage.\n// const getRoi = (inputs: Tensor[], attributes: UpsampleAttributes) : number[] => {\n//     let roi: number[] = [];\n//     if (attributes.needRoiInput) {\n//         if (attributes.roiInputIdx <= 0) {\n//             throw new Error('Invalid roi input index.');\n//         }\n//         const roiTensor = inputs[attributes.roiInputIdx];\n//         roi = roiTensor.size > 0 ? Array.from(roiTensor.floatData) : [];\n//     } else {\n//         roi = new Array(inputs[0].dims.length * 2).fill(0);\n//     }\n//     return roi;\n// };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const shape = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  return [new Tensor([inputs[0].dims.length], 'int32', undefined, undefined, new Int32Array(inputs[0].dims))];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Shape requires 1 input.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SliceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly ends: number[];\n  readonly starts: number[];\n}\n\nconst sliceProgramMetadata = {\n  name: 'Slice',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const slice: OperatorImplementation<SliceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SliceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...sliceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseSliceAttributes: OperatorInitialization<SliceAttributes> = (node: Graph.Node): SliceAttributes => {\n  const starts = node.attributes.getInts('starts');\n  const ends = node.attributes.getInts('ends');\n  const axes = node.attributes.getInts('axes', []);\n  return createAttributeWithCacheKey({starts, ends, axes});\n};\n\nconst createSliceProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SliceAttributes): ProgramInfo => {\n      const axes = (attributes.axes.length === 0) ? input.dims.slice(0).map((val, i) => i) : attributes.axes;\n      const normalizedAxes = ShapeUtil.normalizeAxes(axes, input.dims.length);\n      const starts = attributes.starts.map((start, i) => {\n        if (start > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(start, input.dims[normalizedAxes[i]]);\n      });\n      const ends = attributes.ends.map((end, i) => {\n        if (end > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(end, input.dims[normalizedAxes[i]]);\n      });\n\n      const outputShape = input.dims.slice();\n\n      const sliceOps: string[] = [];\n      for (let i = 0; i < normalizedAxes.length; i++) {\n        outputShape[normalizedAxes[i]] = ends[i] - starts[i];\n        if (starts[i] > 0) {\n          sliceOps.push(`outputIdx[${normalizedAxes[i]}] += ${starts[i]};`);\n        }  // else { sliceOps.push(`outputIdx[${normalizedAxes[i]}] += 0;`); }\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        ${sliceOps.join('\\n      ')}\n        return _A(outputIdx);\n      }`;\n      return {\n        ...sliceProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Slice requires 1 input.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const sliceV10 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV10(inputs);\n  const attributes = generateSliceAttributesFromInputs(inferenceHandler, inputs);\n  const output = inferenceHandler.run(\n      {\n        ...sliceProgramMetadata,\n        cacheHint: attributes.cacheKey,\n        get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n      },\n      [inputs[0]]);\n  return [output];\n};\n\nconst generateSliceAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): SliceAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          !inferenceHandler.session.isInitializer(inputs[2].dataId) ||\n          (inputs.length >= 4 && !inferenceHandler.session.isInitializer(inputs[3].dataId)) ||\n          (inputs.length >= 5 && !inferenceHandler.session.isInitializer(inputs[4].dataId))) {\n        throw new Error('dynamic slice attributes are not allowed');\n      }\n\n      if (inputs.length >= 5 && inputs[4].integerData.some((i: number) => i !== 1)) {\n        throw new Error('currently non-1 steps is not supported for Slice');\n      }\n\n      const starts = Array.from(inputs[1].integerData);\n      const ends = Array.from(inputs[2].integerData);\n      const axes = inputs.length >= 4 ? Array.from(inputs[3].integerData) : [];\n      const cacheKey = `${axes};${starts};${ends}`;\n      return {starts, ends, axes, cacheKey};\n    };\n\nconst validateInputsV10 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 3 || inputs.length > 5) {\n    throw new Error('Invalid input number.');\n  }\n  if (inputs[1].type !== 'int32' || inputs[1].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[2].type !== 'int32' || inputs[2].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 4 && (inputs[3].type !== 'int32' || inputs[3].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 5 && (inputs[4].type !== 'int32' || inputs[4].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface SoftmaxAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nconst softmaxComputeMaxProgramMetadata = {\n  name: 'SoftmaxComputeMax',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst softmaxComputeScaleProgramMetadata = {\n  name: 'SoftmaxComputeScale',\n  inputNames: ['A', 'Max'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst softmaxProgramMetadata = {\n  name: 'SoftMax',\n  inputNames: ['A', 'Max', 'Norm'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked],\n};\n\nexport const softmax: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const logicalRowCount = ShapeUtil.sizeToDimension(inputShape, axis);\n      const featureCount = ShapeUtil.sizeFromDimension(inputShape, axis);\n\n      const output = computeSoftmax(inferenceHandler, inputs, attributes, logicalRowCount, featureCount);\n      return output;\n    };\n\nexport const parseSoftmaxAttributes: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 1)});\n\nexport const parseSoftmaxAttributesV13: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', -1)});\n\n// The \"semantic\" meaning of axis has changed in opset-13.\n// Please compare: https://github.com/onnx/onnx/blob/main/docs/Operators.md#Softmax\n// with https://github.com/onnx/onnx/blob/main/docs/Changelog.md#Softmax-11 for detailed explanations\n// To account for the opset-13 behavior, our plan will be to transpose the \"axis\" dim to the innermost dim\n// and perform softmax and then reverse the transpose. We can skip the transposing aspect if the axis is already\n// the innermost dim\nexport const softmaxV13: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const rank = inputShape.length;\n\n      const isTransposeRequired = (axis !== rank - 1) ? true : false;\n      const transposedInputShape: number[] = [];\n      let perm: number[] = [];\n      let transposedInputs: Tensor[] = [];\n      let transposeAttribute: TransposeAttributes;\n\n      if (isTransposeRequired) {\n        perm = Array.from({length: rank}).map((_, i) => i);\n\n        // swap the innermost dim with the dim corresponding to axis\n        perm[axis] = rank - 1;\n        perm[rank - 1] = axis;\n\n        perm.map(p => transposedInputShape.push(inputShape[p]));\n\n        transposeAttribute = createAttributeWithCacheKey({perm});\n        transposedInputs = transpose(inferenceHandler, inputs, transposeAttribute);\n      }\n\n      const logicalRowCount = isTransposeRequired ? ShapeUtil.sizeToDimension(transposedInputShape, rank - 1) :\n                                                    ShapeUtil.sizeToDimension(inputShape, rank - 1);\n      const featureCount = isTransposeRequired ? ShapeUtil.sizeFromDimension(transposedInputShape, rank - 1) :\n                                                 ShapeUtil.sizeFromDimension(inputShape, rank - 1);\n\n      const output = computeSoftmax(\n          inferenceHandler, isTransposeRequired ? transposedInputs : inputs, attributes, logicalRowCount, featureCount);\n\n      if (isTransposeRequired) {\n        const reversedOutput = transpose(inferenceHandler, output, transposeAttribute!);\n        return reversedOutput;\n      } else {\n        return output;\n      }\n    };\n\nconst computeSoftmax =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes, logicalRowCount: number,\n     featureCount: number): Tensor[] => {\n      const computeMaxProgramInfo =\n          createComputeMaxProgramInfo(inferenceHandler, inputs[0], logicalRowCount, featureCount, [logicalRowCount]);\n      const max = inferenceHandler.run(\n          {...softmaxComputeMaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeMaxProgramInfo},\n          inputs);\n\n      const computeScaleProgramInfo = createComputScaleProgramInfo(\n          inferenceHandler, inputs[0], logicalRowCount, featureCount, computeMaxProgramInfo.output.dims,\n          [logicalRowCount]);\n      const scale = inferenceHandler.run(\n          {...softmaxComputeScaleProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeScaleProgramInfo},\n          [inputs[0], max]);\n\n      const softMaxProgramInfo = createSoftMaxProgramInfo(\n          inferenceHandler, inputs[0], logicalRowCount, featureCount, computeMaxProgramInfo.output.dims,\n          computeScaleProgramInfo.output.dims);\n      const output = inferenceHandler.run(\n          {...softmaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => softMaxProgramInfo},\n          [inputs[0], max, scale]);\n      return [output];\n    };\n\n/**\n * Create a texture that contains the maximum value of each of the 'N' rows\n */\nconst createComputeMaxProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== logicalRowCount) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${featureCount};\n\n        float max = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset, ${textureWidth},\n        ${textureHeight} )));\n        for(int i=1; i<${featureCount}; ++i)\n        {\n          float current = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight})));\n          if(current > max)\n          max = current;\n        }\n\n        return max;\n      }`;\n      return {\n        ...softmaxComputeMaxProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\n/**\n * Create a texture that contains the normalization factor for each of the 'N' rows\n */\nconst createComputScaleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     maxElementPerLogicalRow: readonly number[], outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== logicalRowCount) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== logicalRowCount) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${featureCount};\n\n        float norm_factor = 0.0;\n        float max = _Max(indices);\n        for(int i=0; i<${featureCount}; ++i)\n        {\n          norm_factor += exp(getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight}))) - max);\n        }\n\n        return norm_factor;\n      }`;\n      return {\n        ...softmaxComputeScaleProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createSoftMaxProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, logicalRowCount: number, featureCount: number,\n     maxElementPerLogicalRow: readonly number[], normalizationPerLogicalRow: readonly number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = input.dims.length;\n\n      if (logicalRowCount < 1 || featureCount < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1 || normalizationPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== logicalRowCount || normalizationPerLogicalRow[0] !== logicalRowCount) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n\n      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)\n      int offset = coordsToOffset(TexCoords, ${textureWidth}, ${textureHeight});\n\n      //determine the logical row for this index\n      int logical_row_index[1];\n      logical_row_index[0] = offset / ${featureCount};\n\n      float norm_factor = _Norm(logical_row_index);\n\n      // avoid possible division by 0\n      // if norm_facor is 0, all elements are zero\n      // if so, return 0\n      if(norm_factor == 0.0)\n        return 0.0;\n\n      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;\n    }`;\n      return {\n        ...softmaxProgramMetadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Softmax requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil, SplitUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SplitAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n  readonly split: number[];\n  readonly numOutputs: number;\n}\n\nconst splitProgramMetadata = {\n  name: 'Split',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const split: OperatorImplementation<SplitAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SplitAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputs[0].dims.length);\n      const count = getProgramCount(inferenceHandler, inputs, axis, attributes);\n      const output: Tensor[] = [];\n      for (let i = 0; i < count; ++i) {\n        output.push(inferenceHandler.run(\n            {\n              ...splitProgramMetadata,\n              cacheHint: `${attributes.cacheKey};${i}`,\n              get: () => createSplitProgramInfo(inferenceHandler, inputs[0], attributes, axis, i)\n            },\n            inputs));\n      }\n\n      return output;\n    };\n\nexport const parseSplitAttributes: OperatorInitialization<SplitAttributes> = (node: Graph.Node): SplitAttributes => {\n  const axis = node.attributes.getInt('axis', 0);\n  const split = node.attributes.getInts('split', []);\n  const numOutputs = node.outputs.length;\n  return createAttributeWithCacheKey({axis, split, numOutputs});\n};\n\nconst getProgramCount =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number, attributes: SplitAttributes): number => {\n      const [, offsets] = SplitUtil.splitShape(inputs[0].dims, axis, attributes.split, attributes.numOutputs);\n      return offsets.length;\n    };\n\nconst createSplitProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SplitAttributes, axis: number, index: number):\n        ProgramInfo => {\n          const [shapes, offsets] = SplitUtil.splitShape(input.dims, axis, attributes.split, attributes.numOutputs);\n          const offset = offsets[index];\n          const outputShape = shapes[index];\n          const rank = outputShape.length;\n          const shaderSource = `\n      float process(int indices[${rank}]) {\n        indices[${axis}] += ${offset};\n        return _A(indices);\n      }\n    `;\n          return {\n            ...splitProgramMetadata,\n            cacheHint: `${attributes.cacheKey}:${index}`,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Split requires one input.');\n  }\n\n  if (inputs[0].type !== 'int8' && inputs[0].type !== 'uint8' && inputs[0].type !== 'int16' &&\n      inputs[0].type !== 'uint16' && inputs[0].type !== 'int32' && inputs[0].type !== 'uint32' &&\n      inputs[0].type !== 'float32' && inputs[0].type !== 'float64' && inputs[0].type !== 'bool') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const squeeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.squeezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const squeezeV13 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV13(inputs);\n  return squeeze(inferenceHandler, [inputs[0]], Array.from(inputs[1].integerData));\n};\n\nexport const parseSqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Squeeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n\nconst validateInputsV13 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Squeeze requires 2 inputs.');\n  }\n\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const sum = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const sumProgramMetadata = {\n    name: 'Sum',\n    inputNames: inputs.map((v, i) => `X${i}`),\n    inputTypes: new Array(inputs.length).fill(TextureType.unpacked)\n  };\n\n  const output = inferenceHandler.run(\n      {...sumProgramMetadata, get: () => createSumProgramInfo(inferenceHandler, inputs, sumProgramMetadata)}, inputs);\n  return [output];\n};\n\nconst createSumProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], sumProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const outputShape = inputs[0].dims.slice();\n      const sumLine = inputs.map((v, i) => `${glsl.texture2D}(X${i},TexCoords)`).join(' + ');\n      const shaderSource = `\n      void main() {\n        vec4 result = ${sumLine};\n        ${glsl.output} = result;\n      }\n    `;\n      return {\n        ...sumProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length === 0) {\n    throw new Error('Sum requires inputs.');\n  }\n\n  const length = inputs[0].dims.length;\n  for (let i = 1; i < inputs.length; i++) {\n    if (length !== inputs[i].dims.length) {\n      throw new Error('Input shapes are mismatched.');\n    }\n\n    for (let j = 0; j < length; j++) {\n      if (inputs[0].dims[j] !== inputs[i].dims[j]) {\n        throw new Error('Input shapes are not matched.');\n      }\n    }\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n  for (let i = 1; i < inputs.length; i++) {\n    if (inputs[0].type !== inputs[i].type) {\n      throw new Error('Input types are not matched.');\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {NUMBER_TYPES} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const tile = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const tileProgramMetadata = {\n    name: 'Tile',\n    inputNames: ['A'],\n    inputTypes: [TextureType.unpacked],\n  };\n\n  const output = inferenceHandler.run(\n      {...tileProgramMetadata, get: () => createTileProgramInfo(inferenceHandler, inputs, tileProgramMetadata)},\n      inputs);\n  return [output];\n};\n\nconst createTileProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], tileProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const outputShape = new Array(inputShape.length);\n\n      const tileOps: string[] = [];\n      for (let i = 0; i < inputShape.length; i++) {\n        outputShape[i] = inputShape[i] * inputs[1].numberData[i];\n        tileOps.push(`inputIdx[${i}] = int(mod(float(outputIdx[${i}]), ${inputShape[i]}.));`);\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        int inputIdx[${rank}];\n        ${tileOps.join('\\n')}\n        return _A(inputIdx);\n      }\n    `;\n      return {\n        ...tileProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Tile requires 2 input.');\n  }\n  if (inputs[1].dims.length !== 1) {\n    throw new Error('The second input shape must 1 dimension.');\n  }\n  if (inputs[1].dims[0] !== inputs[0].dims.length) {\n    throw new Error('Invalid input shape.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invalid repeat type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nconst transposeProgramMetadata = {\n  name: 'Transpose',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const transpose: OperatorImplementation<TransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: TransposeAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...transposeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createTransposeProgramInfo(inferenceHandler, inputs[0], attributes.perm)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseTransposeAttributes: OperatorInitialization<TransposeAttributes> =\n    (node: Graph.Node): TransposeAttributes => createAttributeWithCacheKey({perm: node.attributes.getInts('perm', [])});\n\nconst createTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, perm: number[]): ProgramInfo => {\n      const inputShape = input.dims;\n      perm = getAdjustedPerm(inputShape, perm);\n      const unpackedOutputShape = getOutputShape(inputShape, perm);\n      const rank = inputShape.length;\n      // A dims=[${inputs[0].dims.toString()}]\n      // out Dims=[${unpackedOutputShape.toString()}]\n      // based on perm=[${perm.toString()}]\n      const shaderSource = `\n      ${getPermFunctionBody('perm', perm, rank)}\n      float process(int indices[${rank}]) {\n        int a[${rank}];\n        perm(a, indices);\n        return _A(a);\n      }`;\n      return {\n        ...transposeProgramMetadata,\n        output: {dims: unpackedOutputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] => {\n  if (perm && perm.length !== inputShape.length) {\n    perm = [...(inputShape.keys())].reverse();\n  }\n  return perm;\n};\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] => {\n  perm = getAdjustedPerm(inputShape, perm);\n  return ShapeUtil.sortBasedOnPerm(inputShape, perm);\n};\n\nconst getPermFunctionBody = (name: string, perm: number[], rank: number): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`void ${name}(out int a[${rank}], int src[${rank}]) {`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(`\\ta[${perm[i]}]=src[${i}];`);\n  }\n  reverseFunc.push('\\t}');\n  return reverseFunc.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('input should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {TextureData, TextureType} from '../types';\n\nexport const encodeAsUint8 = (inferenceHandler: WebGLInferenceHandler, input: TextureData): TextureData => {\n  const outputShape = input.shape;\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  /**\n   * https://github.com/tensorflow/tfjs-core/blob/master/src/kernels/webgl/encode_float_gpu.ts\n   */\n  const shaderSource = `\n    const float FLOAT_MAX = 1.70141184e38;\n    const float FLOAT_MIN = 1.17549435e-38;\n\n    bool isNaN(float val) {\n      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\n    }\n\n    highp vec4 encodeAsUint8(highp float v) {\n      if (isNaN(v)) {\n        return vec4(255, 255, 255, 255);\n      }\n\n      highp float av = abs(v);\n\n      if(av < FLOAT_MIN) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n      } else if(v > FLOAT_MAX) {\n        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n      } else if(v < -FLOAT_MAX) {\n        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n      }\n\n      highp vec4 c = vec4(0,0,0,0);\n\n      highp float e = floor(log2(av));\n      highp float m = exp2(fract(log2(av))) - 1.0;\n\n      c[2] = floor(128.0 * m);\n      m -= c[2] / 128.0;\n      c[1] = floor(32768.0 * m);\n      m -= c[1] / 32768.0;\n      c[0] = floor(8388608.0 * m);\n\n      highp float ebias = e + 127.0;\n      c[3] = floor(ebias / 2.0);\n      ebias -= c[3] * 2.0;\n      c[2] += floor(ebias) * 128.0;\n\n      c[3] += 128.0 * step(0.0, -v);\n\n      return c / 255.0;\n    }\n\n    void main() {\n      float value = ${glsl.texture2D}(X,TexCoords).r;\n      ${glsl.output} = encodeAsUint8(value);\n    }`;\n  const programInfo = {\n    name: 'Uint8Encode',\n    inputTypes: [TextureType.unpacked],\n    inputNames: ['X'],\n    output: {dims: outputShape, type: input.tensor.type, textureType: TextureType.downloadUint8AsFloat},\n    shaderSource,\n    hasMain: true\n  };\n  return inferenceHandler.executeProgram(programInfo, [input.tensor]);\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {Tensor} from '../../../tensor';\nimport {MAX_CLIP, MIN_CLIP} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport function glslAbs(): GlslValueFunction {\n  return glslBuiltinUnary('abs');\n}\nexport function glslAcos(): GlslValueFunction {\n  return glslBuiltinUnary('acos');\n}\nexport function glslAsin(): GlslValueFunction {\n  return glslBuiltinUnary('asin');\n}\nexport function glslAtan(): GlslValueFunction {\n  return glslBuiltinUnary('atan');\n}\nexport function glslCeil(): GlslValueFunction {\n  return glslBuiltinUnary('ceil');\n}\nexport function glslCos(): GlslValueFunction {\n  return glslBuiltinUnary('cos');\n}\nexport function glslElu(alpha: number): GlslValueFunction {\n  const name = 'elu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslExp(): GlslValueFunction {\n  return glslBuiltinUnary('exp');\n}\nexport function glslFloor(): GlslValueFunction {\n  return glslBuiltinUnary('floor');\n}\nexport function glslClip(min: number, max: number): GlslValueFunction {\n  const name = 'clip';\n  const body = `\n  const float min = float(${min});\n  const float max = float(${max});\n\n  float ${name}_(float a) {\n    return clamp(a, min, max);\n  }\n  vec4 ${name}_(vec4 v) {\n    return clamp(v, min, max);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslIdentity(): GlslValueFunction {\n  const name = 'indentity';\n  const body = `\n  float ${name}_(float a) {\n    return a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLeakyRelu(alpha: number): GlslValueFunction {\n  const name = 'leakyRelu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a < 0.0 ? a * alpha : a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLog(): GlslValueFunction {\n  return glslBuiltinUnary('log');\n}\nexport function glslNeg(): GlslValueFunction {\n  const name = 'neg';\n  const body = `\n  float ${name}_(float a) {\n    return -a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return -v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslNot(): GlslValueFunction {\n  const name = 'not';\n  const body = `\n  float ${name}_(float a) {\n    return float( ! bool(a) );\n  }\n  bool ${name}_(bool a) {\n    return !a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));\n  }\n  bvec4 ${name}_(bvec4 v) {\n    return bvec4(!v.x, !v.y, !v.z, !v.w);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSin(): GlslValueFunction {\n  return glslBuiltinUnary('sin');\n}\nexport function glslRelu(): GlslValueFunction {\n  const name = 'relu';\n  const body = `\n  float ${name}_(float a) {\n    return max( a, 0.0 );\n  }\n  vec4 ${name}_(vec4 v) {\n    return max( v, 0.0 );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSigmoid(): GlslValueFunction {\n  const name = 'sigmoid';\n  const body = `\n  float ${name}_(float a) {\n    return 1.0 / (1.0 + exp(-a));\n  }\n  vec4 ${name}_(vec4 v) {\n    return 1.0 / (1.0 + exp(-v));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSqrt(): GlslValueFunction {\n  return glslBuiltinUnary('sqrt');\n}\nexport function glslTan(): GlslValueFunction {\n  return glslBuiltinUnary('tan');\n}\nexport function glslTanh(): GlslValueFunction {\n  const name = 'tanh';\n  const body = `\n  float ${name}_(float a) {\n    a = clamp(a, -10., 10.);\n    a = exp(2.*a);\n    return (a - 1.) / (a + 1.);\n  }\n  vec4 ${name}_(vec4 v) {\n    v = clamp(v, -10., 10.);\n    v = exp(2.*v);\n    return (v - 1.) / (v + 1.);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nfunction glslBuiltinUnary(name: string): GlslValueFunction {\n  const body = `\n  float ${name}_(float a) {\n    return ${name}(a);\n  }\n  vec4 ${name}_(vec4 v) {\n    return ${name}(v);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\n/////\n/////\n/////\n\nconst createElementwiseProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, glslFunc: GlslValueFunction):\n        ProgramInfo => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n          return {\n            ...metadata,\n            output: {dims: input.dims, type: input.type, textureType},\n            shaderSource: `\n     ${glslFunc.body}\n     void main() {\n       vec4 v = ${glsl.texture2D}(A, TexCoords);\n       v = ${glslFunc.name}_(v);\n       ${glsl.output} = v;\n     }\n     `,\n            hasMain: true\n          };\n        };\n\nconst createElementwiseProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input: Tensor, glslFunc: GlslValueFunction, cacheKey?: string):\n        ProgramInfoLoader => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const metadata = {name: glslFunc.name, inputTypes: [textureType], inputNames: ['A'], cacheHint: cacheKey};\n          return {...metadata, get: () => createElementwiseProgramInfo(handler, metadata, input, glslFunc)};\n        };\n\nexport const abs = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAbs()), inputs)];\n\nexport const acos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAcos()), inputs)];\n\nexport const asin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAsin()), inputs)];\n\nexport const atan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAtan()), inputs)];\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clip =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ClipAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(\n            handler, inputs[0], glslClip(attributes.min, attributes.max), attributes.cacheKey),\n        inputs)];\n\nexport const parseClipAttributes = (node: Graph.Node): ClipAttributes => createAttributeWithCacheKey(\n    {min: node.attributes.getFloat('min', MIN_CLIP), max: node.attributes.getFloat('max', MAX_CLIP)});\n\nexport const clipV11 = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const attributes = generateClipAttributesFromInputs(handler, inputs);\n  return clip(handler, [inputs[0]], attributes);\n};\n\nconst generateClipAttributesFromInputs = (handler: WebGLInferenceHandler, inputs: Tensor[]): ClipAttributes => {\n  if (inputs.length >= 3 &&\n      (!handler.session.isInitializer(inputs[1].dataId) || !handler.session.isInitializer(inputs[2].dataId))) {\n    throw new Error('dynamic clip attributes are not allowed');\n  }\n\n  const min = (inputs.length >= 3) ? inputs[1].numberData[0] : MIN_CLIP;\n  const max = (inputs.length >= 3) ? inputs[2].numberData[0] : MAX_CLIP;\n  return createAttributeWithCacheKey({min, max});\n};\n\nexport const ceil = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCeil()), inputs)];\n\nexport const cos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCos()), inputs)];\n\nexport interface EluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const elu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: EluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslElu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseEluAttributes = (node: Graph.Node): EluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 1.0)});\n\nexport const exp = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslExp()), inputs)];\n\nexport const floor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslFloor()), inputs)];\n\nexport const identity = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslIdentity()), inputs)];\n\nexport interface LeakyReluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const leakyRelu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: LeakyReluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslLeakyRelu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseLeakyReluAttributes = (node: Graph.Node): LeakyReluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 0.01)});\n\nexport const log = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslLog()), inputs)];\n\nexport const neg = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNeg()), inputs)];\n\nexport const not = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNot()), inputs)];\n\nexport const relu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslRelu()), inputs)];\n\nexport const sigmoid = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSigmoid()), inputs)];\n\nexport const sin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSin()), inputs)];\n\nexport const sqrt = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSqrt()), inputs)];\n\nexport const tan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTan()), inputs)];\n\nexport const tanh = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTanh()), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst unpackProgramMetadata = {\n  name: 'unpack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const createUnpackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const rank = input.dims.length;\n\n  const channels = getChannels('rc', rank);\n  const innerDims = channels.slice(-2);\n  const coordsDataType = getCoordsDataType(rank);\n  const unpackChannel = unpackFromChannel();\n  const isScalar = (input.dims.length === 0);\n  const sourceCoords = isScalar ? '' : getSourceCoords(rank, channels);\n  const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const shaderSource = `\n    ${unpackChannel}\n    void main() {\n      ${coordsDataType} rc = getOutputCoords();\n\n       // Sample the texture with the coords to get the rgba channel value.\n       vec4 packedInput = getA(${sourceCoords});\n\n       ${glsl.output} = vec4(getChannel(packedInput, ${coords}), 0, 0, 0);\n     }\n   `;\n\n  return {\n    ...unpackProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n    shaderSource\n  };\n};\n\nexport const createUnpackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...unpackProgramMetadata, get: () => createUnpackProgramInfo(handler, input)});\n\nfunction getSourceCoords(rank: number, dims: string[]): string {\n  if (rank === 1) {\n    return 'rc';\n  }\n\n  let coords = '';\n  for (let i = 0; i < rank; i++) {\n    coords += dims[i];\n    if (i < rank - 1) {\n      coords += ',';\n    }\n  }\n  return coords;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const unsqueeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.unsqueezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const unsqueezeV13 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV13(inputs);\n  return unsqueeze(inferenceHandler, [inputs[0]], Array.from(inputs[1].integerData));\n};\n\nexport const parseUnsqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Unsqueeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n\nconst validateInputsV13 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Unsqueeze requires 2 inputs.');\n  }\n\n  if (inputs[1].type !== 'int32') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface UpsampleAttributes extends AttributeWithCacheKey {\n  readonly opset: number;\n  readonly isResize: boolean;\n  readonly mode: string;\n  readonly scales: number[];\n  readonly extrapolationValue: number;\n  readonly coordinateTransformMode: string;\n  readonly useExtrapolation: boolean;\n  readonly needRoiInput: boolean;\n  readonly nearestMode: string;\n  readonly cubicCoefficientA: number;\n  readonly excludeOutside: boolean;\n  readonly useNearest2xOptimization: boolean;\n  readonly roiInputIdx: number;\n  readonly scalesInputIdx: number;\n  readonly sizesInputIdx: number;\n}\n\nconst upsampleProgramMetadata = {\n  name: 'Upsample',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const upsample: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...upsampleProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createUpsampleProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseUpsampleAttributesV7: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 7);\n\nexport const parseUpsampleAttributesV9: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 9);\n\nexport const parseUpsampleAttributes = (node: Graph.Node, opset: number): UpsampleAttributes => {\n  const isResize = (opset >= 10);\n\n  // processing node attributes\n  const mode = node.attributes.getString('mode', 'nearest');\n  if (mode !== 'nearest' && mode !== 'linear' && (opset < 11 || mode !== 'cubic')) {\n    throw new Error(`unrecognized mode: ${mode}`);\n  }\n\n  let scales: number[] = [];\n  if (opset < 9) {\n    scales = node.attributes.getFloats('scales');\n    scalesValidation(scales, mode, isResize);\n  }\n\n  const extrapolationValue = node.attributes.getFloat('extrapolation_value', 0.0);\n\n  const coordinateTransformMode =\n      opset > 10 ? node.attributes.getString('coordinate_transformation_mode', 'half_pixel') : 'asymmetric';\n  if ([\n        'asymmetric', 'pytorch_half_pixel', 'tf_half_pixel_for_nn', 'align_corners', 'tf_crop_and_resize', 'half_pixel'\n      ].indexOf(coordinateTransformMode) === -1) {\n    throw new Error(`coordinate_transform_mode '${coordinateTransformMode}' is not supported`);\n  }\n  const needRoiInput = (coordinateTransformMode === 'tf_crop_and_resize');\n  const useExtrapolation = needRoiInput;\n\n  const nearestMode =\n      (mode === 'nearest' && opset >= 11) ? node.attributes.getString('nearest_mode', 'round_prefer_floor') : '';\n  if (['round_prefer_floor', 'round_prefer_ceil', 'floor', 'ceil', ''].indexOf(nearestMode) === -1) {\n    throw new Error(`nearest_mode '${nearestMode}' is not supported`);\n  }\n\n  const cubicCoefficientA = node.attributes.getFloat('cubic_coeff_a', -0.75);\n  const excludeOutside = node.attributes.getInt('exclude_outside', 0) !== 0;\n  if (excludeOutside && mode !== 'cubic') {\n    throw new Error('exclude_outside can be set to 1 only when mode is CUBIC.');\n  }\n\n  const useNearest2xOptimization =\n      (opset < 11) ? true : (mode === 'nearest' && coordinateTransformMode === 'asymmetric' && nearestMode === 'floor');\n\n  let roiInputIdx = 0;\n  let scalesInputIdx = 0;\n  let sizesInputIdx = 0;\n\n  if (opset > 10) {\n    // handle when roiInput is not given\n    if (node.inputs.length > 2) {\n      roiInputIdx = 1;\n      scalesInputIdx = 2;\n      sizesInputIdx = 3;\n    } else {\n      scalesInputIdx = 1;\n      sizesInputIdx = 2;\n    }\n  } else if (opset === 9) {\n    scalesInputIdx = 1;\n  }\n\n  return createAttributeWithCacheKey({\n    opset,\n    isResize,\n    mode,\n    scales,\n    extrapolationValue,\n    coordinateTransformMode,\n    useExtrapolation,\n    needRoiInput,\n    nearestMode,\n    cubicCoefficientA,\n    excludeOutside,\n    useNearest2xOptimization,\n    roiInputIdx,\n    scalesInputIdx,\n    sizesInputIdx\n  });\n};\n\nconst createUpsampleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [inputWidth, inputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(inputs[0].dims, TextureType.unpacked);\n\n      const outputShape = inputs[0].dims.map((dim, i) => Math.floor(dim * attributes.scales[i]));\n      const [outputWidth, outputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(outputShape, TextureType.unpacked);\n      const dim = outputShape.length;\n\n      const outputPitches = new Array<number>(dim);\n      const inputPitches = new Array<number>(dim);\n      let precalculatedPitches = `\n      int output_pitches[${dim}];\n      int input_pitches[${dim}];\n      `;\n      for (let d = dim - 1; d >= 0; d--) {\n        outputPitches[d] = (d === dim - 1) ? 1 : outputPitches[d + 1] * outputShape[d + 1];\n        inputPitches[d] = (d === dim - 1) ? 1 : inputPitches[d + 1] * inputs[0].dims[d + 1];\n\n        precalculatedPitches += `\n        output_pitches[${d}] = ${outputPitches[d]};\n        input_pitches[${d}] = ${inputPitches[d]};\n        `;\n      }\n      const getInputFloatFunction = `\n      float getInputFloat(int index) {\n        vec2 coords = offsetToCoords(index, ${inputWidth}, ${inputHeight});\n        float value = getColorAsFloat(${glsl.texture2D}(X, coords));\n        return value;\n      }\n      `;\n\n      const shaderSource = attributes.mode === 'nearest' ?\n          // nearest\n          `\n    ${getInputFloatFunction}\n    float process(int indices[${dim}]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int d, m;\n      for (int dim = 0; dim < ${dim}; ++dim) {\n        d = output_index / output_pitches[dim];\n        m = output_index - d * output_pitches[dim];\n        output_index = m;\n\n        if (scales[dim] != 1 && d > 0) {\n          int d2 = d / scales[dim];\n          m = d - d2 * scales[dim];\n          d = d2;\n        }\n        input_index += input_pitches[dim] * d;\n      }\n\n      return getInputFloat(input_index);\n    }` :\n          dim === 4 ?\n          // bilinear 4D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[4]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m / output_pitches[1];\n      m = m - index_of_dim1 * output_pitches[1];\n      index_of_dim2 = m / output_pitches[2];\n      m = m - index_of_dim2 * output_pitches[2];\n      index_of_dim3 = m;\n\n      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;\n      index_of_input_dim2 = index_of_dim2 / scales[2];\n      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];\n      index_of_input_dim3 = index_of_dim3 / scales[3];\n      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];\n\n      input_index = index_of_dim0 * input_pitches[0] +\n            index_of_dim1 * input_pitches[1] +\n            index_of_input_dim2 * input_pitches[2] +\n            index_of_input_dim3;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim2 = false;\n      if (index_of_input_dim2 == (${inputs[0].dims[2]} - 1)) {\n        // It's the end in dimension 2\n        x01 = x00;\n        end_of_dim2 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[2]);\n      }\n\n      if (index_of_input_dim3 == (input_pitches[2] - 1)) {\n        // It's the end in dimension 3\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);\n    }` :\n              // bilinear 2D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[2]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m;\n\n      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;\n      index_of_input_dim0 = index_of_dim0 / scales[0];\n      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];\n      index_of_input_dim1 = index_of_dim1 / scales[1];\n      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];\n\n      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim0 = false;\n      if (index_of_input_dim0 == (${inputs[0].dims[0]} - 1)) {\n        // It's the end in dimension 0\n        x01 = x00;\n        end_of_dim0 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[0]);\n      }\n\n      if (index_of_input_dim1 == (input_pitches[0] - 1)) {\n        // It's the end in dimension 1\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);\n    }`;\n      return {\n        ...upsampleProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        variables: [{\n          name: 'scales',\n          type: 'int',\n          arrayLength: attributes.scales.length,\n          data: attributes.scales.map(x => Math.ceil(x))\n        }]\n      };\n    };\n\nexport const validateInputs = (inputs: Tensor[], attribute: UpsampleAttributes): void => {\n  if (!inputs || (attribute.opset < 9 && inputs.length !== 1) ||\n      (attribute.opset >= 9 && attribute.opset < 11 && inputs.length !== 2) ||\n      (attribute.opset >= 11 && inputs.length < 2)) {\n    throw new Error('invalid inputs.');\n  }\n\n  if (attribute.scales.length > 0 && inputs[0].dims.length !== attribute.scales.length) {\n    throw new Error('Invalid input shape.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input tensor types.');\n  }\n};\n\nexport const scalesValidation = (scales: number[], mode: string, isResize: boolean): void => {\n  if (!isResize) {\n    for (const scale of scales) {\n      if (scale < 1) {\n        throw new Error('Scale value should be greater than or equal to 1.');\n      }\n    }\n  } else {\n    for (const scale of scales) {\n      if (scale <= 0) {\n        throw new Error('Scale value should be greater than 0.');\n      }\n    }\n  }\n  if (mode === 'linear' || mode === 'cubic') {\n    if (scales.length !== 2 && (scales.length !== 4 || scales[0] !== 1 || scales[1] !== 1)) {\n      throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic') \\\n        or 4-D inputs with the corresponding outermost 2 scale values being 1 \\\n        in the ${isResize ? 'Resize' : 'Upsample'} opeartor.`);\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport {Logger, Profiler} from '../../instrument';\n\nimport {GlslPreprocessor} from './glsl-preprocessor';\nimport {getVertexShaderSource} from './glsl-source';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {Artifact, ProgramInfo, ProgramVariable, TextureData, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  vertexShader: WebGLShader;\n  attributesBound: boolean;\n\n  constructor(\n      public profiler: Readonly<Profiler>, public glContext: WebGLContext,\n      public textureLayoutStrategy: TextureLayoutStrategy) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    this.profiler.event('op', `ProgramManager.run ${buildArtifact.programInfo.name ?? 'unknown kernel'}`, () => {\n      const gl = this.glContext.gl;\n      const program = buildArtifact.program;\n      gl.useProgram(program);\n      try {\n        this.bindOutput(output);\n        if (!this.attributesBound) {\n          this.bindAttributes(buildArtifact.attribLocations);\n        }\n        this.bindUniforms(buildArtifact.uniformLocations, buildArtifact.programInfo.variables ?? [], inputs);\n      } catch (err) {\n        Logger.error('ProgramManager', buildArtifact.programInfo.shaderSource);\n        throw err;\n      }\n      this.profiler.event('backend', 'GlContext.draw()', () => {\n        this.glContext.draw();\n      });\n    }, this.glContext);\n  }\n  dispose(): void {\n    if (this.vertexShader) {\n      this.glContext.deleteShader(this.vertexShader);\n    }\n    this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[], outputTextureLayout: TextureLayout): Artifact {\n    return this.profiler.event('backend', 'ProgramManager.build', () => {\n      const preprocessor = new GlslPreprocessor(this.glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n      const fragScript = preprocessor.preprocess();\n      const program = this.compile(fragScript);\n      const artifact = {\n        programInfo,\n        program,\n        uniformLocations: this.getUniformLocations(\n            program, preprocessor.context.programInfo.inputNames, preprocessor.context.programInfo.variables),\n        attribLocations: this.getAttribLocations(program)\n      };\n      return artifact;\n    });\n  }\n  protected compile(fragShaderScript: string): WebGLProgram {\n    if (!this.vertexShader) {\n      Logger.verbose('ProrgramManager', 'Compiling and caching Vertex shader for the first time');\n      const vertexShaderScript = getVertexShaderSource(this.glContext.version);\n      this.vertexShader = this.glContext.compileShader(vertexShaderScript, this.glContext.gl.VERTEX_SHADER);\n    }\n    if (env.debug) {\n      Logger.verbose('ProrgramManager', `FragShader:\n${fragShaderScript}\n`);\n    }\n    const fragShader = this.glContext.compileShader(fragShaderScript, this.glContext.gl.FRAGMENT_SHADER);\n    const program = this.glContext.createProgram(this.vertexShader, fragShader);\n    this.glContext.deleteShader(fragShader);\n    return program;\n  }\n  bindOutput(td: TextureData): void {\n    const width = td.width;\n    const height = td.height;\n    Logger.verbose(\n        'ProrgramManager',\n        `Binding output texture to Framebuffer: w/h=${width}/${height}, shape=${td.shape}, type=${td.tensor.type}`);\n    this.glContext.attachFramebuffer(td.texture, width, height);\n  }\n  bindAttributes(attribLocations: Artifact.AttribLocations): void {\n    const positionHandle = attribLocations.position;\n    const textureCoordHandle = attribLocations.textureCoord;\n    this.glContext.setVertexAttributes(positionHandle, textureCoordHandle);\n    this.attributesBound = true;\n  }\n  bindUniforms(uniformLocations: Artifact.UniformLocations, variables: ProgramVariable[], textures: TextureData[]):\n      void {\n    const gl = this.glContext.gl;\n    let texturePosition = 0;\n    for (const {name, type, location, arrayLength} of uniformLocations) {\n      const value = variables.find(v => v.name === name)?.data;\n      if (type !== 'sampler2D' && !value) {\n        throw new Error(`variable '${name}' does not have data defined in program info`);\n      }\n      switch (type) {\n        case 'sampler2D':\n          this.bindTexture(textures[texturePosition], location, texturePosition);\n          texturePosition++;\n          break;\n        case 'float':\n          if (arrayLength) {\n            gl.uniform1fv(location, value as number[]);\n          } else {\n            gl.uniform1f(location, value as number);\n          }\n          break;\n        case 'int':\n          if (arrayLength) {\n            gl.uniform1iv(location, value as number[]);\n          } else {\n            gl.uniform1i(location, value as number);\n          }\n          break;\n        default:\n          throw new Error(`Uniform not implemented: ${type}`);\n      }\n    }\n  }\n  bindTexture(td: TextureData, uniformHandle: WebGLUniformLocation, position: number): void {\n    this.glContext.bindTextureToUniform(td.texture, position, uniformHandle);\n  }\n  getAttribLocations(program: WebGLProgram): Artifact.AttribLocations {\n    return {\n      position: this.getAttribLocation(program, 'position'),\n      textureCoord: this.getAttribLocation(program, 'textureCoord')\n    };\n  }\n  getUniformLocations(program: WebGLProgram, samplers?: string[], variables?: VariableInfo[]):\n      Artifact.UniformLocations {\n    const uniformLocations: Artifact.UniformLocations = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLocations.push({name: sampler, type: 'sampler2D', location: this.getUniformLocation(program, sampler)});\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLocations.push({...variable, location: this.getUniformLocation(program, variable.name)});\n      }\n    }\n    return uniformLocations;\n  }\n  getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation {\n    const gl = this.glContext.gl;\n    const reference = gl.getUniformLocation(program, name);\n    if (reference === null) {\n      throw new Error(`Uniform ${name} not found.`);\n    }\n    return reference;\n  }\n  getAttribLocation(program: WebGLProgram, name: string): number {\n    const gl = this.glContext.gl;\n    const attributeLocation: number = gl.getAttribLocation(program, name);\n    return attributeLocation;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from '../../backend';\nimport {Graph} from '../../graph';\nimport {Logger} from '../../instrument';\nimport {Operator} from '../../operators';\nimport {OpSet, resolveOperator} from '../../opset';\nimport {Session} from '../../session';\nimport {Tensor} from '../../tensor';\nimport {WebGLBackend} from '../backend-webgl';\n\nimport {WebGLInferenceHandler} from './inference-handler';\nimport {WEBGL_OP_RESOLVE_RULES} from './op-resolve-rules';\nimport {ProgramManager} from './program-manager';\nimport {PreferLogicalStrategy, TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureManager} from './texture-manager';\nimport {TextureData} from './types';\n\nexport class WebGLSessionHandler implements SessionHandler {\n  programManager: ProgramManager;\n  textureManager: TextureManager;\n  layoutStrategy: TextureLayoutStrategy;\n  packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  pack2unpackMap: Map<Tensor.Id, Tensor.Id>;\n  unpack2packMap: Map<Tensor.Id, Tensor.Id>;\n  initializers: Set<Tensor.Id>;\n  pack?: boolean;\n\n  constructor(public readonly backend: WebGLBackend, public readonly context: Session.Context) {\n    this.layoutStrategy = new PreferLogicalStrategy(backend.glContext.maxTextureSize);\n    this.programManager = new ProgramManager(this.context.profiler, backend.glContext, this.layoutStrategy);\n    this.textureManager = new TextureManager(\n        backend.glContext, this.layoutStrategy, this.context.profiler,\n        {reuseTextures: backend.textureCacheMode === 'full'});\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n    this.pack = backend.pack;\n    this.pack2unpackMap = new Map();\n    this.unpack2packMap = new Map();\n  }\n\n  createInferenceHandler() {\n    return new WebGLInferenceHandler(this);\n  }\n  onGraphInitialized(graph: Graph): void {\n    const initializers = graph.getValues().filter(v => v.from === -1 && v.tensor).map(v => v.tensor!.dataId);\n    this.initializers = new Set(initializers);\n  }\n  isInitializer(tensorId: Tensor.Id): boolean {\n    return this.initializers ? this.initializers.has(tensorId) : false;\n  }\n  addInitializer(tensorId: Tensor.Id): void {\n    this.initializers.add(tensorId);\n  }\n  getTextureData(tensorId: Tensor.Id, isPacked: boolean): TextureData|undefined {\n    if (isPacked) {\n      return this.packedTextureDataCache.get(tensorId);\n    } else {\n      return this.unpackedTextureDataCache.get(tensorId);\n    }\n  }\n  setTextureData(tensorId: Tensor.Id, textureData: TextureData, isPacked = false): void {\n    Logger.verbose('WebGLSessionHandler', 'Storing Texture data in cache');\n    if (isPacked) {\n      this.packedTextureDataCache.set(tensorId, textureData);\n    } else {\n      this.unpackedTextureDataCache.set(tensorId, textureData);\n    }\n  }\n  dispose(): void {\n    this.programManager.dispose();\n    this.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.unpackedTextureDataCache = new Map();\n  }\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator {\n    const op = resolveOperator(node, opsets, WEBGL_OP_RESOLVE_RULES);\n    return {impl: op.opImpl, context: op.opInit ? op.opInit(node, graph) : node};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nexport declare namespace Encoder {\n  export interface DataTypeMap {\n    float: Float32Array;\n    byte: Uint8Array;\n    int: Uint32Array;\n  }\n  export type DataType = keyof DataTypeMap;\n  type DataArrayType = DataTypeMap[DataType];\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  export const enum Usage {\n    Default = 0,\n    UploadOnly,\n    Download4BytesAsFloat32,\n  }\n}\n\n/**\n * Abstraction for mapping data types to texture texlets\n * Encoding means how a Float32 is mapped to 1 or 4 channels for each texlet\n * Decoding means how a texlet's channels are mapped to a resulting Float32\n */\nexport interface DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType;\n  allocate(size: number): Encoder.DataArrayType;\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Encoder.DataArrayType;\n}\n/**\n * WebGL2 data encoder\n * Uses R32F as the format for texlet\n */\nexport class RedFloat32DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGL2RenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.R32F;\n      this.format = gl.RED;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA32F;\n      this.format = gl.RGBA;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType {\n    let result: Float32Array;\n    let source: Float32Array;\n    if (src.constructor !== Float32Array) {\n      Logger.warning('Encoder', 'data was not of type Float32; creating new Float32Array');\n      source = new Float32Array(src);\n    }\n    if (textureSize * this.channelSize > src.length) {\n      Logger.warning('Encoder', 'Source data too small. Allocating larger array');\n      source = src as Float32Array;\n      result = this.allocate(textureSize * this.channelSize) as Float32Array;\n      source.forEach((v, i) => result[i] = v);\n    } else {\n      source = src as Float32Array;\n      result = source;\n    }\n    return result;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n/**\n * Data encoder for WebGL 1 with support for floating point texture\n */\nexport class RGBAFloatDataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGLRenderingContext, channels = 1, textureType?: number) {\n    if (channels !== 1 && channels !== 4) {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n    this.internalFormat = gl.RGBA;\n    this.format = gl.RGBA;\n    this.channelSize = channels;\n    this.textureType = textureType || gl.FLOAT;\n  }\n  encode(src: Float32Array, textureSize: number): Encoder.DataArrayType {\n    let dest = src;\n    if (this.channelSize === 1) {\n      Logger.verbose('Encoder', 'Exploding into a larger array');\n      dest = this.allocate(textureSize) as Float32Array;\n      src.forEach((v, i) => dest[i * 4] = v);\n    }\n    return dest;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n\nexport class Uint8DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize = 4;\n  constructor(gl: WebGLRenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.ALPHA;\n      this.format = gl.ALPHA;  // not tested\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA;\n      this.format = gl.RGBA;\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Uint8Array, _textureSize: number): Encoder.DataArrayType {\n    return new Uint8Array(src.buffer, src.byteOffset, src.byteLength);\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Uint8Array(size * this.channelSize);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Uint8Array {\n    if (buffer instanceof Uint8Array) {\n      return buffer.subarray(0, dataSize);\n    }\n    throw new Error(`Invalid array type: ${buffer.constructor}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\nimport {assert} from '../../util';\n\n/** Layout preferences */\nexport interface WidthHeightPrefs {\n  breakAxis?: number;\n  isPacked?: boolean;\n  reverseWH?: boolean;\n}\n/**\n * TextureLayoutStrategy is an abstraction for different plans\n * for mapping n-dimensional arrays to 2D textures (and back)\n */\nexport interface TextureLayoutStrategy {\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number];\n}\n\n/**\n * This strategy try to find the minimal max(W,H) that fulfills (W * H == totalSize)\n */\nexport class AlwaysKeepOriginalSizeStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    // scalar tensor\n    if (shape.length === 0) {\n      return [1, 1];\n    }\n    const maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    const totalSize = shape.reduce((a, b) => a * b);\n\n    let width = Math.floor(Math.sqrt(totalSize));\n\n    for (; width < maxTextureSize && width < totalSize; width++) {\n      if (totalSize % width === 0) {\n        break;\n      }\n    }\n\n    if (width >= maxTextureSize || totalSize % width !== 0) {\n      throw new Error(`The given dimensions are outside this GPU's boundaries: ${shape}`);\n    }\n    return [width, totalSize / width];\n  }\n}\n\nexport class PreferLogicalStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const wh = this.computeTexture(shape, prefs);\n    if (prefs && prefs.isPacked) {\n      wh[0] /= 2;\n      wh[1] /= 2;\n    }\n    if (prefs && prefs.reverseWH) {\n      return [wh[1], wh[0]];\n    }\n    return wh;\n  }\n\n  computeTexture(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const isPacked = prefs && prefs.isPacked;\n    // scalar tensor\n    if (shape.length === 0) {\n      return isPacked ? [2, 2] : [1, 1];\n    }\n    let maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    let logShape = shape.slice(0);\n    if (isPacked) {\n      maxTextureSize = maxTextureSize * 2;\n\n      // This logic ensures we accurately count the number of packed texels needed\n      // to accommodate the tensor. We can only pack values in the same texel if\n      // they are from adjacent pairs of rows/cols within the same batch. So if a\n      // tensor has 3 rows, we pretend it has 4 rows in order to account for the\n      // fact that the texels containing the third row are half empty.\n      logShape = logShape.map(\n          (d, i) => i >= logShape.length - 2 ? (logShape[i] % 2 === 0 ? logShape[i] : logShape[i] + 1) : logShape[i]);\n\n      // Packed texture height is at least 2 (the channel height of a single\n      // texel).\n      if (logShape.length === 1) {\n        logShape = [2, logShape[0]];\n      }\n    }\n\n    // If logical shape is 2, we don't squeeze, since we want to match physical.\n    if (logShape.length !== 2) {\n      const squeezeResult = squeezeShape(logShape);\n      logShape = squeezeResult.newShape;\n    }\n\n    const size = sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTextureSize) {\n      return [1, size];\n    } else if (logShape.length === 2 && logShape[0] <= maxTextureSize && logShape[1] <= maxTextureSize) {\n      return logShape as [number, number];\n    } else if (logShape.length === 3 && logShape[0] * logShape[1] <= maxTextureSize && logShape[2] <= maxTextureSize) {\n      return [logShape[0] * logShape[1], logShape[2]];\n    } else if (logShape.length === 3 && logShape[0] <= maxTextureSize && logShape[1] * logShape[2] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2]];\n    } else if (\n        logShape.length === 4 && logShape[0] * logShape[1] * logShape[2] <= maxTextureSize &&\n        logShape[3] <= maxTextureSize) {\n      return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\n    } else if (\n        logShape.length === 4 && logShape[0] <= maxTextureSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    } else {\n      if (isPacked) {\n        // For packed textures size equals the number of channels required to\n        // accommodate the texture data. However in order to squarify such that\n        // inner dimensions stay even, we rewrite size to equal the number of\n        // texels. Then in the return statement we rehydrate the squarified\n        // dimensions to channel units.\n        return sizeToSquarishShape(size / 4).map(d => d * 2) as [number, number];\n      }\n      return sizeToSquarishShape(size);\n    }\n  }\n}\n\nexport function squeezeShape(shape: number[], axis?: number[]): {newShape: number[]; keptDims: number[]} {\n  const newShape: number[] = [];\n  const keptDims: number[] = [];\n  const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n  const axes = (axis == null || isEmptyArray) ? null : parseAxisParam(axis, shape).sort();\n  let j = 0;\n  for (let i = 0; i < shape.length; ++i) {\n    if (axes != null) {\n      if (axes[j] === i && shape[i] !== 1) {\n        throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n      }\n      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n        newShape.push(shape[i]);\n        keptDims.push(i);\n      }\n      if (axes[j] <= i) {\n        j++;\n      }\n    }\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n      keptDims.push(i);\n    }\n  }\n  return {newShape, keptDims};\n}\n\nexport function parseAxisParam(axis: number|number[], shape: number[]): number[] {\n  const rank = shape.length;\n\n  // Normalize input\n  axis = axis == null ? shape.map((s, i) => i) : ([] as number[]).concat(axis);\n\n  // Check for valid range\n  assert(\n      axis.every(ax => ax >= -rank && ax < rank),\n      () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n          `got axis ${axis}`);\n\n  // Check for only integers\n  assert(\n      axis.every(isInt),\n      () => 'All values in axis param must be integers but ' +\n          `got axis ${axis}`);\n\n  // Handle negative axis.\n  return axis.map(a => a < 0 ? rank + a : a);\n}\nexport function isInt(a: number): boolean {\n  return a % 1 === 0;\n}\nexport function sizeFromShape(shape: number[]): number {\n  if (shape.length === 0) {\n    // Scalar.\n    return 1;\n  }\n  let size = shape[0];\n  for (let i = 1; i < shape.length; i++) {\n    size *= shape[i];\n  }\n  return size;\n}\nexport function getRowsCols(shape: number[]): [number, number] {\n  if (shape.length === 0) {\n    throw Error('Cannot get rows and columns of an empty shape array.');\n  }\n\n  return [shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\nexport function sizeToSquarishShape(size: number): [number, number] {\n  const width = Math.ceil(Math.sqrt(size));\n  return [width, Math.ceil(size / width)];\n}\nexport function getBatchDim(shape: number[], dimsToSkip = 2): number {\n  return sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ShapeUtil} from '../../util';\n\nimport {TextureLayoutStrategy, WidthHeightPrefs} from './texture-layout-strategy';\nimport {TextureLayout, TextureType} from './types';\n\nexport const createTextureLayoutFromTextureType =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[],\n     textureType: TextureType): TextureLayout => {\n      const channel = (textureType === TextureType.unpacked || textureType === TextureType.unpackedReversed) ? 1 : 4;\n      const isPacked = textureType === TextureType.packed;\n      const reverseWH = (textureType === TextureType.unpackedReversed || textureType === TextureType.packed);\n      const breakAxis = textureType === TextureType.packedLastDimension ? shape.length - 1 : undefined;\n      const unpackedShape = textureType === TextureType.packedLastDimension ?\n          shape.map((d, i) => i === shape.length - 1 ? d * 4 : d) :\n          undefined;\n      return createTextureLayoutFromShape(\n          textureLayoutStrategy, shape, channel, unpackedShape, {isPacked, reverseWH, breakAxis});\n    };\n\nexport const calculateTextureWidthAndHeight =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], textureType: TextureType):\n        [number, number] => {\n          const layout = createTextureLayoutFromTextureType(textureLayoutStrategy, shape, textureType);\n          return [layout.width, layout.height];\n        };\n\n/**\n * Create a TextureLayout object from shape.\n */\nexport const createTextureLayoutFromShape =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], channels: 1|4 = 1,\n     unpackedShape?: readonly number[], prefs?: WidthHeightPrefs): TextureLayout => {\n      const isPacked = !!(prefs && prefs.isPacked);\n      const [width, height] = textureLayoutStrategy.computeTextureWH(isPacked ? unpackedShape || shape : shape, prefs);\n      const rank = shape.length;\n      let inferredDims = shape.slice(0);\n      if (rank === 0) {\n        inferredDims = [1];\n      }\n      if (channels === 1) {\n        // unpackedShape will take `shape` and not `inferredDims` so as to create a scalar Tensor if need be\n        unpackedShape = shape;\n      } else if (isPacked) {\n        if (channels !== 4) {\n          throw new Error('a packed texture must be 4-channel');\n        }\n        unpackedShape = shape;\n        if (rank > 0) {\n          inferredDims[rank - 1] = Math.ceil(inferredDims[rank - 1] / 2);\n        }\n        if (rank > 1) {\n          inferredDims[rank - 2] = Math.ceil(inferredDims[rank - 2] / 2);\n        }\n      } else if (!unpackedShape) {\n        throw new Error('Unpacked shape is needed when using channels > 1');\n      }\n      return {\n        width,\n        height,\n        channels,\n        isPacked,\n        shape: inferredDims,\n        strides: ShapeUtil.computeStrides(inferredDims),\n        unpackedShape,\n        reversedWH: (prefs && prefs.reverseWH)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger, Profiler} from '../../instrument';\nimport {Tensor} from '../../tensor';\n\nimport {Encoder} from './texture-data-encoder';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureData, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\nexport interface TextureManagerConfig {\n  reuseTextures?: boolean;\n}\n\n/**\n * TextureManager is the mainly responsible for caching Textures\n * Textures are cached in 2 levels:\n *   1. the texures which are associated with a dataId (from Tensor)\n *    Caching these is crucial to performance. These are In-use Textures\n *   2. textures which are not in use by any current ProgramInfo/Tensor\n *     These are called Free Textures\n * TextureManager is also used to help creating textures. For this it\n * uses WebGLContext and TextureLayoutStrategy\n */\nexport class TextureManager {\n  private readonly inUseTextures: Map<string, WebGLTexture[]>;\n  private readonly idleTextures: Map<string, WebGLTexture[]>;\n  private readonly textureLookup: Map<WebGLTexture, string>;\n  private readonly pendingRead: Map<Tensor.Id, Array<(arr: Tensor.NumberType) => void>> = new Map();\n\n  constructor(\n      public glContext: WebGLContext, public layoutStrategy: TextureLayoutStrategy, public profiler: Readonly<Profiler>,\n      private config: TextureManagerConfig) {\n    if (config.reuseTextures) {\n      this.inUseTextures = new Map();\n      this.idleTextures = new Map();\n      this.textureLookup = new Map();\n    }\n  }\n  createTextureFromLayout(\n      dataType: Tensor.DataType, layout: TextureLayout, data?: Tensor.NumberType, usage?: Encoder.Usage) {\n    const textureDataType = this.toEncoderType(dataType);\n\n    const encoder = this.glContext.getEncoder(textureDataType, layout.channels || 1, usage);\n    if (layout.isPacked && usage === Encoder.Usage.UploadOnly) {\n      throw new Error('not implemented');\n    }\n    const width = layout.width;\n    const height = layout.height;\n\n    let key: string|undefined;\n    let inUseTextures: WebGLTexture[]|undefined;\n    if (this.config.reuseTextures) {\n      key = `${width}x${height}_${encoder.format}_${encoder.internalFormat}_${encoder.textureType}`;\n      inUseTextures = this.inUseTextures.get(key);\n      if (!inUseTextures) {\n        inUseTextures = [];\n        this.inUseTextures.set(key, inUseTextures);\n      }\n\n      const idleTextures = this.idleTextures.get(key);\n      if (idleTextures && idleTextures.length > 0) {\n        const texture = idleTextures.pop()!;\n        inUseTextures.push(texture);\n        if (usage === Encoder.Usage.UploadOnly) {\n          this.glContext.updateTexture(texture, width, height, encoder, this.toTextureData(dataType, data)!);\n        }\n        return texture;\n      }\n    }\n\n    Logger.verbose('TextureManager', `Creating new texture of size ${layout.width}x${layout.height}`);\n    const texture = this.glContext.allocateTexture(width, height, encoder, this.toTextureData(dataType, data));\n\n    if (this.config.reuseTextures) {\n      inUseTextures!.push(texture);\n      this.textureLookup.set(texture, key!);\n    }\n    return texture;\n  }\n  readTexture(td: TextureData, dataType: Tensor.DataType, channels?: number): Tensor.NumberType {\n    if (!channels) {\n      channels = 1;\n    }\n    return this.profiler.event('backend', 'TextureManager.readTexture', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      return this.toTensorData(dataType, data);\n    });\n  }\n  async readTextureAsync(td: TextureData, dataType: Tensor.DataType, channels?: number): Promise<Tensor.NumberType> {\n    const dataId = td.tensor.dataId;\n    if (!channels) {\n      channels = 1;\n    }\n    if (this.pendingRead.has(dataId)) {\n      const subscribers = this.pendingRead.get(dataId);\n      return new Promise<Tensor.NumberType>(resolve => subscribers?.push(resolve));\n    }\n    return this.profiler.event('backend', 'TextureManager.readTextureAsync', async () => {\n      this.pendingRead.set(dataId, []);\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      // add a fence waiting for the data to be ready\n      await this.glContext.createAndWaitForFence();\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      const tensorData = this.toTensorData(dataType, data);\n      const subscribers = this.pendingRead.get(dataId);\n      this.pendingRead.delete(dataId);\n      subscribers?.forEach(resolve => resolve(tensorData));\n      return tensorData;\n    });\n  }\n  readUint8TextureAsFloat(td: TextureData): Float32Array {\n    return this.profiler.event('backend', 'TextureManager.readUint8TextureAsFloat', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b);\n      const data = this.glContext.readTexture(td.texture, td.width, td.height, dataSize * 4, 'byte', 4);\n      return new Float32Array(data.buffer, data.byteOffset, dataSize);\n    });\n  }\n  releaseTexture(textureData: TextureData, deleteTexture?: boolean): void {\n    let key: string|undefined;\n    if (this.config.reuseTextures) {\n      key = this.textureLookup.get(textureData.texture);\n      if (key) {\n        if (deleteTexture) {\n          this.textureLookup.delete(key);\n        }\n        const inUseTextures = this.inUseTextures.get(key);\n        if (inUseTextures) {\n          const index = inUseTextures.indexOf(textureData.texture);\n          if (index !== -1) {\n            inUseTextures.splice(index, 1);\n            let idleTextures = this.idleTextures.get(key);\n            if (!idleTextures) {\n              idleTextures = [];\n              this.idleTextures.set(key, idleTextures);\n            }\n            idleTextures.push(textureData.texture);\n          }\n        }\n      }\n    }\n\n    if (!key || deleteTexture) {\n      Logger.verbose('TextureManager', `Deleting texture of size ${textureData.width}x${textureData.height}`);\n      this.glContext.deleteTexture(textureData.texture);\n    }\n  }\n  toTensorData(dataType: Tensor.DataType, data: Encoder.DataArrayType): Tensor.NumberType {\n    switch (dataType) {\n      case 'int16':\n        return data instanceof Int16Array ? data : Int16Array.from(data);\n      case 'int32':\n        return data instanceof Int32Array ? data : Int32Array.from(data);\n      case 'int8':\n        return data instanceof Int8Array ? data : Int8Array.from(data);\n      case 'uint16':\n        return data instanceof Uint16Array ? data : Uint16Array.from(data);\n      case 'uint32':\n        return data instanceof Uint32Array ? data : Uint32Array.from(data);\n      case 'uint8':\n      case 'bool':\n        return data instanceof Uint8Array ? data : Uint8Array.from(data);\n      case 'float32':\n        return data instanceof Float32Array ? data : Float32Array.from(data);\n      case 'float64':\n        return data instanceof Float64Array ? data : Float64Array.from(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n  }\n  toTextureData(dataType: Tensor.DataType, data: Tensor.NumberType|undefined): Encoder.DataArrayType|undefined {\n    if (!data) {\n      return undefined;\n    }\n    return (data instanceof Float32Array) ? data : new Float32Array(data);\n    /*\n    switch (dataType) {\n      case 'int16':\n      case 'int32':\n      case 'uint16':\n      case 'uint32':\n        return (data.constructor === Uint32Array) ? data as Uint32Array : new Uint32Array(data);\n      case 'int8':\n      case 'uint8':\n      case 'bool':\n        return (data.constructor === Uint8Array) ? data as Uint8Array : new Uint8Array(data);\n      case 'float32':\n      case 'float64':\n        return (data.constructor === Float32Array) ? data as Float32Array : new Float32Array(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n    */\n  }\n  toEncoderType(_dataType: Tensor.DataType): Encoder.DataType {\n    return 'float';\n    // switch (dataType) {\n    //   case 'int16':\n    //   case 'int32':\n    //   case 'uint16':\n    //   case 'uint32':\n    //     return 'int';\n    //   case 'uint8':\n    //   case 'bool':\n    //     return 'byte';\n    //   case 'float32':\n    //   case 'float64':\n    //     return 'float';\n    //   default:\n    //     throw new Error(`TensorData type ${dataType} is not supported`);\n    // }\n  }\n  clearActiveTextures(): void {\n    this.glContext.clearActiveTextures();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../tensor';\n\n/**\n * Layout info is used for mapping n-dimensional array to 2D textures\n * The layout is created by the TextureLayoutStrategy based on\n * the Tensor's dimensions and strides\n */\nexport interface TextureLayout {\n  width: number;\n  height: number;\n  /**\n   * specify the number of value that encoded in a single pixel\n   */\n  channels: 1|2|3|4;\n  /**\n   * whether in packed mode or not\n   */\n  isPacked?: boolean;\n  /**\n   * the normalized shape\n   */\n  shape: readonly number[];\n  /**\n   * the stride of each dimensions, calculated according to shape\n   */\n  strides: readonly number[];\n  /**\n   * the original shape(dims) of the corresponding tensor\n   */\n  unpackedShape: readonly number[];\n\n  reversedWH?: boolean;\n}\nexport interface TextureData extends TextureLayout {\n  tensor: Tensor;\n  texture: WebGLTexture;\n}\n\nexport enum TextureType {\n  unpacked,              // <-- normal unpacked texture\n  unpackedReversed,      // <-- unpacked texture used in old ONNX.js implementation (deprecated)\n  packed,                // <-- normal packed texture\n  downloadUint8AsFloat,  // <-- ONLY used in texture downloading for iOS devices\n  packedLastDimension    // <-- ONLY used in old ONNX.js Conv implementation for input W (deprecated)\n}\n\nexport interface TensorInfo {\n  id?: Tensor.Id;\n  dims: readonly number[];\n  type: Tensor.DataType;\n  textureType: TextureType;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * A set of metadata of a shader program.\n */\nexport interface ProgramMetadata {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n  /**\n   * texture types for each input\n   */\n  inputTypes: TextureType[];\n  /**\n   * names of each input\n   */\n  inputNames: string[];\n  /**\n   * an optional string as a cache hint in the artifact cache\n   */\n  cacheHint?: string;\n}\n\n/**\n * A ProgramInfoLoader allows\n */\nexport interface ProgramInfoLoader extends ProgramMetadata {\n  /**\n   * a function to get the program info\n   */\n  get(): ProgramInfo;\n}\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo extends ProgramMetadata {\n  /**\n   * information of uniform variables\n   */\n  variables?: ProgramVariable[];\n  /**\n   * tensor info for output\n   */\n  output: TensorInfo;\n  /**\n   * the shader's processing source code\n   */\n  shaderSource: string;\n  /**\n   * whether the shader source contains a customized main function implementation\n   */\n  hasMain?: boolean;\n}\n\nexport interface VariableInfo {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * Information of uniforms that shader uses\n */\nexport interface UniformInfo {\n  type: 'sampler2D'|VariableInfo['type'];\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface UniformLocation extends UniformInfo {\n  location: WebGLUniformLocation;\n}\n\n/**\n * Artifact is the result of compilation\n * It does not contain input of output data\n * However anything that could be run as a \"program\"\n */\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  program: WebGLProgram;\n  uniformLocations: UniformLocation[];\n  attribLocations: {position: number; textureCoord: number};\n}\nexport declare namespace Artifact {\n  type UniformLocations = Artifact['uniformLocations'];\n  type AttribLocations = Artifact['attribLocations'];\n}\n\nexport interface UniformData {\n  [name: string]: number|number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {assert} from '../../util';\n/**\n * Given a non RGBA shape calculate the R version\n * It is assumed that the dimensions are multiples of given channels\n * NOTE: it is always the last dim that gets packed.\n * @param unpackedShape original shape to create a packed version from\n */\nexport function getPackedShape(unpackedShape: readonly number[]): readonly number[] {\n  const len = unpackedShape.length;\n  return unpackedShape.slice(0, len - 1).concat(unpackedShape[len - 1] / 4);\n}\n\nexport async function repeatedTry(\n    checkFn: () => boolean, delayFn = (_counter: number) => 0, maxCounter?: number): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    let tryCount = 0;\n\n    const tryFn = () => {\n      if (checkFn()) {\n        resolve();\n        return;\n      }\n\n      tryCount++;\n\n      const nextBackoff = delayFn(tryCount);\n\n      if (maxCounter != null && tryCount >= maxCounter) {\n        reject();\n        return;\n      }\n      setTimeout(tryFn, nextBackoff);\n    };\n\n    tryFn();\n  });\n}\n\n/**\n * Generates the function name from an input sampler name.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerName(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1);\n}\n\n/**\n * Generates the function name from an input sampler name at output coordinates.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1) + 'AtOutCoords';\n}\n\n/** Returns a new input shape (a copy) that has a squeezed logical shape. */\nexport function squeezeInputShape(inputShape: readonly number[], squeezedShape: number[]): number[] {\n  // Deep copy.\n  let newInputShape: number[] = JSON.parse(JSON.stringify(inputShape));\n  newInputShape = squeezedShape;\n  return newInputShape;\n}\n\n/** Returns a list of squeezed parameters for shader functions */\nexport function getSqueezedParams(params: string[], keptDims: number[]): string {\n  return keptDims.map(d => params[d]).join(', ');\n}\n\n/** Returns the data type for different ranks. */\nexport function getCoordsDataType(rank: number): string {\n  if (rank <= 1) {\n    return 'int';\n  } else if (rank === 2) {\n    return 'ivec2';\n  } else if (rank === 3) {\n    return 'ivec3';\n  } else if (rank === 4) {\n    return 'ivec4';\n  } else if (rank === 5) {\n    return 'ivec5';\n  } else if (rank === 6) {\n    return 'ivec6';\n  } else {\n    throw Error(`GPU for rank ${rank} is not yet supported`);\n  }\n}\n\nexport function getGlChannels(rank = 6): string[] {\n  return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nimport {WebGLContext} from './webgl-context';\n\nconst cache: {[contextId: string]: WebGLContext} = {};\n\n/**\n * This factory function creates proper WebGLRenderingContext based on\n * the current browsers capabilities\n * The order is from higher/most recent versions to most basic\n */\nexport function createWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  let context: WebGLContext|undefined;\n  if ((!contextId || contextId === 'webgl2') && 'webgl2' in cache) {\n    context = cache.webgl2;\n  } else if ((!contextId || contextId === 'webgl') && 'webgl' in cache) {\n    context = cache.webgl;\n  }\n\n  context = context || createNewWebGLContext(contextId);\n  contextId = contextId || context.version === 1 ? 'webgl' : 'webgl2';\n  const gl = context.gl;\n\n  cache[contextId] = context;\n\n  if (gl.isContextLost()) {\n    delete cache[contextId];\n    return createWebGLContext(contextId);\n  }\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n  gl.disable(gl.BLEND);\n  gl.disable(gl.DITHER);\n  gl.disable(gl.POLYGON_OFFSET_FILL);\n  gl.disable(gl.SAMPLE_COVERAGE);\n  gl.enable(gl.SCISSOR_TEST);\n  gl.enable(gl.CULL_FACE);\n  gl.cullFace(gl.BACK);\n\n  return context;\n}\n\nexport function createNewWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  const canvas = createCanvas();\n  const contextAttributes: WebGLContextAttributes = {\n    alpha: false,\n    depth: false,\n    antialias: false,\n    stencil: false,\n    preserveDrawingBuffer: false,\n    premultipliedAlpha: false,\n    failIfMajorPerformanceCaveat: false\n  };\n  let gl: WebGLRenderingContext|null;\n  const ca = contextAttributes;\n  if (!contextId || contextId === 'webgl2') {\n    gl = canvas.getContext('webgl2', ca);\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 2);\n      } catch (err) {\n        Logger.warning('GlContextFactory', `failed to create WebGLContext using contextId 'webgl2'. Error: ${err}`);\n      }\n    }\n  }\n  if (!contextId || contextId === 'webgl') {\n    gl = canvas.getContext('webgl', ca) || canvas.getContext('experimental-webgl', ca) as WebGLRenderingContext;\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 1);\n      } catch (err) {\n        Logger.warning(\n            'GlContextFactory',\n            `failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${err}`);\n      }\n    }\n  }\n\n  throw new Error('WebGL is not supported');\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ndeclare let OffscreenCanvas: {new (width: number, height: number): HTMLCanvasElement};\n\nfunction createCanvas(): HTMLCanvasElement {\n  if (typeof document === 'undefined') {\n    if (typeof OffscreenCanvas === 'undefined') {\n      throw new TypeError('failed to create canvas: OffscreenCanvas is not supported');\n    }\n    return new OffscreenCanvas(1, 1);\n  }\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  return canvas;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport * as DataEncoders from './texture-data-encoder';\nimport {DataEncoder, Encoder} from './texture-data-encoder';\nimport {repeatedTry} from './utils';\n\nexport interface FenceContext {\n  query: WebGLSync|null;\n  isFencePassed(): boolean;\n}\n\ntype PollItem = {\n  isDoneFn: () => boolean; resolveFn: () => void;\n};\n\nexport function linearSearchLastTrue(arr: Array<() => boolean>): number {\n  let i = 0;\n  for (; i < arr.length; ++i) {\n    const isDone = arr[i]();\n    if (!isDone) {\n      break;\n    }\n  }\n  return i - 1;\n}\n\n/**\n * Abstraction and wrapper around WebGLRenderingContext and its operations\n */\nexport class WebGLContext {\n  gl: WebGLRenderingContext;\n  version: 1|2;\n\n  private vertexbuffer: WebGLBuffer;\n  private framebuffer: WebGLFramebuffer;\n\n  // WebGL flags and vital parameters\n  private isFloatTextureAttachableToFrameBuffer: boolean;\n  isFloat32DownloadSupported: boolean;\n  isRenderFloat32Supported: boolean;\n  isBlendSupported: boolean;\n  maxTextureSize: number;\n  // private maxCombinedTextureImageUnits: number;\n  private maxTextureImageUnits: number;\n  // private maxCubeMapTextureSize: number;\n  // private shadingLanguageVersion: string;\n  // private webglVendor: string;\n  // private webglVersion: string;\n\n  // WebGL2 flags and vital parameters\n  // private max3DTextureSize: number;\n  // private maxArrayTextureLayers: number;\n  // private maxColorAttachments: number;\n  // private maxDrawBuffers: number;\n\n  // WebGL extensions\n  // eslint-disable-next-line camelcase\n  textureFloatExtension: OES_texture_float|null;\n  // eslint-disable-next-line camelcase\n  textureHalfFloatExtension: OES_texture_half_float|null;\n\n  // WebGL2 extensions\n  colorBufferFloatExtension: unknown|null;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  disjointTimerQueryWebgl2Extension: {TIME_ELAPSED_EXT: GLenum; GPU_DISJOINT_EXT: GLenum}|null;\n\n  private disposed: boolean;\n  private frameBufferBound = false;\n\n  constructor(gl: WebGLRenderingContext, version: 1|2) {\n    this.gl = gl;\n    this.version = version;\n\n    this.getExtensions();\n    this.vertexbuffer = this.createVertexbuffer();\n    this.framebuffer = this.createFramebuffer();\n    this.queryVitalParameters();\n  }\n\n  allocateTexture(width: number, height: number, encoder: DataEncoder, data?: Encoder.DataArrayType): WebGLTexture {\n    const gl = this.gl;\n    // create the texture\n    const texture = gl.createTexture();\n    // bind the texture so the following methods effect this texture.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    const buffer = data ? encoder.encode(data, width * height) : null;\n    gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,  // Level of detail.\n        encoder.internalFormat, width, height,\n        0,  // Always 0 in OpenGL ES.\n        encoder.format, encoder.textureType, buffer);\n    this.checkError();\n    return texture as WebGLTexture;\n  }\n  updateTexture(\n      texture: WebGLTexture, width: number, height: number, encoder: DataEncoder, data: Encoder.DataArrayType): void {\n    const gl = this.gl;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    const buffer = encoder.encode(data, width * height);\n    gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,  // level\n        0,  // xoffset\n        0,  // yoffset\n        width, height, encoder.format, encoder.textureType, buffer);\n    this.checkError();\n  }\n  attachFramebuffer(texture: WebGLTexture, width: number, height: number): void {\n    const gl = this.gl;\n    // Make it the target for framebuffer operations - including rendering.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    this.checkError();\n    gl.viewport(0, 0, width, height);\n    gl.scissor(0, 0, width, height);\n  }\n  readTexture(\n      texture: WebGLTexture, width: number, height: number, dataSize: number, dataType: Encoder.DataType,\n      channels: number): Encoder.DataArrayType {\n    const gl = this.gl;\n    if (!channels) {\n      channels = 1;\n    }\n    if (!this.frameBufferBound) {\n      this.attachFramebuffer(texture, width, height);\n    }\n    const encoder = this.getEncoder(dataType, channels);\n    const buffer = encoder.allocate(width * height);\n    // bind texture to framebuffer\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    // TODO: Check if framebuffer is ready\n    gl.readPixels(0, 0, width, height, gl.RGBA, encoder.textureType, buffer);\n    this.checkError();\n    // unbind FB\n    return encoder.decode(buffer, dataSize);\n  }\n\n  isFramebufferReady(): boolean {\n    // TODO: Implement logic to check if the framebuffer is ready\n    return true;\n  }\n  getActiveTexture(): string {\n    const gl = this.gl;\n    const n = gl.getParameter(this.gl.ACTIVE_TEXTURE);\n    return `TEXTURE${(n - gl.TEXTURE0)}`;\n  }\n  getTextureBinding(): WebGLTexture {\n    return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\n  }\n  getFramebufferBinding(): WebGLFramebuffer {\n    return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);\n  }\n  setVertexAttributes(positionHandle: number, textureCoordHandle: number): void {\n    const gl = this.gl;\n    gl.vertexAttribPointer(positionHandle, 3, gl.FLOAT, false, 20, 0);\n    gl.enableVertexAttribArray(positionHandle);\n    if (textureCoordHandle !== -1) {\n      gl.vertexAttribPointer(textureCoordHandle, 2, gl.FLOAT, false, 20, 12);\n      gl.enableVertexAttribArray(textureCoordHandle);\n    }\n    this.checkError();\n  }\n  createProgram(\n      vertexShader: WebGLShader,\n      fragShader: WebGLShader,\n      ): WebGLProgram {\n    const gl = this.gl;\n    const program = gl.createProgram()!;\n\n    // the program consists of our shaders\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    return program;\n  }\n  compileShader(shaderSource: string, shaderType: number): WebGLShader {\n    const gl = this.gl;\n    const shader = gl.createShader(shaderType);\n    if (!shader) {\n      throw new Error(`createShader() returned null with type ${shaderType}`);\n    }\n\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n      throw new Error(`Failed to compile shader: ${gl.getShaderInfoLog(shader)}\nShader source:\n${shaderSource}`);\n    }\n    return shader;\n  }\n  deleteShader(shader: WebGLShader): void {\n    this.gl.deleteShader(shader);\n  }\n  bindTextureToUniform(texture: WebGLTexture, position: number, uniformHandle: WebGLUniformLocation): void {\n    const gl = this.gl;\n    gl.activeTexture(gl.TEXTURE0 + position);\n    this.checkError();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    this.checkError();\n    gl.uniform1i(uniformHandle, position);\n    this.checkError();\n  }\n  draw(): void {\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n    this.checkError();\n  }\n  checkError(): void {\n    if (env.debug) {\n      const gl = this.gl;\n      const error = gl.getError();\n      let label = '';\n      switch (error) {\n        case (gl.NO_ERROR):\n          return;\n        case (gl.INVALID_ENUM):\n          label = 'INVALID_ENUM';\n          break;\n        case (gl.INVALID_VALUE):\n          label = 'INVALID_VALUE';\n          break;\n        case (gl.INVALID_OPERATION):\n          label = 'INVALID_OPERATION';\n          break;\n        case (gl.INVALID_FRAMEBUFFER_OPERATION):\n          label = 'INVALID_FRAMEBUFFER_OPERATION';\n          break;\n        case (gl.OUT_OF_MEMORY):\n          label = 'OUT_OF_MEMORY';\n          break;\n        case (gl.CONTEXT_LOST_WEBGL):\n          label = 'CONTEXT_LOST_WEBGL';\n          break;\n        default:\n          label = `Unknown WebGL Error: ${error.toString(16)}`;\n      }\n      throw new Error(label);\n    }\n  }\n  deleteTexture(texture: WebGLTexture): void {\n    this.gl.deleteTexture(texture);\n  }\n  deleteProgram(program: WebGLProgram): void {\n    this.gl.deleteProgram(program);\n  }\n  getEncoder(dataType: Encoder.DataType, channels: number, usage: Encoder.Usage = Encoder.Usage.Default): DataEncoder {\n    if (this.version === 2) {\n      return new DataEncoders.RedFloat32DataEncoder(this.gl as WebGL2RenderingContext, channels);\n    }\n\n    switch (dataType) {\n      case 'float':\n        if (usage === Encoder.Usage.UploadOnly || this.isRenderFloat32Supported) {\n          return new DataEncoders.RGBAFloatDataEncoder(this.gl, channels);\n        } else {\n          return new DataEncoders.RGBAFloatDataEncoder(\n              this.gl, channels, this.textureHalfFloatExtension!.HALF_FLOAT_OES);\n        }\n      case 'int':\n        throw new Error('not implemented');\n      case 'byte':\n        return new DataEncoders.Uint8DataEncoder(this.gl, channels);\n      default:\n        throw new Error(`Invalid dataType: ${dataType}`);\n    }\n  }\n  clearActiveTextures(): void {\n    const gl = this.gl;\n    for (let unit = 0; unit < this.maxTextureImageUnits; ++unit) {\n      gl.activeTexture(gl.TEXTURE0 + unit);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n  }\n  dispose(): void {\n    if (this.disposed) {\n      return;\n    }\n    const gl = this.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteFramebuffer(this.framebuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.deleteBuffer(this.vertexbuffer);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.finish();\n    this.disposed = true;\n  }\n\n  private createDefaultGeometry(): Float32Array {\n    // Sets of x,y,z(=0),s,t coordinates.\n    return new Float32Array([\n      -1.0, 1.0,  0.0, 0.0, 1.0,  // upper left\n      -1.0, -1.0, 0.0, 0.0, 0.0,  // lower left\n      1.0,  1.0,  0.0, 1.0, 1.0,  // upper right\n      1.0,  -1.0, 0.0, 1.0, 0.0   // lower right\n    ]);\n  }\n  private createVertexbuffer(): WebGLBuffer {\n    const gl = this.gl;\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n      throw new Error('createBuffer() returned null');\n    }\n    const geometry = this.createDefaultGeometry();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, geometry, gl.STATIC_DRAW);\n    this.checkError();\n    return buffer;\n  }\n  private createFramebuffer(): WebGLFramebuffer {\n    const fb = this.gl.createFramebuffer();\n    if (!fb) {\n      throw new Error('createFramebuffer returned null');\n    }\n    return fb;\n  }\n\n  private queryVitalParameters(): void {\n    const gl = this.gl;\n\n    this.isFloatTextureAttachableToFrameBuffer = this.checkFloatTextureAttachableToFrameBuffer();\n    this.isRenderFloat32Supported = this.checkRenderFloat32();\n    this.isFloat32DownloadSupported = this.checkFloat32Download();\n\n    if (this.version === 1 && !this.textureHalfFloatExtension && !this.isRenderFloat32Supported) {\n      throw new Error('both float32 and float16 TextureType are not supported');\n    }\n\n    this.isBlendSupported = !this.isRenderFloat32Supported || this.checkFloat32Blend();\n\n    // this.maxCombinedTextureImageUnits = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    this.maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    // this.maxCubeMapTextureSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n    // this.shadingLanguageVersion = gl.getParameter(gl.SHADING_LANGUAGE_VERSION);\n    // this.webglVendor = gl.getParameter(gl.VENDOR);\n    // this.webglVersion = gl.getParameter(gl.VERSION);\n\n    if (this.version === 2) {\n      // this.max3DTextureSize = gl.getParameter(WebGL2RenderingContext.MAX_3D_TEXTURE_SIZE);\n      // this.maxArrayTextureLayers = gl.getParameter(WebGL2RenderingContext.MAX_ARRAY_TEXTURE_LAYERS);\n      // this.maxColorAttachments = gl.getParameter(WebGL2RenderingContext.MAX_COLOR_ATTACHMENTS);\n      // this.maxDrawBuffers = gl.getParameter(WebGL2RenderingContext.MAX_DRAW_BUFFERS);\n    }\n  }\n  private getExtensions(): void {\n    if (this.version === 2) {\n      this.colorBufferFloatExtension = this.gl.getExtension('EXT_color_buffer_float');\n      this.disjointTimerQueryWebgl2Extension = this.gl.getExtension('EXT_disjoint_timer_query_webgl2');\n    } else {\n      this.textureFloatExtension = this.gl.getExtension('OES_texture_float');\n      this.textureHalfFloatExtension = this.gl.getExtension('OES_texture_half_float');\n    }\n  }\n\n  private checkFloatTextureAttachableToFrameBuffer(): boolean {\n    // test whether Float32 texture is supported:\n    // STEP.1 create a float texture\n    const gl = this.gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n    // STEP.2 bind a frame buffer\n    const frameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    // STEP.3 attach texture to framebuffer\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    // STEP.4 test whether framebuffer is complete\n    const isComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(frameBuffer);\n    return isComplete;\n  }\n\n  private checkRenderFloat32(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  private checkFloat32Download(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n      if (!this.gl.getExtension('WEBGL_color_buffer_float')) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  /**\n   * Check whether GL_BLEND is supported\n   */\n  private checkFloat32Blend(): boolean {\n    // it looks like currently (2019-05-08) there is no easy way to detect whether BLEND is supported\n    // https://github.com/microsoft/onnxjs/issues/145\n\n    const gl = this.gl;\n\n    let texture: WebGLTexture|null|undefined;\n    let frameBuffer: WebGLFramebuffer|null|undefined;\n    let vertexShader: WebGLShader|null|undefined;\n    let fragmentShader: WebGLShader|null|undefined;\n    let program: WebGLProgram|null|undefined;\n\n    try {\n      texture = gl.createTexture();\n      frameBuffer = gl.createFramebuffer();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n      gl.enable(gl.BLEND);\n\n      vertexShader = gl.createShader(gl.VERTEX_SHADER);\n      if (!vertexShader) {\n        return false;\n      }\n      gl.shaderSource(vertexShader, 'void main(){}');\n      gl.compileShader(vertexShader);\n\n      fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n      if (!fragmentShader) {\n        return false;\n      }\n      gl.shaderSource(fragmentShader, 'precision highp float;void main(){gl_FragColor=vec4(0.5);}');\n      gl.compileShader(fragmentShader);\n\n      program = gl.createProgram();\n      if (!program) {\n        return false;\n      }\n      gl.attachShader(program, vertexShader);\n      gl.attachShader(program, fragmentShader);\n      gl.linkProgram(program);\n      gl.useProgram(program);\n\n      gl.drawArrays(gl.POINTS, 0, 1);\n      return gl.getError() === gl.NO_ERROR;\n\n    } finally {\n      gl.disable(gl.BLEND);\n\n      if (program) {\n        gl.deleteProgram(program);\n      }\n      if (vertexShader) {\n        gl.deleteShader(vertexShader);\n      }\n      if (fragmentShader) {\n        gl.deleteShader(fragmentShader);\n      }\n      if (frameBuffer) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.deleteFramebuffer(frameBuffer);\n      }\n      if (texture) {\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.deleteTexture(texture);\n      }\n    }\n  }\n\n  beginTimer(): WebGLQuery {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      const query = gl2.createQuery() as WebGLQuery;\n      gl2.beginQuery(ext.TIME_ELAPSED_EXT, query);\n      return query;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported.');\n    }\n  }\n\n  endTimer() {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n      gl2.endQuery(ext.TIME_ELAPSED_EXT);\n      return;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n  }\n\n  isTimerResultAvailable(query: WebGLQuery): boolean {\n    let available = false, disjoint = false;\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\n      disjoint = gl2.getParameter(ext.GPU_DISJOINT_EXT);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n\n    return available && !disjoint;\n  }\n\n  getTimerResult(query: WebGLQuery): number {\n    let timeElapsed = 0;\n    if (this.version === 2) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      timeElapsed = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\n      gl2.deleteQuery(query);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n    // return miliseconds\n    return timeElapsed / 1000000;\n  }\n\n  async waitForQueryAndGetTime(query: WebGLQuery): Promise<number> {\n    await repeatedTry(() => this.isTimerResultAvailable(query));\n    return this.getTimerResult(query);\n  }\n\n  public async createAndWaitForFence(): Promise<void> {\n    const fenceContext = this.createFence(this.gl);\n    return this.pollFence(fenceContext);\n  }\n\n  private createFence(gl: WebGLRenderingContext): FenceContext {\n    let isFencePassed: () => boolean;\n    const gl2 = gl as WebGL2RenderingContext;\n    const query = gl2.fenceSync(gl2.SYNC_GPU_COMMANDS_COMPLETE, 0);\n    gl.flush();\n    if (query === null) {\n      isFencePassed = () => true;\n    } else {\n      isFencePassed = () => {\n        const status = gl2.clientWaitSync(query, 0, 0);\n        return status === gl2.ALREADY_SIGNALED || status === gl2.CONDITION_SATISFIED;\n      };\n    }\n    return {query, isFencePassed};\n  }\n\n  async pollFence(fenceContext: FenceContext) {\n    return new Promise<void>(resolve => {\n      void this.addItemToPoll(() => fenceContext.isFencePassed(), () => resolve());\n    });\n  }\n\n  private itemsToPoll: PollItem[] = [];\n\n  pollItems(): void {\n    // Find the last query that has finished.\n    const index = linearSearchLastTrue(this.itemsToPoll.map(x => x.isDoneFn));\n    for (let i = 0; i <= index; ++i) {\n      const {resolveFn} = this.itemsToPoll[i];\n      resolveFn();\n    }\n    this.itemsToPoll = this.itemsToPoll.slice(index + 1);\n  }\n\n  private async addItemToPoll(isDoneFn: () => boolean, resolveFn: () => void) {\n    this.itemsToPoll.push({isDoneFn, resolveFn});\n    if (this.itemsToPoll.length > 1) {\n      // We already have a running loop that polls.\n      return;\n    }\n    // Start a new loop that polls.\n    await repeatedTry(() => {\n      this.pollItems();\n      // End the loop if no more items to poll.\n      return this.itemsToPoll.length === 0;\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from './backend';\nimport {Graph} from './graph';\nimport {Logger, Profiler} from './instrument';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nclass KernelOp {\n  constructor(public op: Operator, public node: Graph.Node) {}\n}\n\nexport class ExecutionPlan {\n  constructor(private graph: Graph, ops: Operator[], private profiler: Readonly<Profiler>) {\n    this.initialize(ops);\n  }\n\n  initialize(ops: Operator[]) {\n    this.profiler.event('session', 'ExecutionPlan.initialize', () => {\n      const graphNodes = this.graph.getNodes();\n      if (graphNodes.length !== ops.length) {\n        throw new Error('The size of nodes and OPs do not match.');\n      }\n\n      this._ops = ops.map((op, i) => new KernelOp(op, graphNodes[i]));\n      this.reset();\n\n      // look for starter node(s)\n      this._starter = [];\n      this._ops.forEach((op, i) => {\n        let resolved = true;\n        for (const input of op.node.inputs) {\n          if (\n              !this._values[input]                                   // not an initialized input\n              && this.graph.getInputIndices().indexOf(input) === -1  // not model input\n          ) {\n            resolved = false;\n            break;\n          }\n        }\n        if (resolved) {\n          this._starter.push(i);\n        }\n      });\n    });\n  }\n\n  reset() {\n    this._values = this.graph.getValues().map(i => i.tensor);\n  }\n\n  async execute(sessionHandler: SessionHandler, modelInputs: Tensor[]): Promise<Tensor[]> {\n    return this.profiler.event('session', 'ExecutionPlan.execute', async () => {\n      // reset mediem result\n      this.reset();\n\n      // create inference handler\n      const inferenceHandler = sessionHandler.createInferenceHandler();\n\n      // populate inputs value\n      const graphInputs = this.graph.getInputIndices();\n      if (modelInputs.length !== graphInputs.length) {\n        throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${\n            modelInputs.length} expected: ${graphInputs.length}`);\n      }\n\n      modelInputs.forEach((input, i) => {\n        const index = graphInputs[i];\n        this._values[index] = input;\n      });\n\n      // prepare running sequence\n      const sequence: number[] = this._starter.slice(0);\n\n      // execution iterations\n      const graphValues = this.graph.getValues();\n      const graphNodes = this.graph.getNodes();\n\n      let rear = 0;\n      while (rear < sequence.length) {\n        const thisOpIndex = sequence[rear++];\n        const thisOp = this._ops[thisOpIndex];\n\n        // check input\n        const inputList = thisOp.node.inputs.map(i => this._values[i]);\n        if (inputList.indexOf(undefined) !== -1) {\n          throw new Error(`unresolved input detected: op: ${thisOp.node}`);\n        }\n\n        // run\n        const inputTensors = inputList as Tensor[];\n        Logger.verbose(\n            'ExecPlan',\n            `Runing op:${thisOp.node.name} (${\n                inputTensors.map((t, i) => `'${thisOp.node.inputs[i]}': ${t.type}[${t.dims.join(',')}]`).join(', ')})`);\n\n        const outputList = await this.profiler.event(\n            'node', thisOp.node.name, async () => thisOp.op.impl(inferenceHandler, inputTensors, thisOp.op.context));\n\n        // check output\n        if (outputList.length !== thisOp.node.outputs.length) {\n          throw new Error('the size of output does not match model definition.');\n        }\n\n        // fill value\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          if (this._values[j]) {\n            throw new Error(`output [${j}] already has value: op:${thisOp.node.name}`);\n          }\n          this._values[j] = output;\n        });\n\n        // resolve downstream nodes\n        const downstreamNodes = new Set<number>();\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          for (const currentDownstreamNodeIndex of graphValues[j].to) {\n            const currentDownstreamNode = graphNodes[currentDownstreamNodeIndex];\n            let resolved = true;\n            for (const k of currentDownstreamNode.inputs) {\n              if (!this._values[k]) {\n                resolved = false;\n                break;\n              }\n            }\n            if (resolved) {\n              downstreamNodes.add(currentDownstreamNodeIndex);\n            }\n          }\n        });\n        sequence.push(...downstreamNodes);\n      }\n\n      const output: Tensor[] = [];\n      for (let i = 0; i < this.graph.getOutputIndices().length; i++) {\n        const outputIndex = this.graph.getOutputIndices()[i];\n        const outputTensor = this._values[outputIndex];\n        if (outputTensor === undefined) {\n          throw new Error(`required output [${outputIndex}] does not have value`);\n        }\n        if (outputIndex === 0) {\n          await outputTensor.getData();\n        } else {\n          // eslint-disable-next-line no-unused-expressions\n          outputTensor.data;\n        }\n        output.push(outputTensor);\n      }\n      Logger.verbose('ExecPlan', 'disposing of inferenceHandler');\n      inferenceHandler.dispose();\n      return output;\n    });\n  }\n\n  _values: Array<Tensor|undefined>;\n  _ops: KernelOp[];\n  _starter: number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {onnx} from 'onnx-proto';\n\nimport {Attribute} from './attribute';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\nimport {LongUtil, MAX_CLIP, MIN_CLIP, ProtoUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Graph {\n  export interface Shape {\n    readonly dims: readonly number[];\n  }\n  export interface ValueType {\n    readonly tensorType: Tensor.DataType;\n    readonly shape: Shape;\n  }\n  export interface Value {\n    // the tensor data. empty for non-initialized inputs\n    readonly tensor?: Tensor;\n\n    // index to the Node where the value comes from. -1 for initializer.\n    readonly from: number;\n\n    // indices to the Nodes where the values go to.\n    readonly to: readonly number[];\n\n    // value type specification. empty for non-input values.\n    readonly type?: ValueType;\n  }\n  export interface Node {\n    // name of the node\n    readonly name: string;\n\n    // the operator type\n    readonly opType: string;\n\n    // indices to the Values where the inputs come from.\n    readonly inputs: readonly number[];\n\n    // indices to the Values where the outpus go to.\n    readonly outputs: readonly number[];\n\n    // the attributes that used by the operator\n    readonly attributes: Attribute;\n  }\n\n  /**\n   * a Transformer is an instance that allows all possible transformation operations that applied to a graph\n   */\n  export interface Transformer {\n    removeAllIdentityNodes(): void;\n    removeAllDropoutNodes(): void;\n    fuseConvActivationNodes(): void;\n    // TODO: add generic functions to manipulate the graph\n  }\n\n  // an initializer can use transformer to transform the graph\n  export interface Initializer {\n    transformGraph(transformer: Transformer): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Graph {\n  getInputIndices(): readonly number[];\n  getInputNames(): readonly string[];\n  getOutputIndices(): readonly number[];\n  getOutputNames(): readonly string[];\n  getValues(): readonly Graph.Value[];\n  getNodes(): readonly Graph.Node[];\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-redeclare\nexport const Graph = {\n  /**\n   * construct a graph from a graph protobuf type\n   */\n  from: (graphProto: onnx.IGraphProto|ortFbs.Graph, initializer?: Graph.Initializer) =>\n      new GraphImpl(graphProto, initializer),\n};\n\nclass Value implements Graph.Value {\n  constructor(valueInfo?: onnx.IValueInfoProto) {\n    this._from = undefined;\n    this._to = [];\n    this.tensor = undefined;\n    this.type = undefined;\n\n    if (valueInfo) {\n      this.type = ProtoUtil.tensorValueTypeFromProto(valueInfo.type!.tensorType!);\n    }\n  }\n\n  _from?: number;  // -1 represent from initializer\n  get from() {\n    return this._from!;\n  }\n  _to: number[];\n  get to() {\n    return this._to;\n  }\n  type?: Graph.ValueType;\n  tensor?: Tensor;\n}\n\nclass Node implements Graph.Node {\n  constructor(_nodeProto: onnx.INodeProto|ortFbs.Node, name?: string) {\n    if (_nodeProto instanceof onnx.NodeProto) {\n      this.name = _nodeProto.name;\n      this.opType = _nodeProto.opType;\n      this.attributes = new Attribute(_nodeProto.attribute);\n    } else if (_nodeProto instanceof ortFbs.Node) {\n      this.name = name ?? _nodeProto.name()!;\n      this.opType = _nodeProto.opType()!;\n      this.attributes = new Attribute(ProtoUtil.tensorAttributesFromORTFormat(_nodeProto));\n    }\n\n    this.inputs = [];\n    this.outputs = [];\n    this.executeNode = true;\n  }\n\n  name: string;\n  opType: string;\n  inputs: number[];\n  outputs: number[];\n  attributes: Attribute;\n  executeNode: boolean;\n}\n\nclass GraphImpl implements Graph, Graph.Transformer {\n  private _allData: Value[];\n\n  private _allInputIndices: number[];\n  private _allInputNames: string[];\n\n  private _allOutputIndices: number[];\n  private _allOutputNames: string[];\n\n  private _nodes: Node[];\n\n  constructor(graph: onnx.IGraphProto|ortFbs.Graph, graphInitializer?: Graph.Initializer) {\n    if (!graph) {\n      throw new TypeError('graph is empty');\n    }\n\n    // build the graph - will throw exceptions if something fatal is detected\n    this.buildGraph(graph);\n\n    // execute any transformation logic for the graph (if applicable)\n    this.transformGraph(graphInitializer);\n\n    // check for cycles and other inconsistencies - will throw exceptions if something fatal is detected\n    this.checkIsAcyclic();\n  }\n\n  getInputIndices(): readonly number[] {\n    return this._allInputIndices;\n  }\n\n  getInputNames(): readonly string[] {\n    return this._allInputNames;\n  }\n\n  getOutputIndices(): readonly number[] {\n    return this._allOutputIndices;\n  }\n\n  getOutputNames(): readonly string[] {\n    return this._allOutputNames;\n  }\n\n  getValues(): readonly Graph.Value[] {\n    return this._allData;\n  }\n\n  getNodes(): readonly Graph.Node[] {\n    return this._nodes;\n  }\n\n  private buildGraph(graph: onnx.IGraphProto|ortFbs.Graph) {\n    // build the graph - will throw exceptions if something fatal is detected\n    if (graph instanceof onnx.GraphProto) {\n      this.buildGraphFromOnnxFormat(graph);\n    } else if (graph instanceof ortFbs.Graph) {\n      this.buildGraphFromOrtFormat(graph);\n    } else {\n      throw new TypeError('Graph type is not supported.');\n    }\n  }\n  private buildGraphFromOnnxFormat(graph: onnx.IGraphProto) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    if (!graph.input) {\n      throw new Error('missing information in graph: input');\n    }\n    const inputValueNames = [];\n    for (const i of graph.input) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated input name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      inputValueNames.push(i.name!);\n    }\n\n    // scan all initializers\n    if (!graph.initializer) {\n      throw new Error('missing information in graph: initializer');\n    }\n    for (const i of graph.initializer) {\n      let index = dataIndices.get(i.name!);\n      if (index === undefined) {\n        const value = new Value();\n        value.type = {\n          shape: {dims: ProtoUtil.tensorDimsFromProto(i.dims!)},\n          tensorType: ProtoUtil.tensorDataTypeFromProto(i.dataType!)\n        };\n        index = this._allData.push(value) - 1;\n        dataIndices.set(i.name!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromProto(i);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    if (!graph.output) {\n      throw new Error('missing information in graph: output');\n    }\n    for (const i of graph.output) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated output name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(i.name!);\n    }\n\n    // scan all nodes\n    if (!graph.node) {\n      throw new Error('missing information in graph: node');\n    }\n    for (const nodeProto of graph.node) {\n      if (!nodeProto.name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          const name = `unnamed_${nodeProto.opType}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            nodeProto.name = name;\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(nodeProto.name)) {\n        throw new Error(`duplicated node name: ${nodeProto.name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto)) - 1;\n      nodesIndices.set(nodeProto.name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n      if (!nodeProto.output) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (const output of nodeProto.output) {\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType === 'Constant') {\n          if (!nodeProto.attribute || nodeProto.attribute.length !== 1 || !nodeProto.attribute[0].t) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (!nodeProto.output || nodeProto.output.length !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromProto(nodeProto.attribute[0].t);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n\n      if (!nodeProto.input) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (const input of nodeProto.input) {\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          // handle exception when opset > 9 and roi not given\n          if (input === '' && nodeProto.input.length === 3 && nodeProto.opType === 'Resize') {\n            continue;\n          }\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto.name}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n\n    return true;\n  }\n\n  private buildGraphFromOrtFormat(graph: ortFbs.Graph) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    const inputValueNames = [];\n    for (let i = 0; i < graph.inputsLength(); i++) {\n      const inputName = graph.inputs(i);\n      if (dataIndices.has(inputName)) {\n        throw new Error(`duplicated input name: ${inputName}`);\n      }\n      // Find the input typeInfo from nodeargs\n      for (let j = 0; j < graph.nodeArgsLength(); j++) {\n        if (graph.nodeArgs(j)?.name() === inputName) {\n          const value = new Value();\n          const valueType = graph.nodeArgs(j)?.type()?.valueType();\n          if (valueType !== ortFbs.TypeInfoValue.tensor_type) {\n            throw new Error('Unexpected value type for the nodeArg.');\n          }\n          const valueInfo = graph.nodeArgs(j)!.type()!.value(new ortFbs.TensorTypeAndShape())!;\n          const type = ProtoUtil.tensorDataTypeFromProto(valueInfo.elemType());\n          const shape = valueInfo.shape()!;\n          const dims = [];\n          for (let k = 0; k < shape.dimLength()!; k++) {\n            dims.push(LongUtil.longToNumber(shape.dim(k)!.value()!.dimValue()!));\n          }\n          value.type = {shape: {dims}, tensorType: type};\n          const currentIndex = this._allData.push(value) - 1;\n          dataIndices.set(inputName, currentIndex);\n          inputValueNames.push(inputName);\n        }\n      }\n    }\n    // check initializers\n    for (let i = 0; i < graph.initializersLength(); i++) {\n      const initializer = graph.initializers(i)!;\n      let index = dataIndices.get(initializer.name()!);\n      if (index === undefined) {\n        const value = new Value();\n        const dims = ProtoUtil.tensorDimsFromORTFormat(initializer);\n        const type = ProtoUtil.tensorDataTypeFromProto(initializer.dataType());\n        value.type = {shape: {dims}, tensorType: type};\n        index = this._allData.push(value) - 1;\n        dataIndices.set(initializer.name()!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromOrtTensor(initializer);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    for (let i = 0; i < graph.outputsLength(); i++) {\n      const outputName = graph.outputs(i);\n      if (dataIndices.has(outputName)) {\n        throw new Error(`duplicated output name: ${outputName}`);\n      }\n      const currentIndex = this._allData.push(new Value()) - 1;\n      dataIndices.set(outputName, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(outputName);\n    }\n\n    // scan all nodes\n    if (!graph.nodes) {\n      throw new Error('missing information in graph: node');\n    }\n    for (let i = 0; i < graph.nodesLength(); i++) {\n      const nodeProto = graph.nodes(i);\n      let name = nodeProto!.name();\n      if (!name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          name = `unnamed_${nodeProto!.opType()}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            // an unique name is found. break.\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(name)) {\n        throw new Error(`duplicated node name: ${name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto!, name)) - 1;\n      nodesIndices.set(name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i);\n      if (nodeProto == null) {\n        throw new Error(`No node exists at index ${i}`);\n      }\n      if (nodeProto?.outputsLength() === 0) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto?.outputsLength(); j++) {\n        const output = nodeProto?.outputs(j);\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType() === 'Constant') {\n          if (nodeProto.attributesLength() !== 1 || !nodeProto.attributes(0)!.t()) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (nodeProto.outputsLength() !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromOrtTensor(nodeProto.attributes(0)!.t()!);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i)!;\n\n      if (nodeProto.inputsLength() === 0) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto.inputsLength()!; j++) {\n        const input = nodeProto.inputs(j)!;\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto!.name()}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n  }\n\n  private checkIsAcyclic() {\n    // go through the graph and check for cycles or other fatal inconsistencies\n    const starters: Set<number> = new Set<number>();\n    this._allInputIndices.forEach(i => {\n      const data = this._allData[i];\n      data._to.forEach(j => {\n        starters.add(j);\n      });\n    });\n\n    // Iterative DFS to check for cycles\n    const nodesStack = Array.from(starters);\n    const nodesState = new Array<string>(this._nodes.length).fill('white');\n\n    while (nodesStack.length > 0) {\n      const nodeIndex = nodesStack.pop()!;\n      // this node has now been processed completely. Mark this node 'black' to denote this.\n      if (nodesState[nodeIndex] === 'gray') {\n        nodesState[nodeIndex] = 'black';\n      } else {\n        // this node is under processing stage. mark this node 'gray' to denote this.\n        nodesStack.push(nodeIndex);\n        nodesState[nodeIndex] = 'gray';\n\n        this._nodes[nodeIndex].outputs.forEach((outgoingEdgeIndex) => {\n          const data = this._allData[outgoingEdgeIndex];\n          if (typeof data.tensor !== 'undefined') {\n            throw new Error('node outputs should not be initialized');\n          }\n          if (data._from !== nodeIndex) {\n            throw new Error('from property of the Value object doesn\\'t match index of Node being processed');\n          }\n          data._to.forEach((downstreamNodeIndex) => {\n            // back edge found - cyclic\n            if (nodesState[downstreamNodeIndex] === 'gray') {\n              throw new Error('model graph is cyclic');\n            }\n            // tree edge found - continue processing by adding it to stack\n            else if (nodesState[downstreamNodeIndex] === 'white') {\n              nodesStack.push(downstreamNodeIndex);\n            }\n          });\n        });\n      }\n    }\n  }\n\n  private transformGraph(graphInitializer?: Graph.Initializer): void {\n    // apply common transform\n    this.removeAllIdentityNodes();\n    this.removeAllDropoutNodes();\n    this.fuseConvActivationNodes();\n    // apply initializer specific transform\n    if (graphInitializer) {\n      graphInitializer.transformGraph(this);\n    }\n\n    // finalize graph\n    this.finalizeGraph();\n  }\n\n  /**\n   * finalize the graph.\n   *\n   * this function should be called after all the transformation completed.\n   * this function removes all unnecessary nodes and values from the graph\n   */\n  finalizeGraph() {\n    let offset = 0;\n    // delete all nodes that are not being executed\n    for (let i = 0; i < this._nodes.length; i++) {\n      if (!this._nodes[i].executeNode) {\n        // delete this node and shift all subsequent nodes up\n        offset++;\n        // delete all output values\n        this._nodes[i].outputs.forEach(ind => {\n          this._allData[ind]._from = -2;\n        });\n        this._nodes.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        // update the value table\n        this._nodes[i].inputs.forEach(value => {\n          const ind = this._allData[value]._to.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allData[value]._to[ind] = i;\n          }\n        });\n        this._nodes[i].outputs.forEach(value => {\n          if (this._allData[value]._from && this._allData[value]._from! === i + offset) {\n            this._allData[value]._from! = i;\n          }\n        });\n      }\n    }\n    offset = 0;\n    // delete all values that are not being referenced\n    for (let i = 0; i < this._allData.length; i++) {\n      // if current value is neither linked to next node, nor an output value, remove it.\n      if (this._allData[i].from === -2 && this._allOutputIndices.indexOf(i + offset) === -1) {\n        offset++;\n        this._allData.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        let ind = -1;\n        // if current value is neither an input value nor an initializer, find the node it's\n        // coming from and update the corresponding node output\n        if (this._allData[i].from !== undefined && this._allData[i].from !== -1) {\n          ind = this._nodes[this._allData[i].from].outputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[this._allData[i].from].outputs[ind] = i;\n          }\n        } else {\n          // if current value is an input value, update its reference in inputIndices\n          ind = this._allInputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allInputIndices[ind] = i;\n          }\n        }\n\n        // find the node that the current value is linking to and update its input reference\n        this._allData[i].to.forEach(node => {\n          ind = this._nodes[node].inputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[node].inputs[ind] = i;\n          }\n        });\n        if (this._allData[i].to.length === 0) {\n          // if current value is a graph output, update its reference in outputIndices\n          ind = this._allOutputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allOutputIndices[ind] = i;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Delete the specifed node. Assume the node has one incoming input and the first output connected to other nodes.\n   * An input validation must be done before calling this function.\n   * @param nodeIndex The index of node to be deleted\n   */\n  private deleteNode(nodeIndex: number) {\n    const node = this._nodes[nodeIndex];\n    if (node.outputs.length > 1) {\n      for (let i = 1; i < node.outputs.length; i++) {\n        if (this._allData[node.outputs[i]].to.length > 0) {\n          throw new Error('Node deletion with more than one output connected to other nodes is not supported. ');\n        }\n      }\n    }\n\n    // this node wil not be executed\n    node.executeNode = false;\n    const inputValueIndex = node.inputs[0];\n    const outputValueIndex = node.outputs[0];\n    const nodesConsumingOutput = this._allData[outputValueIndex].to;\n\n    // remove this node from the to property of the input Value\n    const delIndex = this._allData[inputValueIndex].to.indexOf(nodeIndex);\n    // should not happen\n    if (delIndex === -1) {\n      throw new Error('The Value object doesn\\'t have the current Node in it\\'s \\'to\\' property ');\n    }\n    this._allData[inputValueIndex].to.splice(delIndex, 1);\n\n    // clear node indices consuming this output Value\n    this._allData[outputValueIndex]._to = [];\n\n    // if the output of this node is a graph output, adjust the index appropriately\n    const index = this._allOutputIndices.indexOf(outputValueIndex);\n    if (index !== -1) {\n      this._allOutputIndices[index] = inputValueIndex;\n    }\n\n    // override the inputs for nodes consuming this node's output with the input to this node\n    if (nodesConsumingOutput && nodesConsumingOutput.length > 0) {\n      for (const nodeIndex of nodesConsumingOutput) {\n        const replaceIndex = this._nodes[nodeIndex].inputs.indexOf(outputValueIndex);\n        // should not happen\n        if (replaceIndex === -1) {\n          throw new Error('The Node object doesn\\'t have the output Value in it\\'s \\'inputs\\' property ');\n        }\n        this._nodes[nodeIndex].inputs[replaceIndex] = inputValueIndex;\n        this._allData[inputValueIndex].to.push(nodeIndex);\n      }\n    }\n  }\n\n  removeAllDropoutNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Dropout' nodes so that no time is wasted in execution\n      if (node.opType === 'Dropout') {\n        // the node should have exactly 1 input and 1 or 2 outputs\n        if (node.inputs.length !== 1) {\n          throw new Error('Dropout nodes should only contain one input. ');\n        }\n        if (node.outputs.length !== 1 && node.outputs.length !== 2) {\n          throw new Error('Dropout nodes should contain either 1 or 2 output(s)');\n        }\n        // the second output should not be referenced by any other node\n        if (node.outputs.length === 2 && this._allData[node.outputs[1]]._to.length !== 0) {\n          throw new Error('Dropout nodes\\'s second output should not be referenced by other nodes');\n        }\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  removeAllIdentityNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Identity' nodes so that no time is wasted in execution\n      if (node.opType === 'Identity') {\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  isActivation(n: Node): boolean {\n    switch (n.opType) {\n      // TODO: add other activation methods\n      case 'Relu':\n      case 'Sigmoid':\n      case 'Clip':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  fuseConvActivationNodes() {\n    for (const node of this._nodes) {\n      if (node.opType === 'Conv') {\n        const next = this._allData[node.outputs[0]]._to;\n        if (next.length === 1 && this.isActivation(this._nodes[next[0]])) {\n          const child = this._nodes[next[0]];\n          if (child.opType === 'Clip') {\n            if (child.inputs.length === 1) {\n              try {\n                node.attributes.set(\n                    'activation_params', 'floats',\n                    [child.attributes.getFloat('min'), child.attributes.getFloat('max')]);\n              } catch (e) {\n                node.attributes.set('activation_params', 'floats', [MIN_CLIP, MAX_CLIP]);\n              }\n            } else if (\n                child.inputs.length >= 3 && this._allData[child.inputs[1]].tensor !== undefined &&\n                this._allData[child.inputs[2]].tensor !== undefined) {\n              node.attributes.set('activation_params', 'floats', [\n                this._allData[child.inputs[1]].tensor!.floatData[0], this._allData[child.inputs[2]].tensor!.floatData[0]\n              ]);\n            } else {\n              // Skip fusion with clip node since clip min and clip max are not coming from initializer\n              continue;\n            }\n          }\n          node.attributes.set('activation', 'string', (child.opType));\n          this.deleteNode(next[0]);\n        }\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {WebGLContext} from './backends/webgl/webgl-context';\n\nexport declare namespace Logger {\n  export interface SeverityTypeMap {\n    verbose: 'v';\n    info: 'i';\n    warning: 'w';\n    error: 'e';\n    fatal: 'f';\n  }\n\n  export type Severity = keyof SeverityTypeMap;\n\n  export type Provider = 'none'|'console';\n\n  /**\n   * Logging config that used to control the behavior of logger\n   */\n  export interface Config {\n    /**\n     * Specify the logging provider. 'console' by default\n     */\n    provider?: Provider;\n    /**\n     * Specify the minimal logger serverity. 'warning' by default\n     */\n    minimalSeverity?: Logger.Severity;\n    /**\n     * Whether to output date time in log. true by default\n     */\n    logDateTime?: boolean;\n    /**\n     * Whether to output source information (Not yet supported). false by default\n     */\n    logSourceLocation?: boolean;\n  }\n\n  export interface CategorizedLogger {\n    verbose(content: string): void;\n    info(content: string): void;\n    warning(content: string): void;\n    error(content: string): void;\n    fatal(content: string): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Logger {\n  (category: string): Logger.CategorizedLogger;\n\n  verbose(content: string): void;\n  verbose(category: string, content: string): void;\n  info(content: string): void;\n  info(category: string, content: string): void;\n  warning(content: string): void;\n  warning(category: string, content: string): void;\n  error(content: string): void;\n  error(category: string, content: string): void;\n  fatal(content: string): void;\n  fatal(category: string, content: string): void;\n\n  /**\n   * Reset the logger configuration.\n   * @param config specify an optional default config\n   */\n  reset(config?: Logger.Config): void;\n  /**\n   * Set the logger's behavior on the given category\n   * @param category specify a category string. If '*' is specified, all previous configuration will be overwritten. If\n   * '' is specified, the default behavior will be updated.\n   * @param config the config object to indicate the logger's behavior\n   */\n  set(category: string, config: Logger.Config): void;\n\n  /**\n   * Set the logger's behavior from ort-common env\n   * @param env the env used to set logger. Currently only setting loglevel is supported through Env.\n   */\n  setWithEnv(env: Env): void;\n}\n\ninterface LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string): void;\n}\nclass NoOpLoggerProvider implements LoggerProvider {\n  log(_severity: Logger.Severity, _content: string, _category?: string) {\n    // do nothing\n  }\n}\nclass ConsoleLoggerProvider implements LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string) {\n    // eslint-disable-next-line no-console\n    console.log(`${this.color(severity)} ${category ? '\\x1b[35m' + category + '\\x1b[0m ' : ''}${content}`);\n  }\n\n  private color(severity: Logger.Severity) {\n    switch (severity) {\n      case 'verbose':\n        return '\\x1b[34;40mv\\x1b[0m';\n      case 'info':\n        return '\\x1b[32mi\\x1b[0m';\n      case 'warning':\n        return '\\x1b[30;43mw\\x1b[0m';\n      case 'error':\n        return '\\x1b[31;40me\\x1b[0m';\n      case 'fatal':\n        return '\\x1b[101mf\\x1b[0m';\n      default:\n        throw new Error(`unsupported severity: ${severity}`);\n    }\n  }\n}\n\nconst SEVERITY_VALUE = {\n  verbose: 1000,\n  info: 2000,\n  warning: 4000,\n  error: 5000,\n  fatal: 6000\n};\n\nconst LOGGER_PROVIDER_MAP: {readonly [provider: string]: Readonly<LoggerProvider>} = {\n  ['none']: new NoOpLoggerProvider(),\n  ['console']: new ConsoleLoggerProvider()\n};\nconst LOGGER_DEFAULT_CONFIG = {\n  provider: 'console',\n  minimalSeverity: 'warning',\n  logDateTime: true,\n  logSourceLocation: false\n};\nlet LOGGER_CONFIG_MAP:\n    {[category: string]: Readonly<Required<Logger.Config>>} = {['']: LOGGER_DEFAULT_CONFIG as Required<Logger.Config>};\n\nfunction log(category: string): Logger.CategorizedLogger;\nfunction log(severity: Logger.Severity, content: string): void;\nfunction log(severity: Logger.Severity, category: string, content: string): void;\nfunction log(severity: Logger.Severity, arg1: string, arg2?: string): void;\nfunction log(\n    arg0: string|Logger.Severity, arg1?: string, arg2?: string|number, arg3?: number): Logger.CategorizedLogger|void {\n  if (arg1 === undefined) {\n    // log(category: string): Logger.CategorizedLogger;\n    return createCategorizedLogger(arg0);\n  } else if (arg2 === undefined) {\n    // log(severity, content);\n    logInternal(arg0 as Logger.Severity, arg1, 1);\n  } else if (typeof arg2 === 'number' && arg3 === undefined) {\n    // log(severity, content, stack)\n    logInternal(arg0 as Logger.Severity, arg1, arg2);\n  } else if (typeof arg2 === 'string' && arg3 === undefined) {\n    // log(severity, category, content)\n    logInternal(arg0 as Logger.Severity, arg2, 1, arg1);\n  } else if (typeof arg2 === 'string' && typeof arg3 === 'number') {\n    // log(severity, category, content, stack)\n    logInternal(arg0 as Logger.Severity, arg2, arg3, arg1);\n  } else {\n    throw new TypeError('input is valid');\n  }\n}\n\nfunction createCategorizedLogger(category: string): Logger.CategorizedLogger {\n  return {\n    verbose: log.verbose.bind(null, category),\n    info: log.info.bind(null, category),\n    warning: log.warning.bind(null, category),\n    error: log.error.bind(null, category),\n    fatal: log.fatal.bind(null, category)\n  };\n}\n\n// NOTE: argument 'category' is put the last parameter beacause typescript\n// doesn't allow optional argument put in front of required argument. This\n// order is different from a usual logging API.\nfunction logInternal(severity: Logger.Severity, content: string, stack: number, category?: string) {\n  const config = LOGGER_CONFIG_MAP[category || ''] || LOGGER_CONFIG_MAP[''];\n  if (SEVERITY_VALUE[severity] < SEVERITY_VALUE[config.minimalSeverity]) {\n    return;\n  }\n\n  if (config.logDateTime) {\n    content = `${new Date().toISOString()}|${content}`;\n  }\n\n  if (config.logSourceLocation) {\n    // TODO: calculate source location from 'stack'\n  }\n\n  LOGGER_PROVIDER_MAP[config.provider].log(severity, content, category);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace log {\n  export function verbose(content: string): void;\n  export function verbose(category: string, content: string): void;\n  export function verbose(arg0: string, arg1?: string) {\n    log('verbose', arg0, arg1);\n  }\n  export function info(content: string): void;\n  export function info(category: string, content: string): void;\n  export function info(arg0: string, arg1?: string) {\n    log('info', arg0, arg1);\n  }\n  export function warning(content: string): void;\n  export function warning(category: string, content: string): void;\n  export function warning(arg0: string, arg1?: string) {\n    log('warning', arg0, arg1);\n  }\n  export function error(content: string): void;\n  export function error(category: string, content: string): void;\n  export function error(arg0: string, arg1?: string) {\n    log('error', arg0, arg1);\n  }\n  export function fatal(content: string): void;\n  export function fatal(category: string, content: string): void;\n  export function fatal(arg0: string, arg1?: string) {\n    log('fatal', arg0, arg1);\n  }\n\n  export function reset(config?: Logger.Config): void {\n    LOGGER_CONFIG_MAP = {};\n    set('', config || {});\n  }\n  export function set(category: string, config: Logger.Config): void {\n    if (category === '*') {\n      reset(config);\n    } else {\n      const previousConfig = LOGGER_CONFIG_MAP[category] || LOGGER_DEFAULT_CONFIG;\n      LOGGER_CONFIG_MAP[category] = {\n        provider: config.provider || previousConfig.provider,\n        minimalSeverity: config.minimalSeverity || previousConfig.minimalSeverity,\n        logDateTime: (config.logDateTime === undefined) ? previousConfig.logDateTime : config.logDateTime,\n        logSourceLocation: (config.logSourceLocation === undefined) ? previousConfig.logSourceLocation :\n                                                                      config.logSourceLocation\n      };\n    }\n\n    // TODO: we want to support wildcard or regex?\n  }\n\n  export function setWithEnv(env: Env): void {\n    const config: Logger.Config = {};\n    if (env.logLevel) {\n      config.minimalSeverity = env.logLevel as Logger.Severity;\n    }\n    set('', config);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare, @typescript-eslint/naming-convention\nexport const Logger: Logger = log;\n\nexport declare namespace Profiler {\n  export interface Config {\n    maxNumberEvents?: number;\n    flushBatchSize?: number;\n    flushIntervalInMilliseconds?: number;\n  }\n\n  export type EventCategory = 'session'|'node'|'op'|'backend';\n\n  export interface Event {\n    end(): void|Promise<void>;\n  }\n}\n// TODO\n// class WebGLEvent implements Profiler.Event {}\n\nclass Event implements Profiler.Event {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number,\n      private endCallback: (e: Event) => void|Promise<void>, public timer?: WebGLQuery, public ctx?: WebGLContext) {}\n\n  end() {\n    return this.endCallback(this);\n  }\n\n  async checkTimer(): Promise<number> {\n    if (this.ctx === undefined || this.timer === undefined) {\n      throw new Error('No webgl timer found');\n    } else {\n      this.ctx.endTimer();\n      return this.ctx.waitForQueryAndGetTime(this.timer);\n    }\n  }\n}\n\nclass EventRecord {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number, public endTime: number) {}\n}\n\nexport class Profiler {\n  static create(config?: Profiler.Config): Profiler {\n    if (config === undefined) {\n      return new this();\n    }\n    return new this(config.maxNumberEvents, config.flushBatchSize, config.flushIntervalInMilliseconds);\n  }\n\n  private constructor(maxNumberEvents?: number, flushBatchSize?: number, flushIntervalInMilliseconds?: number) {\n    this._started = false;\n    this._maxNumberEvents = maxNumberEvents === undefined ? 10000 : maxNumberEvents;\n    this._flushBatchSize = flushBatchSize === undefined ? 10 : flushBatchSize;\n    this._flushIntervalInMilliseconds = flushIntervalInMilliseconds === undefined ? 5000 : flushIntervalInMilliseconds;\n  }\n\n  // start profiling\n  start() {\n    this._started = true;\n    this._timingEvents = [];\n    this._flushTime = now();\n    this._flushPointer = 0;\n  }\n\n  // stop profiling\n  stop() {\n    this._started = false;\n    for (; this._flushPointer < this._timingEvents.length; this._flushPointer++) {\n      this.logOneEvent(this._timingEvents[this._flushPointer]);\n    }\n  }\n\n  // create an event scope for the specific function\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T, ctx?: WebGLContext): T;\n  event<T>(category: Profiler.EventCategory, name: string, func: () => Promise<T>, ctx?: WebGLContext): Promise<T>;\n\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T | Promise<T>, ctx?: WebGLContext): T\n      |Promise<T> {\n    const event = this._started ? this.begin(category, name, ctx) : undefined;\n    let isPromise = false;\n\n    const res = func();\n\n    // we consider a then-able object is a promise\n    if (res && typeof (res as Promise<T>).then === 'function') {\n      isPromise = true;\n      return new Promise<T>((resolve, reject) => {\n        (res as Promise<T>)\n            .then(\n                async value => {  // fulfilled\n                  if (event) {\n                    await event.end();\n                  }\n                  resolve(value);\n                },\n                async reason => {  // rejected\n                  if (event) {\n                    await event.end();\n                  }\n                  reject(reason);\n                });\n      });\n    }\n    if (!isPromise && event) {\n      const eventRes = event.end();\n      if (eventRes && typeof eventRes.then === 'function') {\n        return new Promise<T>((resolve, reject) => {\n          (eventRes).then(\n              () => {  // fulfilled\n                resolve(res);\n              },\n              (reason) => {  // rejected\n                reject(reason);\n              });\n        });\n      }\n    }\n    return res;\n  }\n\n  // begin an event\n  begin(category: Profiler.EventCategory, name: string, ctx?: WebGLContext): Event {\n    if (!this._started) {\n      throw new Error('profiler is not started yet');\n    }\n    if (ctx === undefined) {\n      const startTime = now();\n      this.flush(startTime);\n      return new Event(category, name, startTime, e => this.endSync(e));\n    } else {\n      const timer: WebGLQuery = ctx.beginTimer();\n      return new Event(category, name, 0, async e => this.end(e), timer, ctx);\n    }\n  }\n\n  // end the specific event\n  private async end(event: Event): Promise<void> {\n    const endTime: number = await event.checkTimer();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private endSync(event: Event): void {\n    const endTime: number = now();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private logOneEvent(event: EventRecord) {\n    Logger.verbose(\n        `Profiler.${event.category}`,\n        `${(event.endTime - event.startTime).toFixed(2)}ms on event '${event.name}' at ${event.endTime.toFixed(2)}`);\n  }\n\n  private flush(currentTime: number) {\n    if (this._timingEvents.length - this._flushPointer >= this._flushBatchSize ||\n        currentTime - this._flushTime >= this._flushIntervalInMilliseconds) {\n      // should flush when either batch size accumlated or interval elepsed\n\n      for (const previousPointer = this._flushPointer; this._flushPointer < previousPointer + this._flushBatchSize &&\n           this._flushPointer < this._timingEvents.length;\n           this._flushPointer++) {\n        this.logOneEvent(this._timingEvents[this._flushPointer]);\n      }\n\n      this._flushTime = now();\n    }\n  }\n\n  get started() {\n    return this._started;\n  }\n  private _started = false;\n  private _timingEvents: EventRecord[];\n\n  private readonly _maxNumberEvents: number;\n\n  private readonly _flushBatchSize: number;\n  private readonly _flushIntervalInMilliseconds: number;\n\n  private _flushTime: number;\n  private _flushPointer = 0;\n}\n\n/**\n * returns a number to represent the current timestamp in a resolution as high as possible.\n */\nexport const now = (typeof performance !== 'undefined' && performance.now) ? () => performance.now() : Date.now;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {OpSet} from './opset';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {LongUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport class Model {\n  // empty model\n  constructor() {}\n\n  load(buf: Uint8Array, graphInitializer?: Graph.Initializer, isOrtFormat?: boolean): void {\n    if (!isOrtFormat) {\n      // isOrtFormat === false || isOrtFormat === undefined\n      try {\n        this.loadFromOnnxFormat(buf, graphInitializer);\n        return;\n      } catch (e) {\n        if (isOrtFormat !== undefined) {\n          throw e;\n        }\n      }\n    }\n\n    this.loadFromOrtFormat(buf, graphInitializer);\n  }\n\n  private loadFromOnnxFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const modelProto = onnx.ModelProto.decode(buf);\n    const irVersion = LongUtil.longToNumber(modelProto.irVersion);\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n\n    this._opsets =\n        modelProto.opsetImport.map(i => ({domain: i.domain as string, version: LongUtil.longToNumber(i.version!)}));\n\n    this._graph = Graph.from(modelProto.graph!, graphInitializer);\n  }\n\n  private loadFromOrtFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const fb = new flatbuffers.ByteBuffer(buf);\n    const ortModel = ortFbs.InferenceSession.getRootAsInferenceSession(fb).model()!;\n    const irVersion = LongUtil.longToNumber(ortModel.irVersion());\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n    this._opsets = [];\n    for (let i = 0; i < ortModel.opsetImportLength(); i++) {\n      const opsetId = ortModel.opsetImport(i)!;\n      this._opsets.push({domain: opsetId?.domain() as string, version: LongUtil.longToNumber(opsetId.version()!)});\n    }\n\n    this._graph = Graph.from(ortModel.graph()!, graphInitializer);\n  }\n\n  private _graph: Graph;\n  get graph(): Graph {\n    return this._graph;\n  }\n\n  private _opsets: OpSet[];\n  get opsets(): readonly OpSet[] {\n    return this._opsets;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from './backend';\nimport {Graph} from './graph';\nimport {Tensor} from './tensor';\n\nexport type OperatorImplementation<T> = (inferenceHandler: InferenceHandler, inputs: Tensor[], context: T) => Tensor[];\nexport type OperatorInitialization<T> = (node: Graph.Node, graph: Graph) => T;\n\nexport interface Operator {\n  readonly impl: OperatorImplementation<unknown>;\n  readonly context: Graph.Node|unknown;\n}\n\nexport const NUMBER_TYPES: readonly Tensor.DataType[] =\n    ['float32', 'float64', 'int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const INT_TYPES: readonly Tensor.DataType[] = ['int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const FLOAT_TYPES: readonly Tensor.DataType[] = ['float32', 'float64'];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from './graph';\nimport {OperatorImplementation, OperatorInitialization} from './operators';\n\nexport interface OpSet {\n  domain: string;\n  version: number;\n}\n\nexport declare namespace OpSet {\n  /**\n   * Domain of an opset, it can be an empty string(default value, represent for ai.onnx), or 'ai.onnx.ml'\n   */\n  type Domain = ''|'ai.onnx.ml'|'com.microsoft';\n\n  /**\n   * A resolve rule consists of 4 or 5 items: opType, opSetDomain, versionSelector, operatorImplementation and\n   * operatorInitialization (optional)\n   */\n  type ResolveRule = [\n    string, Domain, string, OperatorImplementation<Graph.Node>\n  ]|[string, Domain, string, OperatorImplementation<unknown>, OperatorInitialization<unknown>];\n}\n\nexport function resolveOperator(node: Graph.Node, opsets: readonly OpSet[], rules: readonly OpSet.ResolveRule[]) {\n  for (const rule of rules) {\n    const opType = rule[0];\n    const domain = rule[1];\n    const versionSelector = rule[2];\n    const opImpl = rule[3];\n    const opInit = rule[4];\n\n    if (node.opType === opType) {  // operator type matches\n      for (const opset of opsets) {\n        // opset '' and 'ai.onnx' are considered the same.\n        if (opset.domain === domain || (opset.domain === 'ai.onnx' && domain === '')) {  // opset domain found\n          if (matchSelector(opset.version, versionSelector)) {\n            return {opImpl, opInit};\n          }\n        }\n      }\n    }\n  }\n\n  throw new TypeError(`cannot resolve operator '${node.opType}' with opsets: ${\n      opsets.map(set => `${set.domain || 'ai.onnx'} v${set.version}`).join(', ')}`);\n}\n\nfunction matchSelector(version: number, selector: string): boolean {\n  if (selector.endsWith('+')) {\n    // minimum version match ('7+' expects version>=7)\n    const rangeStart = Number.parseInt(selector.substring(0, selector.length - 1), 10);\n    return !isNaN(rangeStart) && rangeStart <= version;\n  } else if (selector.split('-').length === 2) {\n    // range match ('6-8' expects 6<=version<=8)\n    const pair = selector.split('-');\n    const rangeStart = Number.parseInt(pair[0], 10);\n    const rangeEnd = Number.parseInt(pair[1], 10);\n    return !isNaN(rangeStart) && !isNaN(rangeEnd) && rangeStart <= version && version <= rangeEnd;\n  } else {\n    // exact match ('7' expects version===7)\n    return Number.parseInt(selector, 10) === version;\n  }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n/* eslint-disable */\n\nimport {flatbuffers} from 'flatbuffers';\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum AttributeType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    INT = 2,\n    STRING = 3,\n    TENSOR = 4,\n    GRAPH = 5,\n    FLOATS = 6,\n    INTS = 7,\n    STRINGS = 8,\n    TENSORS = 9,\n    GRAPHS = 10,\n    SPARSE_TENSOR = 11,\n    SPARSE_TENSORS = 12\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum DimensionValueType {UNKNOWN = 0, VALUE = 1, PARAM = 2}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TensorDataType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    UINT8 = 2,\n    INT8 = 3,\n    UINT16 = 4,\n    INT16 = 5,\n    INT32 = 6,\n    INT64 = 7,\n    STRING = 8,\n    BOOL = 9,\n    FLOAT16 = 10,\n    DOUBLE = 11,\n    UINT32 = 12,\n    UINT64 = 13,\n    COMPLEX64 = 14,\n    COMPLEX128 = 15,\n    BFLOAT16 = 16\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum NodeType {Primitive = 0, Fused = 1}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TypeInfoValue {NONE = 0, tensor_type = 1, sequence_type = 2, map_type = 3}\n}\n\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Shape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Shape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Shape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getSizePrefixedRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Dimension= obj\n     * @returns onnxruntime.experimental.fbs.Dimension\n     */\n    dim(index: number, obj?: onnxruntime.experimental.fbs.Dimension): onnxruntime.experimental.fbs.Dimension|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Dimension())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    dimLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startShape(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimOffset\n     */\n    static addDim(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, dimOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createShape(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Shape.startShape(builder);\n      Shape.addDim(builder, dimOffset);\n      return Shape.endShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Dimension {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Dimension\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Dimension {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getSizePrefixedRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.DimensionValue= obj\n     * @returns onnxruntime.experimental.fbs.DimensionValue|null\n     */\n    value(obj?: onnxruntime.experimental.fbs.DimensionValue): onnxruntime.experimental.fbs.DimensionValue|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.DimensionValue())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimension(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimension(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimension(\n        builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset,\n        denotationOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Dimension.startDimension(builder);\n      Dimension.addValue(builder, valueOffset);\n      Dimension.addDenotation(builder, denotationOffset);\n      return Dimension.endDimension(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class DimensionValue {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns DimensionValue\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): DimensionValue {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getSizePrefixedRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.DimensionValueType\n     */\n    dimType(): onnxruntime.experimental.fbs.DimensionValueType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    dimValue(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    dimParam(): string|null;\n    dimParam(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    dimParam(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimensionValue(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.DimensionValueType dimType\n     */\n    static addDimType(builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType) {\n      builder.addFieldInt8(0, dimType, onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long dimValue\n     */\n    static addDimValue(builder: flatbuffers.Builder, dimValue: flatbuffers.Long) {\n      builder.addFieldInt64(1, dimValue, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimParamOffset\n     */\n    static addDimParam(builder: flatbuffers.Builder, dimParamOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimParamOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimensionValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimensionValue(\n        builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType,\n        dimValue: flatbuffers.Long, dimParamOffset: flatbuffers.Offset): flatbuffers.Offset {\n      DimensionValue.startDimensionValue(builder);\n      DimensionValue.addDimType(builder, dimType);\n      DimensionValue.addDimValue(builder, dimValue);\n      DimensionValue.addDimParam(builder, dimParamOffset);\n      return DimensionValue.endDimensionValue(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TensorTypeAndShape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TensorTypeAndShape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TensorTypeAndShape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape): TensorTypeAndShape {\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getSizePrefixedRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape):\n        TensorTypeAndShape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    elemType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Shape= obj\n     * @returns onnxruntime.experimental.fbs.Shape|null\n     */\n    shape(obj?: onnxruntime.experimental.fbs.Shape): onnxruntime.experimental.fbs.Shape|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Shape())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensorTypeAndShape(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType elemType\n     */\n    static addElemType(builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, elemType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset shapeOffset\n     */\n    static addShape(builder: flatbuffers.Builder, shapeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, shapeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensorTypeAndShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensorTypeAndShape(\n        builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType,\n        shapeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TensorTypeAndShape.startTensorTypeAndShape(builder);\n      TensorTypeAndShape.addElemType(builder, elemType);\n      TensorTypeAndShape.addShape(builder, shapeOffset);\n      return TensorTypeAndShape.endTensorTypeAndShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class MapType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns MapType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): MapType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getSizePrefixedRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    keyType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    valueType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startMapType(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType keyType\n     */\n    static addKeyType(builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, keyType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueTypeOffset\n     */\n    static addValueType(builder: flatbuffers.Builder, valueTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, valueTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endMapType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createMapType(\n        builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType,\n        valueTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      MapType.startMapType(builder);\n      MapType.addKeyType(builder, keyType);\n      MapType.addValueType(builder, valueTypeOffset);\n      return MapType.endMapType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SequenceType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SequenceType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SequenceType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getSizePrefixedRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    elemType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSequenceType(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset elemTypeOffset\n     */\n    static addElemType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, elemTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSequenceType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSequenceType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SequenceType.startSequenceType(builder);\n      SequenceType.addElemType(builder, elemTypeOffset);\n      return SequenceType.endSequenceType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class EdgeEnd {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns EdgeEnd\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): EdgeEnd {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      return this.bb!.readUint32(this.bb_pos);\n    }\n\n    /**\n     * @returns number\n     */\n    srcArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 4);\n    }\n\n    /**\n     * @returns number\n     */\n    dstArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number node_index\n     * @param number src_arg_index\n     * @param number dst_arg_index\n     * @returns flatbuffers.Offset\n     */\n    static createEdgeEnd(\n        builder: flatbuffers.Builder, node_index: number, src_arg_index: number,\n        dst_arg_index: number): flatbuffers.Offset {\n      builder.prep(4, 12);\n      builder.writeInt32(dst_arg_index);\n      builder.writeInt32(src_arg_index);\n      builder.writeInt32(node_index);\n      return builder.offset();\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class NodeEdge {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns NodeEdge\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): NodeEdge {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getSizePrefixedRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    inputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    outputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNodeEdge(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number nodeIndex\n     */\n    static addNodeIndex(builder: flatbuffers.Builder, nodeIndex: number) {\n      builder.addFieldInt32(0, nodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputEdgesOffset\n     */\n    static addInputEdges(builder: flatbuffers.Builder, inputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, inputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputEdgesOffset\n     */\n    static addOutputEdges(builder: flatbuffers.Builder, outputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, outputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNodeEdge(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNodeEdge(\n        builder: flatbuffers.Builder, nodeIndex: number, inputEdgesOffset: flatbuffers.Offset,\n        outputEdgesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      NodeEdge.startNodeEdge(builder);\n      NodeEdge.addNodeIndex(builder, nodeIndex);\n      NodeEdge.addInputEdges(builder, inputEdgesOffset);\n      NodeEdge.addOutputEdges(builder, outputEdgesOffset);\n      return NodeEdge.endNodeEdge(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Node {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Node\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Node {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getSizePrefixedRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    sinceVersion(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    index(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    opType(): string|null;\n    opType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    opType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.NodeType\n     */\n    type(): onnxruntime.experimental.fbs.NodeType {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.NodeType.Primitive;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    executionProviderType(): string|null;\n    executionProviderType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    executionProviderType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Attribute= obj\n     * @returns onnxruntime.experimental.fbs.Attribute\n     */\n    attributes(index: number, obj?: onnxruntime.experimental.fbs.Attribute): onnxruntime.experimental.fbs.Attribute\n        |null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Attribute())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    attributesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    inputArgCounts(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    inputArgCountsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Int32Array\n     */\n    inputArgCountsArray(): Int32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ?\n          new Int32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    implicitInputs(index: number): string;\n    implicitInputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    implicitInputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    implicitInputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNode(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number sinceVersion\n     */\n    static addSinceVersion(builder: flatbuffers.Builder, sinceVersion: number) {\n      builder.addFieldInt32(3, sinceVersion, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number index\n     */\n    static addIndex(builder: flatbuffers.Builder, index: number) {\n      builder.addFieldInt32(4, index, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opTypeOffset\n     */\n    static addOpType(builder: flatbuffers.Builder, opTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, opTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.NodeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.NodeType) {\n      builder.addFieldInt32(6, type, onnxruntime.experimental.fbs.NodeType.Primitive);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset executionProviderTypeOffset\n     */\n    static addExecutionProviderType(builder: flatbuffers.Builder, executionProviderTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, executionProviderTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset attributesOffset\n     */\n    static addAttributes(builder: flatbuffers.Builder, attributesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, attributesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createAttributesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startAttributesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputArgCountsOffset\n     */\n    static addInputArgCounts(builder: flatbuffers.Builder, inputArgCountsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, inputArgCountsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputArgCountsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputArgCountsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset implicitInputsOffset\n     */\n    static addImplicitInputs(builder: flatbuffers.Builder, implicitInputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, implicitInputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createImplicitInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startImplicitInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNode(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNode(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, sinceVersion: number, index: number, opTypeOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.NodeType, executionProviderTypeOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset, attributesOffset: flatbuffers.Offset,\n        inputArgCountsOffset: flatbuffers.Offset, implicitInputsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Node.startNode(builder);\n      Node.addName(builder, nameOffset);\n      Node.addDocString(builder, docStringOffset);\n      Node.addDomain(builder, domainOffset);\n      Node.addSinceVersion(builder, sinceVersion);\n      Node.addIndex(builder, index);\n      Node.addOpType(builder, opTypeOffset);\n      Node.addType(builder, type);\n      Node.addExecutionProviderType(builder, executionProviderTypeOffset);\n      Node.addInputs(builder, inputsOffset);\n      Node.addOutputs(builder, outputsOffset);\n      Node.addAttributes(builder, attributesOffset);\n      Node.addInputArgCounts(builder, inputArgCountsOffset);\n      Node.addImplicitInputs(builder, implicitInputsOffset);\n      return Node.endNode(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class ValueInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns ValueInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): ValueInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getSizePrefixedRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    type(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startValueInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset typeOffset\n     */\n    static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, typeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endValueInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createValueInfo(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        typeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      ValueInfo.startValueInfo(builder);\n      ValueInfo.addName(builder, nameOffset);\n      ValueInfo.addDocString(builder, docStringOffset);\n      ValueInfo.addType(builder, typeOffset);\n      return ValueInfo.endValueInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TypeInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TypeInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TypeInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getSizePrefixedRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TypeInfoValue\n     */\n    valueType(): onnxruntime.experimental.fbs.TypeInfoValue {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TypeInfoValue.NONE;\n    }\n\n    /**\n     * @param flatbuffers.Table obj\n     * @returns ?flatbuffers.Table\n     */\n    value<T extends flatbuffers.Table>(obj: T): T|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTypeInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TypeInfoValue valueType\n     */\n    static addValueType(builder: flatbuffers.Builder, valueType: onnxruntime.experimental.fbs.TypeInfoValue) {\n      builder.addFieldInt8(1, valueType, onnxruntime.experimental.fbs.TypeInfoValue.NONE);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTypeInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTypeInfo(\n        builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset,\n        valueType: onnxruntime.experimental.fbs.TypeInfoValue, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TypeInfo.startTypeInfo(builder);\n      TypeInfo.addDenotation(builder, denotationOffset);\n      TypeInfo.addValueType(builder, valueType);\n      TypeInfo.addValue(builder, valueOffset);\n      return TypeInfo.endTypeInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class OperatorSetId {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns OperatorSetId\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): OperatorSetId {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getSizePrefixedRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    version(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startOperatorSetId(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long version\n     */\n    static addVersion(builder: flatbuffers.Builder, version: flatbuffers.Long) {\n      builder.addFieldInt64(1, version, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endOperatorSetId(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createOperatorSetId(\n        builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset, version: flatbuffers.Long): flatbuffers.Offset {\n      OperatorSetId.startOperatorSetId(builder);\n      OperatorSetId.addDomain(builder, domainOffset);\n      OperatorSetId.addVersion(builder, version);\n      return OperatorSetId.endOperatorSetId(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Tensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Tensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Tensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getSizePrefixedRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    dataType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    rawData(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    rawDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint8Array\n     */\n    rawDataArray(): Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ?\n          new Uint8Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    stringData(index: number): string;\n    stringData(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    stringData(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensor(builder: flatbuffers.Builder) {\n      builder.startObject(6);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType dataType\n     */\n    static addDataType(builder: flatbuffers.Builder, dataType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(3, dataType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset rawDataOffset\n     */\n    static addRawData(builder: flatbuffers.Builder, rawDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, rawDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createRawDataVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(1, data.length, 1);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt8(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startRawDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(1, numElems, 1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringDataOffset\n     */\n    static addStringData(builder: flatbuffers.Builder, stringDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, stringDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringDataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensor(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset, dataType: onnxruntime.experimental.fbs.TensorDataType,\n        rawDataOffset: flatbuffers.Offset, stringDataOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Tensor.startTensor(builder);\n      Tensor.addName(builder, nameOffset);\n      Tensor.addDocString(builder, docStringOffset);\n      Tensor.addDims(builder, dimsOffset);\n      Tensor.addDataType(builder, dataType);\n      Tensor.addRawData(builder, rawDataOffset);\n      Tensor.addStringData(builder, stringDataOffset);\n      return Tensor.endTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SparseTensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SparseTensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SparseTensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getSizePrefixedRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    values(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    indices(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSparseTensor(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valuesOffset\n     */\n    static addValues(builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valuesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset indicesOffset\n     */\n    static addIndices(builder: flatbuffers.Builder, indicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, indicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSparseTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSparseTensor(\n        builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset, indicesOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SparseTensor.startSparseTensor(builder);\n      SparseTensor.addValues(builder, valuesOffset);\n      SparseTensor.addIndices(builder, indicesOffset);\n      SparseTensor.addDims(builder, dimsOffset);\n      return SparseTensor.endSparseTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Attribute {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Attribute\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Attribute {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getSizePrefixedRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.AttributeType\n     */\n    type(): onnxruntime.experimental.fbs.AttributeType {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.AttributeType.UNDEFINED;\n    }\n\n    /**\n     * @returns number\n     */\n    f(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    i(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    s(): string|null;\n    s(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    s(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    t(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    g(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    floats(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.readFloat32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    floatsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Float32Array\n     */\n    floatsArray(): Float32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ?\n          new Float32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    ints(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    intsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    strings(index: number): string;\n    strings(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    strings(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    tensors(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    tensorsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph\n     */\n    graphs(index: number, obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    graphsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startAttribute(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.AttributeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.AttributeType) {\n      builder.addFieldInt32(2, type, onnxruntime.experimental.fbs.AttributeType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number f\n     */\n    static addF(builder: flatbuffers.Builder, f: number) {\n      builder.addFieldFloat32(3, f, 0.0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long i\n     */\n    static addI(builder: flatbuffers.Builder, i: flatbuffers.Long) {\n      builder.addFieldInt64(4, i, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sOffset\n     */\n    static addS(builder: flatbuffers.Builder, sOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, sOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tOffset\n     */\n    static addT(builder: flatbuffers.Builder, tOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, tOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset gOffset\n     */\n    static addG(builder: flatbuffers.Builder, gOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, gOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset floatsOffset\n     */\n    static addFloats(builder: flatbuffers.Builder, floatsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, floatsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createFloatsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addFloat32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startFloatsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset intsOffset\n     */\n    static addInts(builder: flatbuffers.Builder, intsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, intsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createIntsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startIntsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringsOffset\n     */\n    static addStrings(builder: flatbuffers.Builder, stringsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, stringsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tensorsOffset\n     */\n    static addTensors(builder: flatbuffers.Builder, tensorsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, tensorsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createTensorsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startTensorsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphsOffset\n     */\n    static addGraphs(builder: flatbuffers.Builder, graphsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, graphsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createGraphsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startGraphsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endAttribute(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createAttribute(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.AttributeType, f: number, i: flatbuffers.Long, sOffset: flatbuffers.Offset,\n        tOffset: flatbuffers.Offset, gOffset: flatbuffers.Offset, floatsOffset: flatbuffers.Offset,\n        intsOffset: flatbuffers.Offset, stringsOffset: flatbuffers.Offset, tensorsOffset: flatbuffers.Offset,\n        graphsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Attribute.startAttribute(builder);\n      Attribute.addName(builder, nameOffset);\n      Attribute.addDocString(builder, docStringOffset);\n      Attribute.addType(builder, type);\n      Attribute.addF(builder, f);\n      Attribute.addI(builder, i);\n      Attribute.addS(builder, sOffset);\n      Attribute.addT(builder, tOffset);\n      Attribute.addG(builder, gOffset);\n      Attribute.addFloats(builder, floatsOffset);\n      Attribute.addInts(builder, intsOffset);\n      Attribute.addStrings(builder, stringsOffset);\n      Attribute.addTensors(builder, tensorsOffset);\n      Attribute.addGraphs(builder, graphsOffset);\n      return Attribute.endAttribute(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Graph {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Graph\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Graph {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getSizePrefixedRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    initializers(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    initializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.ValueInfo= obj\n     * @returns onnxruntime.experimental.fbs.ValueInfo\n     */\n    nodeArgs(index: number, obj?: onnxruntime.experimental.fbs.ValueInfo): onnxruntime.experimental.fbs.ValueInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.ValueInfo())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeArgsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Node= obj\n     * @returns onnxruntime.experimental.fbs.Node\n     */\n    nodes(index: number, obj?: onnxruntime.experimental.fbs.Node): onnxruntime.experimental.fbs.Node|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Node())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    maxNodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.NodeEdge= obj\n     * @returns onnxruntime.experimental.fbs.NodeEdge\n     */\n    nodeEdges(index: number, obj?: onnxruntime.experimental.fbs.NodeEdge): onnxruntime.experimental.fbs.NodeEdge|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? (obj || new onnxruntime.experimental.fbs.NodeEdge())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SparseTensor= obj\n     * @returns onnxruntime.experimental.fbs.SparseTensor\n     */\n    sparseInitializers(index: number, obj?: onnxruntime.experimental.fbs.SparseTensor):\n        onnxruntime.experimental.fbs.SparseTensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SparseTensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    sparseInitializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startGraph(builder: flatbuffers.Builder) {\n      builder.startObject(8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset initializersOffset\n     */\n    static addInitializers(builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, initializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeArgsOffset\n     */\n    static addNodeArgs(builder: flatbuffers.Builder, nodeArgsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, nodeArgsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeArgsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeArgsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodesOffset\n     */\n    static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, nodesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number maxNodeIndex\n     */\n    static addMaxNodeIndex(builder: flatbuffers.Builder, maxNodeIndex: number) {\n      builder.addFieldInt32(3, maxNodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeEdgesOffset\n     */\n    static addNodeEdges(builder: flatbuffers.Builder, nodeEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, nodeEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeEdgesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sparseInitializersOffset\n     */\n    static addSparseInitializers(builder: flatbuffers.Builder, sparseInitializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, sparseInitializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSparseInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSparseInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endGraph(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createGraph(\n        builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset, nodeArgsOffset: flatbuffers.Offset,\n        nodesOffset: flatbuffers.Offset, maxNodeIndex: number, nodeEdgesOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset,\n        sparseInitializersOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Graph.startGraph(builder);\n      Graph.addInitializers(builder, initializersOffset);\n      Graph.addNodeArgs(builder, nodeArgsOffset);\n      Graph.addNodes(builder, nodesOffset);\n      Graph.addMaxNodeIndex(builder, maxNodeIndex);\n      Graph.addNodeEdges(builder, nodeEdgesOffset);\n      Graph.addInputs(builder, inputsOffset);\n      Graph.addOutputs(builder, outputsOffset);\n      Graph.addSparseInitializers(builder, sparseInitializersOffset);\n      return Graph.endGraph(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Model {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Model\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Model {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getSizePrefixedRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    irVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.OperatorSetId= obj\n     * @returns onnxruntime.experimental.fbs.OperatorSetId\n     */\n    opsetImport(index: number, obj?: onnxruntime.experimental.fbs.OperatorSetId):\n        onnxruntime.experimental.fbs.OperatorSetId|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.OperatorSetId())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    opsetImportLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerName(): string|null;\n    producerName(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerName(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerVersion(): string|null;\n    producerVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    modelVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    graph(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphDocString(): string|null;\n    graphDocString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphDocString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startModel(builder: flatbuffers.Builder) {\n      builder.startObject(9);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long irVersion\n     */\n    static addIrVersion(builder: flatbuffers.Builder, irVersion: flatbuffers.Long) {\n      builder.addFieldInt64(0, irVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opsetImportOffset\n     */\n    static addOpsetImport(builder: flatbuffers.Builder, opsetImportOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, opsetImportOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOpsetImportVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOpsetImportVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerNameOffset\n     */\n    static addProducerName(builder: flatbuffers.Builder, producerNameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, producerNameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerVersionOffset\n     */\n    static addProducerVersion(builder: flatbuffers.Builder, producerVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(3, producerVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long modelVersion\n     */\n    static addModelVersion(builder: flatbuffers.Builder, modelVersion: flatbuffers.Long) {\n      builder.addFieldInt64(5, modelVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphOffset\n     */\n    static addGraph(builder: flatbuffers.Builder, graphOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, graphOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphDocStringOffset\n     */\n    static addGraphDocString(builder: flatbuffers.Builder, graphDocStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, graphDocStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endModel(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createModel(\n        builder: flatbuffers.Builder, irVersion: flatbuffers.Long, opsetImportOffset: flatbuffers.Offset,\n        producerNameOffset: flatbuffers.Offset, producerVersionOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, modelVersion: flatbuffers.Long, docStringOffset: flatbuffers.Offset,\n        graphOffset: flatbuffers.Offset, graphDocStringOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Model.startModel(builder);\n      Model.addIrVersion(builder, irVersion);\n      Model.addOpsetImport(builder, opsetImportOffset);\n      Model.addProducerName(builder, producerNameOffset);\n      Model.addProducerVersion(builder, producerVersionOffset);\n      Model.addDomain(builder, domainOffset);\n      Model.addModelVersion(builder, modelVersion);\n      Model.addDocString(builder, docStringOffset);\n      Model.addGraph(builder, graphOffset);\n      Model.addGraphDocString(builder, graphDocStringOffset);\n      return Model.endModel(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class KernelCreateInfos {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns KernelCreateInfos\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): KernelCreateInfos {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos): KernelCreateInfos {\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getSizePrefixedRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos):\n        KernelCreateInfos {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    nodeIndices(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndicesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint32Array\n     */\n    nodeIndicesArray(): Uint32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ?\n          new Uint32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    kernelDefHashes(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readUint64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    kernelDefHashesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startKernelCreateInfos(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeIndicesOffset\n     */\n    static addNodeIndices(builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nodeIndicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeIndicesVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeIndicesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelDefHashesOffset\n     */\n    static addKernelDefHashes(builder: flatbuffers.Builder, kernelDefHashesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, kernelDefHashesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createKernelDefHashesVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startKernelDefHashesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endKernelCreateInfos(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createKernelCreateInfos(\n        builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset,\n        kernelDefHashesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      KernelCreateInfos.startKernelCreateInfos(builder);\n      KernelCreateInfos.addNodeIndices(builder, nodeIndicesOffset);\n      KernelCreateInfos.addKernelDefHashes(builder, kernelDefHashesOffset);\n      return KernelCreateInfos.endKernelCreateInfos(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SubGraphSessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SubGraphSessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SubGraphSessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState): SubGraphSessionState {\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getSizePrefixedRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState):\n        SubGraphSessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphId(): string|null;\n    graphId(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphId(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSubGraphSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphIdOffset\n     */\n    static addGraphId(builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, graphIdOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSubGraphSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      builder.requiredField(offset, 4);  // graph_id\n      return offset;\n    }\n\n    static createSubGraphSessionState(\n        builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SubGraphSessionState.startSubGraphSessionState(builder);\n      SubGraphSessionState.addGraphId(builder, graphIdOffset);\n      SubGraphSessionState.addSessionState(builder, sessionStateOffset);\n      return SubGraphSessionState.endSubGraphSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getSizePrefixedRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.KernelCreateInfos= obj\n     * @returns onnxruntime.experimental.fbs.KernelCreateInfos|null\n     */\n    kernels(obj?: onnxruntime.experimental.fbs.KernelCreateInfos): onnxruntime.experimental.fbs.KernelCreateInfos|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.KernelCreateInfos())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SubGraphSessionState= obj\n     * @returns onnxruntime.experimental.fbs.SubGraphSessionState\n     */\n    subGraphSessionStates(index: number, obj?: onnxruntime.experimental.fbs.SubGraphSessionState):\n        onnxruntime.experimental.fbs.SubGraphSessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SubGraphSessionState())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    subGraphSessionStatesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelsOffset\n     */\n    static addKernels(builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, kernelsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset subGraphSessionStatesOffset\n     */\n    static addSubGraphSessionStates(builder: flatbuffers.Builder, subGraphSessionStatesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, subGraphSessionStatesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSubGraphSessionStatesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSubGraphSessionStatesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSessionState(\n        builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset,\n        subGraphSessionStatesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SessionState.startSessionState(builder);\n      SessionState.addKernels(builder, kernelsOffset);\n      SessionState.addSubGraphSessionStates(builder, subGraphSessionStatesOffset);\n      return SessionState.endSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class InferenceSession {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns InferenceSession\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): InferenceSession {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getSizePrefixedRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @returns boolean\n     */\n    static bufferHasIdentifier(bb: flatbuffers.ByteBuffer): boolean {\n      return bb.__has_identifier('ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    ortVersion(): string|null;\n    ortVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    ortVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Model= obj\n     * @returns onnxruntime.experimental.fbs.Model|null\n     */\n    model(obj?: onnxruntime.experimental.fbs.Model): onnxruntime.experimental.fbs.Model|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Model())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startInferenceSession(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset ortVersionOffset\n     */\n    static addOrtVersion(builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, ortVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset modelOffset\n     */\n    static addModel(builder: flatbuffers.Builder, modelOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, modelOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endInferenceSession(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishSizePrefixedInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM', true);\n    }\n\n    static createInferenceSession(\n        builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset, modelOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      InferenceSession.startInferenceSession(builder);\n      InferenceSession.addOrtVersion(builder, ortVersionOffset);\n      InferenceSession.addModel(builder, modelOffset);\n      InferenceSession.addSessionState(builder, sessionStateOffset);\n      return InferenceSession.endInferenceSession(builder);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\n\nimport {Session} from './session';\nimport {Tensor as OnnxjsTensor} from './tensor';\n\nexport class OnnxjsSessionHandler implements SessionHandler {\n  constructor(private session: Session) {\n    this.inputNames = this.session.inputNames;\n    this.outputNames = this.session.outputNames;\n  }\n\n  async dispose(): Promise<void> {}\n  inputNames: readonly string[];\n  outputNames: readonly string[];\n  async run(\n      feeds: SessionHandler.FeedsType, _fetches: SessionHandler.FetchesType,\n      _options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType> {\n    const inputMap = new Map<string, OnnxjsTensor>();\n    for (const name in feeds) {\n      if (Object.hasOwnProperty.call(feeds, name)) {\n        const feed = feeds[name];\n        inputMap.set(\n            name,\n            new OnnxjsTensor(\n                feed.dims, feed.type as OnnxjsTensor.DataType, undefined, undefined,\n                feed.data as OnnxjsTensor.NumberType));\n      }\n    }\n    const outputMap = await this.session.run(inputMap);\n    const output: SessionHandler.ReturnType = {};\n    outputMap.forEach((tensor, name) => {\n      output[name] = new Tensor(tensor.type, tensor.data, tensor.dims);\n    });\n    return output;\n  }\n  startProfiling(): void {\n    this.session.startProfiling();\n  }\n  endProfiling(): void {\n    this.session.endProfiling();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {promisify} from 'util';\n\nimport {resolveBackend, SessionHandlerType} from './backend';\nimport {ExecutionPlan} from './execution-plan';\nimport {Graph} from './graph';\nimport {Profiler} from './instrument';\nimport {Model} from './model';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nexport declare namespace Session {\n  export interface Config {\n    backendHint?: string;\n    profiler?: Profiler.Config;\n  }\n\n  export interface Context {\n    profiler: Readonly<Profiler>;\n    graphInputTypes?: Tensor.DataType[];\n    graphInputDims?: Array<readonly number[]>;\n  }\n}\n\nexport class Session {\n  constructor(config: Session.Config = {}) {\n    this._initialized = false;\n    this.backendHint = config.backendHint;\n    this.profiler = Profiler.create(config.profiler);\n    this.context = {profiler: this.profiler, graphInputTypes: [], graphInputDims: []};\n  }\n\n  get inputNames(): readonly string[] {\n    return this._model.graph.getInputNames();\n  }\n  get outputNames(): readonly string[] {\n    return this._model.graph.getOutputNames();\n  }\n\n  startProfiling() {\n    this.profiler.start();\n  }\n\n  endProfiling() {\n    this.profiler.stop();\n  }\n\n  async loadModel(uri: string): Promise<void>;\n  async loadModel(buffer: ArrayBuffer, byteOffset?: number, length?: number): Promise<void>;\n  async loadModel(buffer: Uint8Array): Promise<void>;\n  async loadModel(arg: string|ArrayBuffer|Uint8Array, byteOffset?: number, length?: number): Promise<void> {\n    await this.profiler.event('session', 'Session.loadModel', async () => {\n      // resolve backend and session handler\n      const backend = await resolveBackend(this.backendHint);\n      this.sessionHandler = backend.createSessionHandler(this.context);\n\n      this._model = new Model();\n      if (typeof arg === 'string') {\n        const isOrtFormat = arg.endsWith('.ort');\n        if (typeof fetch === 'undefined') {\n          // node\n          const buf = await promisify(readFile)(arg);\n          this.initialize(buf, isOrtFormat);\n        } else {\n          // browser\n          const response = await fetch(arg);\n          const buf = await response.arrayBuffer();\n          this.initialize(new Uint8Array(buf), isOrtFormat);\n        }\n      } else if (!ArrayBuffer.isView(arg)) {\n        // load model from ArrayBuffer\n        const arr = new Uint8Array(arg, byteOffset || 0, length || arg.byteLength);\n        this.initialize(arr);\n      } else {\n        // load model from Uint8array\n        this.initialize(arg);\n      }\n    });\n  }\n\n  private initialize(modelProtoBlob: Uint8Array, isOrtFormat?: boolean): void {\n    if (this._initialized) {\n      throw new Error('already initialized');\n    }\n\n    this.profiler.event('session', 'Session.initialize', () => {\n      // load graph\n      const graphInitializer =\n          this.sessionHandler.transformGraph ? this.sessionHandler as Graph.Initializer : undefined;\n      this._model.load(modelProtoBlob, graphInitializer, isOrtFormat);\n\n      // graph is completely initialzied at this stage , let the interested handlers know\n      if (this.sessionHandler.onGraphInitialized) {\n        this.sessionHandler.onGraphInitialized(this._model.graph);\n      }\n      // initialize each operator in the graph\n      this.initializeOps(this._model.graph);\n\n      // instantiate an ExecutionPlan object to be used by the Session object\n      this._executionPlan = new ExecutionPlan(this._model.graph, this._ops, this.profiler);\n    });\n\n    this._initialized = true;\n  }\n\n  async run(inputs: Map<string, Tensor>|Tensor[]): Promise<Map<string, Tensor>> {\n    if (!this._initialized) {\n      throw new Error('session not initialized yet');\n    }\n\n    return this.profiler.event('session', 'Session.run', async () => {\n      const inputTensors = this.normalizeAndValidateInputs(inputs);\n\n      const outputTensors = await this._executionPlan.execute(this.sessionHandler, inputTensors);\n\n      return this.createOutput(outputTensors);\n    });\n  }\n\n  private normalizeAndValidateInputs(inputs: Map<string, Tensor>|Tensor[]): Tensor[] {\n    const modelInputNames = this._model.graph.getInputNames();\n\n    // normalize inputs\n    // inputs: Tensor[]\n    if (Array.isArray(inputs)) {\n      if (inputs.length !== modelInputNames.length) {\n        throw new Error(`incorrect input array length: expected ${modelInputNames.length} but got ${inputs.length}`);\n      }\n    }\n    // convert map to array\n    // inputs: Map<string, Tensor>\n    else {\n      if (inputs.size !== modelInputNames.length) {\n        throw new Error(`incorrect input map size: expected ${modelInputNames.length} but got ${inputs.size}`);\n      }\n\n      const sortedInputs = new Array<Tensor>(inputs.size);\n      let sortedInputsIndex = 0;\n      for (let i = 0; i < modelInputNames.length; ++i) {\n        const tensor = inputs.get(modelInputNames[i]);\n        if (!tensor) {\n          throw new Error(`missing input tensor for: '${name}'`);\n        }\n        sortedInputs[sortedInputsIndex++] = tensor;\n      }\n\n      inputs = sortedInputs;\n    }\n\n    // validate dims requirements\n    // First session run - graph input data is not cached for the session\n    if (!this.context.graphInputTypes || this.context.graphInputTypes.length === 0 || !this.context.graphInputDims ||\n        this.context.graphInputDims.length === 0) {\n      const modelInputIndices = this._model.graph.getInputIndices();\n      const modelValues = this._model.graph.getValues();\n\n      const graphInputDims = new Array<readonly number[]>(modelInputIndices.length);\n\n      for (let i = 0; i < modelInputIndices.length; ++i) {\n        const graphInput = modelValues[modelInputIndices[i]];\n        graphInputDims[i] = graphInput.type!.shape.dims;\n\n        // cached for second and subsequent runs.\n        // Some parts of the framework works on the assumption that the graph and types and shapes are static\n        this.context.graphInputTypes!.push(graphInput.type!.tensorType);\n        this.context.graphInputDims!.push(inputs[i].dims);\n      }\n\n      this.validateInputTensorDims(graphInputDims, inputs, true);\n    }\n\n    // Second and subsequent session runs - graph input data is cached for the session\n    else {\n      this.validateInputTensorDims(this.context.graphInputDims, inputs, false);\n    }\n\n    // validate types requirement\n    this.validateInputTensorTypes(this.context.graphInputTypes!, inputs);\n\n    return inputs;\n  }\n\n  private validateInputTensorTypes(graphInputTypes: Tensor.DataType[], givenInputs: Tensor[]) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedType = graphInputTypes[i];\n      const actualType = givenInputs[i].type;\n      if (expectedType !== actualType) {\n        throw new Error(`input tensor[${i}] check failed: expected type '${expectedType}' but got ${actualType}`);\n      }\n    }\n  }\n\n  private validateInputTensorDims(\n      graphInputDims: Array<readonly number[]>, givenInputs: Tensor[], noneDimSupported: boolean) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedDims = graphInputDims[i];\n      const actualDims = givenInputs[i].dims;\n      if (!this.compareTensorDims(expectedDims, actualDims, noneDimSupported)) {\n        throw new Error(`input tensor[${i}] check failed: expected shape '[${expectedDims.join(',')}]' but got [${\n            actualDims.join(',')}]`);\n      }\n    }\n  }\n\n  private compareTensorDims(expectedDims: readonly number[], actualDims: readonly number[], noneDimSupported: boolean):\n      boolean {\n    if (expectedDims.length !== actualDims.length) {\n      return false;\n    }\n\n    for (let i = 0; i < expectedDims.length; ++i) {\n      if (expectedDims[i] !== actualDims[i] && (!noneDimSupported || expectedDims[i] !== 0)) {\n        // data shape mis-match AND not a 'None' dimension.\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private createOutput(outputTensors: Tensor[]): Map<string, Tensor> {\n    const modelOutputNames = this._model.graph.getOutputNames();\n    if (outputTensors.length !== modelOutputNames.length) {\n      throw new Error('expected number of outputs do not match number of generated outputs');\n    }\n\n    const output = new Map<string, Tensor>();\n    for (let i = 0; i < modelOutputNames.length; ++i) {\n      output.set(modelOutputNames[i], outputTensors[i]);\n    }\n\n    return output;\n  }\n\n  private initializeOps(graph: Graph): void {\n    const nodes = graph.getNodes();\n    this._ops = new Array(nodes.length);\n\n    for (let i = 0; i < nodes.length; i++) {\n      this._ops[i] = this.sessionHandler.resolve(nodes[i], this._model.opsets, graph);\n    }\n  }\n\n  private _model: Model;\n  private _initialized: boolean;\n\n  private _ops: Operator[];\n  private _executionPlan: ExecutionPlan;\n\n  private backendHint?: string;\n\n  private sessionHandler: SessionHandlerType;\n  private context: Session.Context;\n  private profiler: Readonly<Profiler>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Guid} from 'guid-typescript';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {decodeUtf8String, ProtoUtil, ShapeUtil} from './util';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nexport declare namespace Tensor {\n  export interface DataTypeMap {\n    bool: Uint8Array;\n    float32: Float32Array;\n    float64: Float64Array;\n    string: string[];\n    int8: Int8Array;\n    uint8: Uint8Array;\n    int16: Int16Array;\n    uint16: Uint16Array;\n    int32: Int32Array;\n    uint32: Uint32Array;\n  }\n\n  export type DataType = keyof DataTypeMap;\n\n  export type StringType = Tensor.DataTypeMap['string'];\n  export type BooleanType = Tensor.DataTypeMap['bool'];\n  export type IntegerType = Tensor.DataTypeMap['int8']|Tensor.DataTypeMap['uint8']|Tensor.DataTypeMap['int16']|\n                            Tensor.DataTypeMap['uint16']|Tensor.DataTypeMap['int32']|Tensor.DataTypeMap['uint32'];\n  export type FloatType = Tensor.DataTypeMap['float32']|Tensor.DataTypeMap['float64'];\n  export type NumberType = BooleanType|IntegerType|FloatType;\n\n  export type Id = Guid;\n}\n\ntype TensorData = Tensor.DataTypeMap[Tensor.DataType];\n\ntype DataProvider = (id: Tensor.Id) => TensorData;\ntype AsyncDataProvider = (id: Tensor.Id) => Promise<TensorData>;\n\nexport class Tensor {\n  /**\n   * get the underlying tensor data\n   */\n  get data(): TensorData {\n    if (this.cache === undefined) {\n      const data = this.dataProvider!(this.dataId);\n      if (data.length !== this.size) {\n        throw new Error('Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.');\n      }\n      this.cache = data;\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the underlying string tensor data. Should only use when type is STRING\n   */\n  get stringData() {\n    if (this.type !== 'string') {\n      throw new TypeError('data type is not string');\n    }\n\n    return this.data as Tensor.StringType;\n  }\n\n  /**\n   * get the underlying integer tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL)\n   */\n  get integerData() {\n    switch (this.type) {\n      case 'uint8':\n      case 'int8':\n      case 'uint16':\n      case 'int16':\n      case 'int32':\n      case 'uint32':\n      case 'bool':\n        return this.data as Tensor.IntegerType;\n\n      default:\n        throw new TypeError('data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)');\n    }\n  }\n\n  /**\n   * get the underlying float tensor data. Should only use when type is one of the following: (FLOAT, DOUBLE)\n   */\n  get floatData() {\n    switch (this.type) {\n      case 'float32':\n      case 'float64':\n        return this.data as Tensor.FloatType;\n\n      default:\n        throw new TypeError('data type is not float (float32, float64)');\n    }\n  }\n\n  /**\n   * get the underlying number tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL, FLOAT, DOUBLE)\n   */\n  get numberData() {\n    if (this.type !== 'string') {\n      return this.data as Tensor.NumberType;\n    }\n    throw new TypeError('type cannot be non-number (string)');\n  }\n\n  /**\n   * get value of an element at the given indices\n   */\n  get(indices: readonly number[]): Tensor.DataTypeMap[Tensor.DataType][number] {\n    return this.data[ShapeUtil.indicesToOffset(indices, this.strides)];\n  }\n\n  /**\n   * set value of an element at the given indices\n   */\n  set(indices: readonly number[], value: Tensor.DataTypeMap[Tensor.DataType][number]) {\n    this.data[ShapeUtil.indicesToOffset(indices, this.strides)] = value;\n  }\n\n  /**\n   * get the underlying tensor data asynchronously\n   */\n  async getData(): Promise<TensorData> {\n    if (this.cache === undefined) {\n      this.cache = await this.asyncDataProvider!(this.dataId);\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the number of elements in the tensor\n   */\n  public readonly size: number;\n\n  private _strides: readonly number[];\n  /**\n   * get the strides for each dimension\n   */\n  get strides(): readonly number[] {\n    if (!this._strides) {\n      this._strides = ShapeUtil.computeStrides(this.dims);\n    }\n    return this._strides;\n  }\n\n  constructor(\n      /**\n       * get the dimensions of the tensor\n       */\n      public readonly dims: readonly number[],\n      /**\n       * get the type of the tensor\n       */\n      public readonly type: Tensor.DataType, private dataProvider?: DataProvider,\n      private asyncDataProvider?: AsyncDataProvider, private cache?: TensorData,\n      /**\n       * get the data ID that used to map to a tensor data\n       */\n      public readonly dataId: Guid = Guid.create()) {\n    this.size = ShapeUtil.validateDimsAndCalcSize(dims);\n    const size = this.size;\n    const empty = (dataProvider === undefined && asyncDataProvider === undefined && cache === undefined);\n\n    if (cache !== undefined) {\n      if (cache.length !== size) {\n        throw new RangeError('Input dims doesn\\'t match data length.');\n      }\n    }\n\n    if (type === 'string') {\n      if (cache !== undefined && (!Array.isArray(cache) || !cache.every(i => typeof i === 'string'))) {\n        throw new TypeError('cache should be a string array');\n      }\n\n      if (empty) {\n        this.cache = new Array<string>(size);\n      }\n    } else {\n      if (cache !== undefined) {\n        const constructor = dataviewConstructor(type);\n        if (!(cache instanceof constructor)) {\n          throw new TypeError(`cache should be type ${constructor.name}`);\n        }\n      }\n\n      if (empty) {\n        const buf = new ArrayBuffer(size * sizeof(type));\n        this.cache = createView(buf, type);\n      }\n    }\n  }\n\n  /**\n   * Construct new Tensor from a ONNX Tensor object\n   * @param tensorProto the ONNX Tensor\n   */\n  static fromProto(tensorProto: onnx.ITensorProto): Tensor {\n    if (!tensorProto) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const type = ProtoUtil.tensorDataTypeFromProto(tensorProto.dataType!);\n    const dims = ProtoUtil.tensorDimsFromProto(tensorProto.dims!);\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      tensorProto.stringData!.forEach((str, i) => {\n        value.data[i] = decodeUtf8String(str);\n      });\n\n    } else if (\n        tensorProto.rawData && typeof tensorProto.rawData.byteLength === 'number' &&\n        tensorProto.rawData.byteLength > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource =\n          new DataView(tensorProto.rawData.buffer, tensorProto.rawData.byteOffset, tensorProto.rawData.byteLength);\n      const elementSize = sizeofProto(tensorProto.dataType!);\n      const length = tensorProto.rawData.byteLength / elementSize;\n\n      if (tensorProto.rawData.byteLength % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, tensorProto.dataType!, i * elementSize);\n        dataDest[i] = n;\n      }\n    } else {\n      // populate value from array\n      let array: Array<number|Long>;\n      switch (tensorProto.dataType) {\n        case onnx.TensorProto.DataType.FLOAT:\n          array = tensorProto.floatData!;\n          break;\n        case onnx.TensorProto.DataType.INT32:\n        case onnx.TensorProto.DataType.INT16:\n        case onnx.TensorProto.DataType.UINT16:\n        case onnx.TensorProto.DataType.INT8:\n        case onnx.TensorProto.DataType.UINT8:\n        case onnx.TensorProto.DataType.BOOL:\n          array = tensorProto.int32Data!;\n          break;\n        case onnx.TensorProto.DataType.INT64:\n          array = tensorProto.int64Data!;\n          break;\n        case onnx.TensorProto.DataType.DOUBLE:\n          array = tensorProto.doubleData!;\n          break;\n        case onnx.TensorProto.DataType.UINT32:\n        case onnx.TensorProto.DataType.UINT64:\n          array = tensorProto.uint64Data!;\n          break;\n        default:\n          // should never run here\n          throw new Error('unspecific error');\n      }\n\n      if (array === null || array === undefined) {\n        throw new Error('failed to populate data from a tensorproto value');\n      }\n\n      const data = value.data;\n      if (data.length !== array.length) {\n        throw new Error('array length mismatch');\n      }\n\n      for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (Long.isLong(element)) {\n          data[i] = longToNumber(element, tensorProto.dataType);\n        } else {\n          data[i] = element;\n        }\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Construct new Tensor from raw data\n   * @param data the raw data object. Should be a string array for 'string' tensor, and the corresponding typed array\n   * for other types of tensor.\n   * @param dims the dimensions of the tensor\n   * @param type the type of the tensor\n   */\n  static fromData(data: Tensor.DataTypeMap[Tensor.DataType], dims: readonly number[], type: Tensor.DataType) {\n    return new Tensor(dims, type, undefined, undefined, data);\n  }\n\n  static fromOrtTensor(ortTensor: ortFbs.Tensor) {\n    if (!ortTensor) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const dims = ProtoUtil.tensorDimsFromORTFormat(ortTensor);\n    const type = ProtoUtil.tensorDataTypeFromProto(ortTensor.dataType());\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      for (let i = 0; i < ortTensor.stringDataLength(); i++) {\n        value.data[i] = ortTensor.stringData(i);\n      }\n\n    } else if (\n        ortTensor.rawDataArray() && typeof ortTensor.rawDataLength() === 'number' && ortTensor.rawDataLength() > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource = new DataView(\n          ortTensor.rawDataArray()!.buffer, ortTensor.rawDataArray()!.byteOffset, ortTensor.rawDataLength());\n      const elementSize = sizeofProto(ortTensor.dataType());\n      const length = ortTensor.rawDataLength() / elementSize;\n\n      if (ortTensor.rawDataLength() % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, ortTensor.dataType(), i * elementSize);\n        dataDest[i] = n;\n      }\n    }\n    return value;\n  }\n}\n\nfunction sizeof(type: Tensor.DataType): number {\n  switch (type) {\n    case 'bool':\n    case 'int8':\n    case 'uint8':\n      return 1;\n    case 'int16':\n    case 'uint16':\n      return 2;\n    case 'int32':\n    case 'uint32':\n    case 'float32':\n      return 4;\n    case 'float64':\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${type}`);\n  }\n}\n\nfunction sizeofProto(type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.UINT8:\n    case onnx.TensorProto.DataType.INT8:\n    case onnx.TensorProto.DataType.BOOL:\n      return 1;\n    case onnx.TensorProto.DataType.UINT16:\n    case onnx.TensorProto.DataType.INT16:\n      return 2;\n    case onnx.TensorProto.DataType.FLOAT:\n    case onnx.TensorProto.DataType.INT32:\n    case onnx.TensorProto.DataType.UINT32:\n      return 4;\n    case onnx.TensorProto.DataType.INT64:\n    case onnx.TensorProto.DataType.DOUBLE:\n    case onnx.TensorProto.DataType.UINT64:\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n\nfunction createView(dataBuffer: ArrayBuffer, type: Tensor.DataType) {\n  return new (dataviewConstructor(type))(dataBuffer);\n}\n\nfunction dataviewConstructor(type: Tensor.DataType) {\n  switch (type) {\n    case 'bool':\n    case 'uint8':\n      return Uint8Array;\n    case 'int8':\n      return Int8Array;\n    case 'int16':\n      return Int16Array;\n    case 'uint16':\n      return Uint16Array;\n    case 'int32':\n      return Int32Array;\n    case 'uint32':\n      return Uint32Array;\n    case 'float32':\n      return Float32Array;\n    case 'float64':\n      return Float64Array;\n    default:\n      // should never run to here\n      throw new Error('unspecified error');\n  }\n}\n\n// convert a long number to a 32-bit integer (cast-down)\nfunction longToNumber(i: Long, type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  // INT64, UINT32, UINT64\n  if (type === onnx.TensorProto.DataType.INT64 || type === ortFbs.TensorDataType.INT64) {\n    if (i.greaterThanOrEqual(2147483648) || i.lessThan(-2147483648)) {\n      throw new TypeError('int64 is not supported');\n    }\n  } else if (\n      type === onnx.TensorProto.DataType.UINT32 || type === ortFbs.TensorDataType.UINT32 ||\n      type === onnx.TensorProto.DataType.UINT64 || type === ortFbs.TensorDataType.UINT64) {\n    if (i.greaterThanOrEqual(4294967296) || i.lessThan(0)) {\n      throw new TypeError('uint64 is not supported');\n    }\n  } else {\n    throw new TypeError(`not a LONG type: ${onnx.TensorProto.DataType[type]}`);\n  }\n\n  return i.toNumber();\n}\n\n// read one value from TensorProto\nfunction readProto(view: DataView, type: onnx.TensorProto.DataType|ortFbs.TensorDataType, byteOffset: number): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.BOOL:\n    case onnx.TensorProto.DataType.UINT8:\n      return view.getUint8(byteOffset);\n    case onnx.TensorProto.DataType.INT8:\n      return view.getInt8(byteOffset);\n    case onnx.TensorProto.DataType.UINT16:\n      return view.getUint16(byteOffset, true);\n    case onnx.TensorProto.DataType.INT16:\n      return view.getInt16(byteOffset, true);\n    case onnx.TensorProto.DataType.FLOAT:\n      return view.getFloat32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT32:\n      return view.getInt32(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT32:\n      return view.getUint32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), false), type);\n    case onnx.TensorProto.DataType.DOUBLE:\n      return view.getFloat64(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), true), type);\n    default:\n      throw new Error(`cannot read from DataView for type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\n\n// check the inputs shape before running an OP.\n// return true when the inputs pass the check\n// return false when the inputs do not fit the requirement\n// throw exception when fatal error or not implemented\nexport function checkInputsShape(inputs: Tensor[], ...expectedDimensions: number[]): boolean {\n  if (!inputs || inputs.length !== expectedDimensions.length) {\n    return false;\n  }\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].dims || inputs[i].dims.length !== expectedDimensions[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Evaluates the given expression and asserts error message if condition is unmet.\nexport function assert(expr: boolean, msg: () => string) {\n  if (!expr) {\n    throw new Error(typeof msg === 'string' ? msg : msg());\n  }\n}\n\nexport class ArrayUtil {\n  /**\n   * Verifies if 2 input arrays contain the same elements.\n   * @param n1 Array 1\n   * @param n2 Array 2\n   * @returns Whether these 2 are equal\n   */\n  static arraysEqual(\n      n1: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array,\n      n2: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array) {\n    if (n1.length !== n2.length) {\n      return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n      if (n1[i] !== n2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nexport class MatMulUtil {\n  /**\n   * Fix the input shapes for MatMul operation if they need fixing\n   * @param dimsA The shape of tensor A. Should be an array of positive integers\n   * @param dimsB The shape of tensor B. Should be an array of positive integers\n   * @returns A tuple containing the preprocessed input shapes as required by ONNX specifications\n   */\n  static preprocessInputShapes(dimsA: readonly number[], dimsB: readonly number[]):\n      [readonly number[], readonly number[]] {\n    // If the first argument is 1-D, it is promoted to a matrix by prepending\n    // a 1 to its dimensions. After matrix multiplication the prepended 1 is\n    // removed.\n    const a = (dimsA.length === 1) ? [1, dimsA[0]] : dimsA;\n\n    // If the second argument is 1-D, it is promoted to a matrix by appending\n    // a 1 to its dimensions. After matrix multiplication the appended 1 is\n    // removed.\n    const b = (dimsB.length === 1) ? [dimsB[0], 1] : dimsB;\n\n    return [a, b];\n  }\n\n  /**\n   * Fix the output shape computed for MatMul operation if it needs fixing\n   * @param outputShape The computed outputShape. Should be an array (atleast of length 2) of positive integers.\n   * This will be mutated.\n   * @param aRank The rank of tensor A.\n   * @param bRank The rank of tensor B.\n   */\n  static postprocessOutputShape(outputShape: number[], aRank: number, bRank: number) {\n    // Remove prepended dimension if first input is 1d\n    if (aRank === 1) {\n      // outputShape = outputShape.slice(0, outputShape.length - 2).concat(outputShape.slice(outputShape.length - 1));\n      outputShape.splice(outputShape.length - 2, 1);\n    }\n    // Remove appended dimension if second input is 1d\n    if (bRank === 1) {\n      outputShape.pop();\n    }\n  }\n\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcas\n   * @returns The calculated indices that maps to the original tensor.\n   */\n  static index(broadcastedIndices: readonly number[], originalShape: readonly number[]): number[] {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same\n    // length as the broadcasted shape, and for each dimension the index should\n    // not be out of range.\n    const originalIndices = new Array(originalShape.length);\n    BroadcastUtil.fillIndex(broadcastedIndices, originalShape, originalIndices);\n    return originalIndices;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcast\n   * @param originalIndices The mapping of broadcastedIndices to the originalIndices (output parameter - will be\n   *     mutated).\n   */\n  static fillIndex(broadcastedIndices: readonly number[], originalShape: readonly number[], originalIndices: number[]) {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same length as the\n    // broadcasted shape, and for each dimension the index should not be out of range.\n    // NOTE 2: we assume the parameter originalIndices has the same length as the originalShape\n    const dimOffset = broadcastedIndices.length - originalShape.length;\n    for (let i = 0; i < originalShape.length; i++) {\n      originalIndices[i] = broadcastedIndices[dimOffset + i] % originalShape[i];\n    }\n  }\n\n  /**\n   * Perform the broadcasting operation on the specific operator\n   * @param a The input tensor A\n   * @param b The input tensor B\n   * @param op The operator lambda function\n   * @param inplace Whether to write the result back to A.\n   * @returns The result tensor, or undefined if input not broadcastable.\n   */\n  static calc(\n      a: Tensor, b: Tensor, op: (a: string|number, b: string|number) => (string | number), inplace: boolean,\n      resultType?: Tensor.DataType): Tensor|undefined {\n    const outputShape = BroadcastUtil.calcShape(a.dims, b.dims);\n\n    if (outputShape) {\n      if (inplace && !ShapeUtil.areEqual(outputShape, a.dims)) {\n        // B is not broadcastable to A, failed to calculate inplace.\n        return undefined;\n      }\n\n      const size = ShapeUtil.size(outputShape);\n      const c = inplace ? a : new Tensor(outputShape, resultType || a.type);\n\n      // both inputs are scalars\n      if (outputShape.length === 0) {\n        c.set([], op(a.get([]), b.get([])));\n      }\n\n      // atleast one input is a non-scalar\n      else {\n        const outputIndices = new Array<number>(outputShape.length);\n        const originalIndicesA = new Array(a.dims.length);\n        const originalIndicesB = new Array(b.dims.length);\n        let valA: string|number = 0;\n        let valB: string|number = 0;\n        let isAScalar = false;\n        let isBScalar = false;\n        if (a.dims.length === 0) {\n          valA = a.get([]);\n          isAScalar = true;\n        }\n        if (b.dims.length === 0) {\n          valB = b.get([]);\n          isBScalar = true;\n        }\n        let rest: number;\n        for (let i = 0; i < size; i++) {\n          // traversal indices\n          rest = i;\n          for (let j = outputShape.length - 1; j >= 0; j--) {\n            outputIndices[j] = rest % outputShape[j];\n            rest = Math.floor(rest / outputShape[j]);\n          }\n\n          if (!isAScalar) {\n            // map outputIndices (which is actually broadcasted) to the originalIndices\n            BroadcastUtil.fillIndex(outputIndices, a.dims, originalIndicesA);\n            valA = a.get(originalIndicesA);\n          }\n          if (!isBScalar) {\n            BroadcastUtil.fillIndex(outputIndices, b.dims, originalIndicesB);\n            valB = b.get(originalIndicesB);\n          }\n\n          c.set(outputIndices, op(valA, valB));\n        }\n      }\n\n      return c;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determine the broadcasted dims in input shape based on the given output shape.\n   * Note that this function only returns the broadcasted dims.\n   * @param inputShape The input shape\n   * @param outputShape The output shape\n   * @returns The broadcasted dims in input shape.\n   */\n  static getBroadcastDims(inputShape: readonly number[], outputShape: readonly number[]): number[] {\n    const inRank = inputShape.length;\n    const dims: number[] = [];\n    for (let i = 0; i < inRank; i++) {\n      const dim = inRank - 1 - i;\n      const a = inputShape[dim] || 1;\n      const b = outputShape[outputShape.length - 1 - i] || 1;\n      if (b > 1 && a === 1) {\n        dims.unshift(dim);\n      }\n    }\n    return dims;\n  }\n}\n\n// copy array helper\n// mimics memcpy as much as possible\nexport function arrayCopyHelper(\n    target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n    blockSize: number) {\n  if (sourceIndex < 0 || sourceIndex >= source.length) {\n    throw new Error('sourceIndex out of bounds');\n  }\n  if (targetIndex < 0 || targetIndex >= target.length) {\n    throw new Error('targetIndex out of bounds');\n  }\n  if (sourceIndex + blockSize > source.length) {\n    throw new Error('source indices to be copied are outside bounds');\n  }\n  if (targetIndex + blockSize > target.length) {\n    throw new Error('target array is too small to hold result');\n  }\n\n  for (let offset = 0; offset < blockSize; offset++) {\n    target[targetIndex + offset] = source[sourceIndex + offset];\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\nexport class ProtoUtil {\n  static tensorDataTypeFromProto(typeProto: onnx.TensorProto.DataType|\n                                 onnxruntime.experimental.fbs.TensorDataType): Tensor.DataType {\n    switch (typeProto) {\n      case onnx.TensorProto.DataType.INT8:\n        return 'int8';\n      case onnx.TensorProto.DataType.UINT8:\n        return 'uint8';\n      case onnx.TensorProto.DataType.BOOL:\n        return 'bool';\n      case onnx.TensorProto.DataType.INT16:\n        return 'int16';\n      case onnx.TensorProto.DataType.UINT16:\n        return 'uint16';\n      case onnx.TensorProto.DataType.INT32:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT32:\n        return 'uint32';\n      case onnx.TensorProto.DataType.FLOAT:\n        return 'float32';\n      case onnx.TensorProto.DataType.DOUBLE:\n        return 'float64';\n      case onnx.TensorProto.DataType.STRING:\n        return 'string';\n\n      // For INT64/UINT64, reduce their value to 32-bits.\n      // Should throw exception when overflow\n      case onnx.TensorProto.DataType.INT64:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT64:\n        return 'uint32';\n\n      default:\n        throw new Error(`unsupported data type: ${onnx.TensorProto.DataType[typeProto]}`);\n    }\n  }\n\n  static tensorDataTypeStringToEnum(type: string): onnx.TensorProto.DataType {\n    switch (type) {\n      case 'int8':\n        return onnx.TensorProto.DataType.INT8;\n      case 'uint8':\n        return onnx.TensorProto.DataType.UINT8;\n      case 'bool':\n        return onnx.TensorProto.DataType.BOOL;\n      case 'int16':\n        return onnx.TensorProto.DataType.INT16;\n      case 'uint16':\n        return onnx.TensorProto.DataType.UINT16;\n      case 'int32':\n        return onnx.TensorProto.DataType.INT32;\n      case 'uint32':\n        return onnx.TensorProto.DataType.UINT32;\n      case 'float32':\n        return onnx.TensorProto.DataType.FLOAT;\n      case 'float64':\n        return onnx.TensorProto.DataType.DOUBLE;\n      case 'string':\n        return onnx.TensorProto.DataType.STRING;\n      case 'int64':\n        return onnx.TensorProto.DataType.INT64;\n      case 'uint64':\n        return onnx.TensorProto.DataType.UINT64;\n\n      default:\n        throw new Error(`unsupported data type: ${type}`);\n    }\n  }\n\n  static tensorDimsFromProto(dims: Array<number|Long>): number[] {\n    // get rid of Long type for dims\n    return dims.map(d => Long.isLong(d) ? d.toNumber() : d);\n  }\n\n  static tensorValueTypeFromProto(valueType: onnx.TypeProto.ITensor): Graph.ValueType {\n    return {\n      tensorType: ProtoUtil.tensorDataTypeFromProto(valueType.elemType!),\n      shape: {dims: ProtoUtil.tensorDimsFromProto(valueType.shape!.dim!.map(d => d.dimValue!))}\n    };\n  }\n\n  static tensorDimsFromORTFormat(tensor: onnxruntime.experimental.fbs.Tensor) {\n    const dims = [];\n    for (let i = 0; i < tensor.dimsLength(); i++) {\n      dims.push(LongUtil.longToNumber(tensor.dims(i)!));\n    }\n    return dims;\n  }\n\n  static tensorAttributesFromORTFormat(node: onnxruntime.experimental.fbs.Node) {\n    const attributes = [];\n    for (let i = 0; i < node.attributesLength(); i++) {\n      attributes.push(node.attributes(i)!);\n    }\n    return attributes;\n  }\n}\n\nexport class LongUtil {\n  // This function is called to get a number from long type of data for attribute, dim, and ir version,\n  // which values are signed integers.\n  // To make it more generic, add an optional paramter to convert to a unsigned number.\n  static longToNumber(n: Long|flatbuffers.Long|number, unsigned?: boolean) {\n    if (Long.isLong(n)) {\n      return n.toNumber();\n    } else if (n instanceof flatbuffers.Long) {\n      return Long.fromValue({low: n.low, high: n.high, unsigned: unsigned ?? false}).toNumber();\n    }\n    return n;\n  }\n  static isLong(n: unknown) {\n    return Long.isLong(n) || n instanceof flatbuffers.Long;\n  }\n}\n\nexport class ShapeUtil {\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  // `axis` inclusive\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  // `axis` exclusive\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be 0 or negative.\n      if (dims[i] <= 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  static transpose(dims: readonly number[]): readonly number[] {\n    const copy = dims.slice();\n    return copy.reverse();\n  }\n\n  static indicesToOffset(indices: readonly number[], strides: readonly number[], axis?: number): number {\n    if (axis === undefined) {\n      axis = indices.length;\n    }\n    let offset = 0;\n    for (let i = 0; i < axis; ++i) {\n      offset += strides[i] * indices[i];\n    }\n    return offset;\n  }\n\n  static offsetToIndices(offset: number, strides: readonly number[]): readonly number[] {\n    const rank = strides.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [offset * strides[0]];\n    }\n    const indices: number[] = new Array(strides.length);\n    for (let i = 0; i < indices.length - 1; ++i) {\n      indices[i] = Math.floor(offset / strides[i]);\n      offset -= indices[i] * strides[i];\n    }\n    indices[indices.length - 1] = offset;\n    return indices;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank));\n  }\n\n  // Increment an index into a tensor (in lexicographic\n  // ordering), wrapping around the specified upper_bound.\n  /**\n   * Increment an index into a tensor (in lexicographic ordering), wrapping around the specified upper_bound.\n   * @param index Given index to increment (Will be mutated)\n   * @param dims The dimensions of the tensor for which the given index corresponds to\n   * @param axisToIncrementOn The 1-indexed axis to increment on. If undefined, axisToIncrementOn == rank\n   */\n  static incrementIndex(index: number[], dims: readonly number[], axisToIncrementOn?: number) {\n    if (dims.length === 0 || index.length === 0) {\n      throw new Error('Index incrementing unsupported for scalar Tensor');\n    }\n    if (axisToIncrementOn === undefined) {\n      axisToIncrementOn = dims.length;\n    } else {\n      if (axisToIncrementOn <= 0 || axisToIncrementOn > dims.length) {\n        throw new Error('Incorrect axis to increment on');\n      }\n    }\n\n    for (let k = axisToIncrementOn - 1; k >= 0; --k) {\n      index[k]++;\n      if (index[k] < dims[k]) {\n        break;\n      }\n      index[k] = 0;\n    }\n  }\n\n  /**\n   * Produces a new dimensions array based on the values in the 'originalDimensions' and 'shape' array\n   * Used in Reshape\n   * @param originalDims Original Shape array\n   * @param shapeHints array containing values to compute the new dimensions\n   * For example:\n   * originalDims = [2,2] and shapeHints = [0,-1] will return [2,2]\n   * originalDims = [2,2] and shapeHints = [4] will return [4]\n   * originalDims = [2,2] and shapeHints = [5] will throw an exception\n   * https://github.com/onnx/onnx/blob/main/docs/Operators.md#Reshape\n   */\n\n  static calculateReshapedDims(originalDims: readonly number[], shapeHints: ArrayLike<number>): number[] {\n    // reshape to a Scalar Tensor\n    if (shapeHints.length === 0) {\n      if (originalDims.length === 0 || ShapeUtil.size(originalDims) === 1) {\n        return [];\n      } else {\n        throw new Error('cannot reshape to a scalar Tensor');\n      }\n    }\n\n    const nDims = shapeHints.length;\n    const reshapedDims = new Array<number>(nDims);\n    let unknownDimension = -1;\n    let newTensorSize = 1;\n    for (let i = 0; i < nDims; i++) {\n      if (shapeHints[i] < -1) {\n        throw new Error('a dimension in shape hints cannot be less than -1');\n      }\n      if (shapeHints[i] === -1) {\n        if (unknownDimension !== -1) {\n          throw new Error('at most one dimension in shape hints can be -1');\n        }\n        unknownDimension = i;\n      } else {\n        if (shapeHints[i] === 0) {\n          if (i >= originalDims.length) {\n            throw new Error('the dimension with value zero exceeds the dimension size of the input tensor');\n          }\n          reshapedDims[i] = originalDims[i];\n        } else {\n          reshapedDims[i] = shapeHints[i];\n        }\n        newTensorSize *= reshapedDims[i];\n      }\n    }\n\n    const oldTensorSize = ShapeUtil.size(originalDims);\n    if (unknownDimension !== -1) {\n      if (oldTensorSize % newTensorSize !== 0) {\n        throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${\n            originalDims}] Output shape: [${shapeHints}]`);\n      }\n      reshapedDims[unknownDimension] = oldTensorSize / newTensorSize;\n    }\n    // validate sizes from originalDims and reshapedDims match\n    else {\n      if (newTensorSize !== oldTensorSize) {\n        throw new Error('reshapedDims and originalDims don\\'t have matching sizes');\n      }\n    }\n    return reshapedDims;\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n\n  /**\n   * Validates if the given `dims` or `shape` is valid in ONNX.js context and returns data size\n   * @param dims - input `dims` that needs to be checked\n   */\n  static validateDimsAndCalcSize(dims: readonly number[]): number {\n    if (dims.length > 6) {\n      throw new TypeError('Only rank 0 to 6 is supported for tensor shape.');\n    }\n    let size = 1;\n    for (const n of dims) {\n      if (!Number.isInteger(n)) {\n        throw new TypeError(`Invalid shape: ${n} is not an integer`);\n      }\n      if (n < 0 || n > 2147483647) {\n        throw new TypeError(`Invalid shape: length ${n} is not allowed`);\n      }\n      size *= n;\n    }\n    return size;\n  }\n\n  /**\n   * Determines the shape of output tensor y = flatten(x, axis)\n   * @param dims - shape of input tensor\n   * @param axis - flatten axis, in the range [-r, r]\n   */\n  static flattenShape(dims: readonly number[], axis: number): readonly number[] {\n    if (axis < 0) {\n      axis += dims.length;\n    }\n    const total = dims.reduce((x, y) => x * y, 1);\n    const right = dims.slice(axis).reduce((x, y) => x * y, 1);\n    const outputDims = [total / right, right];\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = squeeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - squeeze axes\n   */\n  static squeezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>();\n\n    // sanity check\n    axes = ShapeUtil.normalizeAxes(axes, dims.length);\n\n    for (let i = 0; i < dims.length; i++) {\n      const inSqueezeList = axes.indexOf(i) >= 0;\n      if (inSqueezeList && dims[i] !== 1) {\n        throw new Error('squeeze an axis of size different than 1');\n      }\n\n      if ((axes.length === 0 && dims[i] > 1) || (axes.length > 0 && !inSqueezeList)) {\n        outputDims.push(dims[i]);\n      }\n    }\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = unsqueeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - unsqueeze axes\n   */\n  static unsqueezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>(dims.length + axes.length);\n\n    // initialize the array elements to 0\n    outputDims.fill(0);\n\n    // set all axes indices to 1 in outputDims and check for duplicates\n    for (let i = 0; i < axes.length; i++) {\n      const axis = ShapeUtil.normalizeAxis(axes[i], outputDims.length);\n      if (axis >= outputDims.length) {\n        throw new Error('\\'axes\\' has an out of range axis');\n      }\n      if (outputDims[axis] !== 0) {\n        throw new Error('\\'axes\\' has a duplicate axis');\n      }\n\n      outputDims[axis] = 1;\n    }\n\n    // fill in the zero entries of outputDims with the input tensor's shape\n    let inputDimsIterator = 0;\n    for (let i = 0; i < outputDims.length; i++) {\n      if (outputDims[i] === 0) {\n        outputDims[i] = dims[inputDimsIterator++];\n      }\n    }\n\n    // sanity check assertion. 'inputDimsIterator'\n    // should be equal to the length of 'dims'\n    if (inputDimsIterator !== dims.length) {\n      throw new Error('the unsqueezed dimension could not be established');\n    }\n\n    return outputDims;\n  }\n}\n\n// bunch of helper methods that do a variety of math operations\nexport class MathUtil {\n  // y = (x*x) + y\n  static sqr(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += Math.pow(source[sourceIndex + offset], 2);\n    }\n  }\n\n  // y = ax + y\n  static axpy(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, alpha: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += (alpha * source[sourceIndex + offset]);\n    }\n  }\n\n  // y = pow(x, b)\n  static powx(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, b: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = Math.pow(source[sourceIndex + offset], b);\n    }\n  }\n\n  // y = x * y\n  static mul(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = (source[sourceIndex + offset] * target[targetIndex + offset]);\n    }\n  }\n}\n\nexport class SplitUtil {\n  /**\n   * Calculates new Shapes from existing one and the splits given along the axis provides\n   * @param dims Shape of the Tensor to be splitted into two or more Shapes\n   * @param axis The dimension along which the Tensor will be split\n   * @param splits Offsets for the start of each split\n   */\n  static splitShape(dims: readonly number[], axis: number, split: number[], numOutputs?: number):\n      [number[][], number[]] {\n    if (split.length === 0) {\n      if (!numOutputs) {\n        throw new Error('need to know number of outputs when the \\'split\\' attribute is not specified');\n      }\n      SplitUtil.determineSplit(dims[axis], numOutputs, split);\n    }\n\n    const shapes: number[][] = [];\n    const offsets = [0];\n    for (let i = 0; i < split.length; ++i) {\n      if (i !== 0) {\n        offsets.push(offsets[i - 1] + split[i - 1]);\n      }\n      const shape = dims.slice();\n      shape[axis] = split[i];\n      shapes.push(shape);\n    }\n    return [shapes, offsets];\n  }\n\n  static determineSplit(numElementsAlongAxis: number, numOutputs: number, split: number[]) {\n    // If 'split' is not specified by the user, we need to partition the number of elements equally among the outputs\n    if (numElementsAlongAxis % numOutputs !== 0) {\n      throw new Error('cannot split tensor to equal sized parts');\n    }\n    for (let i = 0; i < numOutputs; ++i) {\n      split.push(numElementsAlongAxis / numOutputs);\n    }\n  }\n}\n\nexport class ReduceUtil {\n  /**\n   * Perform reduce operations on the specific operator\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduce(\n      a: Tensor, axes: number[], keepdims: boolean, op1: (b: number) => number,\n      op2: (a: number, b: number) => number): Tensor {\n    const dims = a.dims.slice(0);\n    // if axes is not set, perform reduce on all axes\n    if (axes.length === 0) {\n      dims.forEach((d, ind) => axes.push(ind));\n    }\n    // get a temporary broadcastable output shape\n    const outputDims = ReduceUtil.calcReduceShape(dims, axes, true);\n\n    // loop through the output and calculate result one by one\n    const size = ShapeUtil.size(outputDims);\n    const y = new Tensor(outputDims, a.type);\n    const strides = ShapeUtil.computeStrides(outputDims);\n    const inputStrides = ShapeUtil.computeStrides(dims);\n    const indicesY = new Array(dims.length);\n    for (let i = 0; i < size; i++) {\n      const indices = ShapeUtil.offsetToIndices(i, strides);\n      // map index\n      BroadcastUtil.fillIndex(indices, dims, indicesY);\n      y.set(\n          indices,\n          ReduceUtil.calcReduceByAxis(\n              a.numberData, axes, dims, 0, ShapeUtil.indicesToOffset(indicesY, inputStrides), op1, op2));\n    }\n\n    if (keepdims) {\n      return y;\n    } else {\n      // keepdims == 0, calculate the expected shape\n      return new Tensor(\n          ReduceUtil.calcReduceShape(dims, axes, keepdims), y.type, undefined, undefined, y.data, y.dataId);\n    }\n  }\n\n  /**\n   * Perform reduce operations on the specific operator on specific axes\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param dims The input dimension.\n   * @param curAxisInd Index in axes specifying the current dimension along\n   *      which the tensor will be reduced\n   * @param pos The current index of element to perform operation\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduceByAxis(\n      input: Tensor.NumberType, axes: number[], dims: number[], curAxisInd: number, pos: number,\n      op1: (b: number) => number, op2: (a: number, b: number) => number): number {\n    let res = 0;\n    if (curAxisInd >= axes.length) {\n      return op1(input[pos]);\n    }\n    const axis = axes[curAxisInd];\n    const step = axis >= dims.length ? 1 : ShapeUtil.size(dims.slice(axis + 1));\n    for (let i = 0; i < dims[axis]; i++) {\n      res = i === 0 ? ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2) :\n                      op2(res, ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2));\n      pos += step;\n    }\n    return res;\n  }\n\n  /**\n   * Calculate the expected shape of a reduce operation\n   * @param dims The input tensor dimension\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   */\n  static calcReduceShape(dims: readonly number[], axes: readonly number[], keepDims: boolean): number[] {\n    const outputDims = dims.slice();\n    for (let i = 0; i < axes.length; i++) {\n      if (keepDims) {\n        outputDims[axes[i]] = 1;\n      } else {\n        outputDims[axes[i]] = 0;\n      }\n    }\n    return outputDims.filter(dim => dim !== 0);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      dilations: number[], pads: number[]) {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust dilation value\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < dilations.length) {\n        if (dilations[dim] < 0) {\n          throw new Error('dilations should be greater than or equal to 1');\n        }\n      } else {\n        dilations.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n          autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n\nexport const MIN_CLIP = -3.4028234663852886e+38;\nexport const MAX_CLIP = 3.4028234663852886e+38;\n\nexport function decodeUtf8String(buffer: Uint8Array): string {\n  return new TextDecoder().decode(buffer);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession} from 'onnxruntime-common';\n\nimport {OrtWasmMessage, SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionAllocateCallbacks: Array<PromiseCallbacks<SerializableModeldata>> = [];\nconst createSessionFinalizeCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create_allocate':\n      if (ev.data.err) {\n        createSessionAllocateCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionAllocateCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create_finalize':\n      if (ev.data.err) {\n        createSessionFinalizeCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionFinalizeCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initWasm = async(): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, +(scriptSrc).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : {numThreads, loggingLevel}};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.initOrt(numThreads, loggingLevel);\n  }\n};\n\nexport const createSessionAllocate = async(model: Uint8Array): Promise<SerializableModeldata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableModeldata>((resolve, reject) => {\n      createSessionAllocateCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create_allocate', in : {model}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSessionAllocate(model);\n  }\n};\n\nexport const createSessionFinalize = async(modeldata: SerializableModeldata, options?: InferenceSession.SessionOptions):\n    Promise<SerializableSessionMetadata> => {\n      if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n        ensureWorker();\n        return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n          createSessionFinalizeCallbacks.push([resolve, reject]);\n          const message: OrtWasmMessage = {type: 'create_finalize', in : {modeldata, options}};\n          proxyWorker!.postMessage(message);\n        });\n      } else {\n        return core.createSessionFinalize(modeldata, options);\n      }\n    };\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      throw new Error('Can\\'t create run options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\nimport {promisify} from 'util';\n\nimport {SerializableModeldata} from './proxy-messages';\nimport {createSession, createSessionAllocate, createSessionFinalize, endProfiling, initOrt, releaseSession, run} from './proxy-wrapper';\n\nlet ortInit: boolean;\n\n\nconst getLogLevel = (logLevel: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async createSessionAllocate(path: string): Promise<SerializableModeldata> {\n    // fetch model from url and move to wasm heap. The arraybufffer that held the http\n    // response is freed once we return\n    const response = await fetch(path);\n    const arrayBuffer = await response.arrayBuffer();\n    return createSessionAllocate(new Uint8Array(arrayBuffer));\n  }\n\n  async loadModel(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!ortInit) {\n      await initOrt(env.wasm.numThreads!, getLogLevel(env.logLevel!));\n      ortInit = true;\n    }\n\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof fetch === 'undefined') {\n        // node\n        const model = await promisify(readFile)(pathOrBuffer);\n        [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n      } else {\n        // browser\n        // fetch model and move to wasm heap.\n        const modelData: SerializableModeldata = await this.createSessionAllocate(pathOrBuffer);\n        // create the session\n        [this.sessionId, this.inputNames, this.outputNames] = await createSessionFinalize(modelData, options);\n      }\n    } else {\n      [this.sessionId, this.inputNames, this.outputNames] = await createSession(pathOrBuffer, options);\n    }\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n};\n\nconst setExecutionProviders =\n    (sessionOptionsHandle: number, executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n     allocs: number[]): void => {\n      for (const ep of executionProviders) {\n        let epName = typeof ep === 'string' ? ep : ep.name;\n\n        // check EP name\n        switch (epName) {\n          case 'xnnpack':\n            epName = 'XNNPACK';\n            break;\n          case 'wasm':\n          case 'cpu':\n            continue;\n          default:\n            throw new Error(`not supported EP: ${epName}`);\n        }\n\n        const epNameDataOffset = allocWasmString(epName, allocs);\n        if (getInstance()._OrtAppendExecutionProvider(sessionOptionsHandle, epNameDataOffset) !== 0) {\n          throw new Error(`Can't append execution provider: ${epName}`);\n        }\n      }\n    };\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    if (options?.graphOptimizationLevel === undefined) {\n      sessionOptions.graphOptimizationLevel = 'all';\n    }\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel!);\n\n    if (options?.enableCpuMemArena === undefined) {\n      sessionOptions.enableCpuMemArena = true;\n    }\n\n    if (options?.enableMemPattern === undefined) {\n      sessionOptions.enableMemPattern = true;\n    }\n\n    if (options?.executionMode === undefined) {\n      sessionOptions.executionMode = 'sequential';\n    }\n    const executionMode = getExecutionMode(sessionOptions.executionMode!);\n\n    let logIdDataOffset = 0;\n    if (options?.logId !== undefined) {\n      logIdDataOffset = allocWasmString(options.logId, allocs);\n    }\n\n    if (options?.logSeverityLevel === undefined) {\n      sessionOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      sessionOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.enableProfiling === undefined) {\n      sessionOptions.enableProfiling = false;\n    }\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena!, !!sessionOptions.enableMemPattern!, executionMode,\n        !!sessionOptions.enableProfiling!, 0, logIdDataOffset, sessionOptions.logSeverityLevel!,\n        sessionOptions.logVerbosityLevel!);\n    if (sessionOptionsHandle === 0) {\n      throw new Error('Can\\'t create session options');\n    }\n\n    if (options?.executionProviders) {\n      setExecutionProviders(sessionOptionsHandle, options.executionProviders, allocs);\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nexport const initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\n  }\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSessionAllocate = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\nexport const createSessionFinalize =\n    (modelData: SerializableModeldata, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        sessionHandle = wasm._OrtCreateSession(modelData[0], modelData[1], sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          throw new Error('Can\\'t create a session');\n        }\n      } finally {\n        wasm._free(modelData[0]);\n        wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        allocs.forEach(wasm._free);\n      }\n\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\n\n      const inputNames = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNames = [];\n      const outputNamesUTF8Encoded = [];\n      for (let i = 0; i < inputCount; i++) {\n        const name = wasm._OrtGetInputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an input name');\n        }\n        inputNamesUTF8Encoded.push(name);\n        inputNames.push(wasm.UTF8ToString(name));\n      }\n      for (let i = 0; i < outputCount; i++) {\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an output name');\n        }\n        outputNamesUTF8Encoded.push(name);\n        outputNames.push(wasm.UTF8ToString(name));\n      }\n\n      activeSessions.set(sessionHandle, [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n      return [sessionHandle, inputNames, outputNames];\n    };\n\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const modelData: SerializableModeldata = createSessionAllocate(model);\n      return createSessionFinalize(modelData, options);\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions.delete(sessionId);\n};\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nconst enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n\nconst tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\nconst tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\nconst numericTensorTypeToTypedArray = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * perform inference run\n */\nexport const run =\n    (sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n     options: InferenceSession.RunOptions): SerializableTensor[] => {\n      const wasm = getInstance();\n      const session = activeSessions.get(sessionId);\n      if (!session) {\n        throw new Error('invalid session id');\n      }\n      const sessionHandle = session[0];\n      const inputNamesUTF8Encoded = session[1];\n      const outputNamesUTF8Encoded = session[2];\n\n      const inputCount = inputIndices.length;\n      const outputCount = outputIndices.length;\n\n      let runOptionsHandle = 0;\n      let runOptionsAllocs: number[] = [];\n\n      const inputValues: number[] = [];\n      const inputAllocs: number[] = [];\n\n      try {\n        [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n        // create input tensors\n        for (let i = 0; i < inputCount; i++) {\n          const dataType = inputs[i][0];\n          const dims = inputs[i][1];\n          const data = inputs[i][2];\n\n          let dataOffset: number;\n          let dataByteLength: number;\n\n          if (Array.isArray(data)) {\n            // string tensor\n            dataByteLength = 4 * data.length;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            let dataIndex = dataOffset / 4;\n            for (let i = 0; i < data.length; i++) {\n              if (typeof data[i] !== 'string') {\n                throw new TypeError(`tensor data at index ${i} is not a string`);\n              }\n              wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n            }\n          } else {\n            dataByteLength = data.byteLength;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n          }\n\n          const stack = wasm.stackSave();\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\n          try {\n            let dimIndex = dimsOffset / 4;\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n            const tensor = wasm._OrtCreateTensor(\n                tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n            if (tensor === 0) {\n              throw new Error('Can\\'t create a tensor');\n            }\n            inputValues.push(tensor);\n          } finally {\n            wasm.stackRestore(stack);\n          }\n        }\n\n        const beforeRunStack = wasm.stackSave();\n        const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n        const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n        const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n        const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n        try {\n          let inputValuesIndex = inputValuesOffset / 4;\n          let inputNamesIndex = inputNamesOffset / 4;\n          let outputValuesIndex = outputValuesOffset / 4;\n          let outputNamesIndex = outputNamesOffset / 4;\n          for (let i = 0; i < inputCount; i++) {\n            wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n            wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n          }\n          for (let i = 0; i < outputCount; i++) {\n            wasm.HEAPU32[outputValuesIndex++] = 0;\n            wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n          }\n\n          // support RunOptions\n          let errorCode = wasm._OrtRun(\n              sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n              outputValuesOffset, runOptionsHandle);\n\n          const output: SerializableTensor[] = [];\n\n          if (errorCode === 0) {\n            for (let i = 0; i < outputCount; i++) {\n              const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n              const beforeGetTensorDataStack = wasm.stackSave();\n              // stack allocate 4 pointer value\n              const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n              let type: Tensor.Type|undefined, dataOffset = 0;\n              try {\n                errorCode = wasm._OrtGetTensorData(\n                    tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n                if (errorCode !== 0) {\n                  throw new Error(`Can't access output tensor data. error code = ${errorCode}`);\n                }\n                let tensorDataIndex = tensorDataOffset / 4;\n                const dataType = wasm.HEAPU32[tensorDataIndex++];\n                dataOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n                const dims = [];\n                for (let i = 0; i < dimsLength; i++) {\n                  dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n                }\n                wasm._OrtFree(dimsOffset);\n\n                const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n                type = tensorDataTypeEnumToString(dataType);\n                if (type === 'string') {\n                  const stringData: string[] = [];\n                  let dataIndex = dataOffset / 4;\n                  for (let i = 0; i < size; i++) {\n                    const offset = wasm.HEAPU32[dataIndex++];\n                    const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n                    stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n                  }\n                  output.push([type, dims, stringData]);\n                } else {\n                  const typedArrayConstructor = numericTensorTypeToTypedArray(type);\n                  const data = new typedArrayConstructor(size);\n                  new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                      .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n                  output.push([type, dims, data]);\n                }\n              } finally {\n                wasm.stackRestore(beforeGetTensorDataStack);\n                if (type === 'string' && dataOffset) {\n                  wasm._free(dataOffset);\n                }\n                wasm._OrtReleaseTensor(tensor);\n              }\n            }\n          }\n\n          if (errorCode === 0) {\n            return output;\n          } else {\n            throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\n          }\n        } finally {\n          wasm.stackRestore(beforeRunStack);\n        }\n      } finally {\n        inputValues.forEach(wasm._OrtReleaseTensor);\n        inputAllocs.forEach(wasm._free);\n\n        wasm._OrtReleaseRunOptions(runOptionsHandle);\n        runOptionsAllocs.forEach(wasm._free);\n      }\n    };\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    throw new Error('Can\\'t get an profile file name');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\nimport ortWasmFactory from './binding/ort-wasm.js';\n\nconst ortWasmFactoryThreaded: EmscriptenModuleFactory<OrtWasmModule> =\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    !BUILD_DEFS.DISABLE_WASM_THREAD ? require('./binding/ort-wasm-threaded.js') : ortWasmFactory;\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(new Uint8Array([\n      0,   97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1,   28,  0, 65, 0,\n      253, 15, 253, 12,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0,  0,  253, 186, 1, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPrefixOverride = typeof flags.wasmPaths === 'string' ? flags.wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(false, useThreads);\n  const wasmOverrideFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof flags.wasmPaths === 'object' ? flags.wasmPaths[wasmOverrideFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads && fileName.endsWith('.worker.js') &&\n            typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName === wasmFileName) {\n          const prefix: string = wasmPrefixOverride ?? scriptDirectory;\n          return wasmPathOverride ?? prefix + wasmOverrideFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode = `var ortWasmThreaded=(function(){var _scriptDir;return ${factory.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","\nimport worker from \"!!../../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"/*!\\n* ONNX Runtime Web v1.14.0\\n* Copyright (c) Microsoft Corporation. All rights reserved.\\n* Licensed under the MIT License.\\n*/\\n(()=>{var t={474:(t,e,n)=>{var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(t){function e(){return j.buffer!=D&&N(j.buffer),P}function r(){return j.buffer!=D&&N(j.buffer),U}function a(){return j.buffer!=D&&N(j.buffer),F}function i(){return j.buffer!=D&&N(j.buffer),I}function o(){return j.buffer!=D&&N(j.buffer),W}var u,c,s;t=t||{},u||(u=void 0!==t?t:{}),u.ready=new Promise((function(t,e){c=t,s=e}));var l,f,p,h,d,y,b=Object.assign({},u),m=\\\"./this.program\\\",g=(t,e)=>{throw e},v=\\\"object\\\"==typeof window,w=\\\"function\\\"==typeof importScripts,_=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,O=u.ENVIRONMENT_IS_PTHREAD||!1,A=\\\"\\\";function S(t){return u.locateFile?u.locateFile(t,A):A+t}if(_){let e;A=w?n(908).dirname(A)+\\\"/\\\":\\\"//\\\",y=()=>{d||(h=n(384),d=n(908))},l=function(t,e){return y(),t=d.normalize(t),h.readFileSync(t,e?void 0:\\\"utf8\\\")},p=t=>((t=l(t,!0)).buffer||(t=new Uint8Array(t)),t),f=(t,e,n)=>{y(),t=d.normalize(t),h.readFile(t,(function(t,r){t?n(t):e(r.buffer)}))},1<process.argv.length&&(m=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(t){if(!(t instanceof ct))throw t})),process.on(\\\"unhandledRejection\\\",(function(t){throw t})),g=(t,e)=>{if(Q())throw process.exitCode=t,e;e instanceof ct||x(\\\"exiting due to exception: \\\"+e),process.exit(t)},u.inspect=function(){return\\\"[Emscripten Module object]\\\"};try{e=n(925)}catch(t){throw console.error('The \\\"worker_threads\\\" module is not supported in this node.js build - perhaps a newer version is needed?'),t}n.g.Worker=e.Worker}else(v||w)&&(w?A=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(A=document.currentScript.src),_scriptDir&&(A=_scriptDir),A=0!==A.indexOf(\\\"blob:\\\")?A.substr(0,A.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",_||(l=t=>{var e=new XMLHttpRequest;return e.open(\\\"GET\\\",t,!1),e.send(null),e.responseText},w&&(p=t=>{var e=new XMLHttpRequest;return e.open(\\\"GET\\\",t,!1),e.responseType=\\\"arraybuffer\\\",e.send(null),new Uint8Array(e.response)}),f=(t,e,n)=>{var r=new XMLHttpRequest;r.open(\\\"GET\\\",t,!0),r.responseType=\\\"arraybuffer\\\",r.onload=()=>{200==r.status||0==r.status&&r.response?e(r.response):n()},r.onerror=n,r.send(null)}));_&&\\\"undefined\\\"==typeof performance&&(n.g.performance=n(953).performance);var T=console.log.bind(console),E=console.warn.bind(console);_&&(y(),T=t=>h.writeSync(1,t+\\\"\\\\n\\\"),E=t=>h.writeSync(2,t+\\\"\\\\n\\\"));var M,C=u.print||T,x=u.printErr||E;Object.assign(u,b),b=null,u.thisProgram&&(m=u.thisProgram),u.quit&&(g=u.quit),u.wasmBinary&&(M=u.wasmBinary);var R=u.noExitRuntime||!1;\\\"object\\\"!=typeof WebAssembly&&at(\\\"no native wasm support detected\\\");var j,k,D,P,U,F,I,W,H=!1,L=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function z(t,e,n){var r=(e>>>=0)+n;for(n=e;t[n]&&!(n>=r);)++n;if(16<n-e&&t.buffer&&L)return L.decode(t.buffer instanceof SharedArrayBuffer?t.slice(e,n):t.subarray(e,n));for(r=\\\"\\\";e<n;){var a=t[e++];if(128&a){var i=63&t[e++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|i);else{var o=63&t[e++];65536>(a=224==(240&a)?(15&a)<<12|i<<6|o:(7&a)<<18|i<<12|o<<6|63&t[e++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function Y(t,e){return(t>>>=0)?z(r(),t,e):\\\"\\\"}function B(t,e,n,r){if(!(0<r))return 0;var a=n>>>=0;r=n+r-1;for(var i=0;i<t.length;++i){var o=t.charCodeAt(i);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++i)),127>=o){if(n>=r)break;e[n++>>>0]=o}else{if(2047>=o){if(n+1>=r)break;e[n++>>>0]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;e[n++>>>0]=224|o>>12}else{if(n+3>=r)break;e[n++>>>0]=240|o>>18,e[n++>>>0]=128|o>>12&63}e[n++>>>0]=128|o>>6&63}e[n++>>>0]=128|63&o}}return e[n>>>0]=0,n-a}function G(t){for(var e=0,n=0;n<t.length;++n){var r=t.charCodeAt(n);127>=r?e++:2047>=r?e+=2:55296<=r&&57343>=r?(e+=4,++n):e+=3}return e}function N(t){D=t,u.HEAP8=P=new Int8Array(t),u.HEAP16=new Int16Array(t),u.HEAP32=F=new Int32Array(t),u.HEAPU8=U=new Uint8Array(t),u.HEAPU16=new Uint16Array(t),u.HEAPU32=I=new Uint32Array(t),u.HEAPF32=new Float32Array(t),u.HEAPF64=W=new Float64Array(t)}O&&(D=u.buffer);var V=u.INITIAL_MEMORY||16777216;if(O)j=u.wasmMemory,D=u.buffer;else if(u.wasmMemory)j=u.wasmMemory;else if(!((j=new WebAssembly.Memory({initial:V/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw x(\\\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\\\"),_&&console.log(\\\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\\\"),Error(\\\"bad memory\\\");j&&(D=j.buffer),V=D.byteLength,N(D);var $,q=[],X=[],J=[],Z=[];function Q(){return R||!1}function K(){var t=u.preRun.shift();q.unshift(t)}var tt,et=0,nt=null,rt=null;function at(t){throw O?postMessage({cmd:\\\"onAbort\\\",arg:t}):u.onAbort&&u.onAbort(t),x(t=\\\"Aborted(\\\"+t+\\\")\\\"),H=!0,t=new WebAssembly.RuntimeError(t+\\\". Build with -sASSERTIONS for more info.\\\"),s(t),t}function it(){return tt.startsWith(\\\"data:application/octet-stream;base64,\\\")}function ot(){var t=tt;try{if(t==tt&&M)return new Uint8Array(M);if(p)return p(t);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(t){at(t)}}tt=\\\"ort-wasm-threaded.wasm\\\",it()||(tt=S(tt));var ut={};function ct(t){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+t+\\\")\\\",this.status=t}function st(t){(t=ht.Vb[t])||at(),ht.mc(t)}function lt(t){var e=ht.Cc();if(!e)return 6;ht.ac.push(e),ht.Vb[t.Ub]=e,e.Ub=t.Ub;var n={cmd:\\\"run\\\",start_routine:t.Ic,arg:t.zc,pthread_ptr:t.Ub};return e.$b=()=>{n.time=performance.now(),e.postMessage(n,t.Nc)},e.loaded&&(e.$b(),delete e.$b),0}function ft(t){if(O)return $t(1,1,t);Q()||(ht.oc(),u.onExit&&u.onExit(t),H=!0),g(t,new ct(t))}function pt(t,e){if(!e&&O)throw bt(t),\\\"unwind\\\";Q()||O||(me(),dt(J),be(0),re[1].length&&ae(1,10),re[2].length&&ae(2,10),ht.oc()),ft(t)}var ht={Yb:[],ac:[],qc:[],Vb:{},fc:function(){O&&ht.Ec()},Pc:function(){},Ec:function(){ht.receiveObjectTransfer=ht.Gc,ht.threadInitTLS=ht.pc,ht.setExitStatus=ht.nc,R=!1},nc:function(){},oc:function(){for(var t of Object.values(ht.Vb))ht.mc(t);for(t of ht.Yb)t.terminate();ht.Yb=[]},mc:function(t){var e=t.Ub;delete ht.Vb[e],ht.Yb.push(t),ht.ac.splice(ht.ac.indexOf(t),1),t.Ub=0,Oe(e)},Gc:function(){},pc:function(){ht.qc.forEach((t=>t()))},Fc:function(t,e){t.onmessage=n=>{var r=(n=n.data).cmd;if(t.Ub&&(ht.Bc=t.Ub),n.targetThread&&n.targetThread!=he()){var a=ht.Vb[n.Qc];a?a.postMessage(n,n.transferList):x('Internal error! Worker sent a message \\\"'+r+'\\\" to target pthread '+n.targetThread+\\\", but that thread no longer exists!\\\")}else\\\"processProxyingQueue\\\"===r?zt(n.queue):\\\"spawnThread\\\"===r?lt(n):\\\"cleanupThread\\\"===r?st(n.thread):\\\"killThread\\\"===r?(n=n.thread,r=ht.Vb[n],delete ht.Vb[n],r.terminate(),Oe(n),ht.ac.splice(ht.ac.indexOf(r),1),r.Ub=0):\\\"cancelThread\\\"===r?ht.Vb[n.thread].postMessage({cmd:\\\"cancel\\\"}):\\\"loaded\\\"===r?(t.loaded=!0,e&&e(t),t.$b&&(t.$b(),delete t.$b)):\\\"print\\\"===r?C(\\\"Thread \\\"+n.threadId+\\\": \\\"+n.text):\\\"printErr\\\"===r?x(\\\"Thread \\\"+n.threadId+\\\": \\\"+n.text):\\\"alert\\\"===r?alert(\\\"Thread \\\"+n.threadId+\\\": \\\"+n.text):\\\"setimmediate\\\"===n.target?t.postMessage(n):\\\"onAbort\\\"===r?u.onAbort&&u.onAbort(n.arg):r&&x(\\\"worker sent an unknown command \\\"+r);ht.Bc=void 0},t.onerror=t=>{throw x(\\\"worker sent an error! \\\"+t.filename+\\\":\\\"+t.lineno+\\\": \\\"+t.message),t},_&&(t.on(\\\"message\\\",(function(e){t.onmessage({data:e})})),t.on(\\\"error\\\",(function(e){t.onerror(e)})),t.on(\\\"detachedExit\\\",(function(){}))),t.postMessage({cmd:\\\"load\\\",urlOrBlob:u.mainScriptUrlOrBlob||_scriptDir,wasmMemory:j,wasmModule:k})},yc:function(){var t=S(\\\"ort-wasm-threaded.worker.js\\\");ht.Yb.push(new Worker(t))},Cc:function(){return 0==ht.Yb.length&&(ht.yc(),ht.Fc(ht.Yb[0])),ht.Yb.pop()}};function dt(t){for(;0<t.length;)t.shift()(u)}function yt(t){var e=Ee();return t=t(),Me(e),t}function bt(t){if(O)return $t(2,0,t);try{pt(t)}catch(t){t instanceof ct||\\\"unwind\\\"==t||g(1,t)}}u.PThread=ht,u.establishStackSpace=function(){var t=he(),e=a()[t+44>>2>>>0];t=a()[t+48>>2>>>0],Te(e,e-t),Me(e)};var mt=[];function gt(t){var e=mt[t];return e||(t>=mt.length&&(mt.length=t+1),mt[t]=e=$.get(t)),e}u.invokeEntryPoint=function(t,e){t=gt(t)(e),Q()?ht.nc(t):Ae(t)};var vt,wt,_t=[],Ot=0,At=0;function St(t){this.Zb=t,this.Sb=t-24,this.xc=function(t){i()[this.Sb+4>>2>>>0]=t},this.bc=function(){return i()[this.Sb+4>>2>>>0]},this.wc=function(t){i()[this.Sb+8>>2>>>0]=t},this.Dc=function(){return i()[this.Sb+8>>2>>>0]},this.rc=function(){a()[this.Sb>>2>>>0]=0},this.hc=function(t){t=t?1:0,e()[this.Sb+12>>0>>>0]=t},this.uc=function(){return 0!=e()[this.Sb+12>>0>>>0]},this.ic=function(t){t=t?1:0,e()[this.Sb+13>>0>>>0]=t},this.kc=function(){return 0!=e()[this.Sb+13>>0>>>0]},this.fc=function(t,e){this.cc(0),this.xc(t),this.wc(e),this.rc(),this.hc(!1),this.ic(!1)},this.sc=function(){Atomics.add(a(),this.Sb>>2,1)},this.Hc=function(){return 1===Atomics.sub(a(),this.Sb>>2,1)},this.cc=function(t){i()[this.Sb+16>>2>>>0]=t},this.tc=function(){return i()[this.Sb+16>>2>>>0]},this.vc=function(){if(Re(this.bc()))return i()[this.Zb>>2>>>0];var t=this.tc();return 0!==t?t:this.Zb}}function Tt(t){return ye(new St(t).Sb)}function Et(t,e,n,r){return O?$t(3,1,t,e,n,r):Mt(t,e,n,r)}function Mt(t,e,n,r){if(\\\"undefined\\\"==typeof SharedArrayBuffer)return x(\\\"Current environment does not support SharedArrayBuffer, pthreads are not available!\\\"),6;var a=[];return O&&0===a.length?Et(t,e,n,r):(t={Ic:n,Ub:t,zc:r,Nc:a},O?(t.Oc=\\\"spawnThread\\\",postMessage(t,a),0):lt(t))}function Ct(t,e,n){return O?$t(4,1,t,e,n):0}function xt(t,e){if(O)return $t(5,1,t,e)}function Rt(t,e){if(O)return $t(6,1,t,e)}function jt(t,e,n){if(O)return $t(7,1,t,e,n)}function kt(t,e,n){return O?$t(8,1,t,e,n):0}function Dt(t,e){if(O)return $t(9,1,t,e)}function Pt(t,e,n){if(O)return $t(10,1,t,e,n)}function Ut(t,e,n,r){if(O)return $t(11,1,t,e,n,r)}function Ft(t,e,n,r){if(O)return $t(12,1,t,e,n,r)}function It(t,e,n,r){if(O)return $t(13,1,t,e,n,r)}function Wt(t){if(O)return $t(14,1,t)}function Ht(t,e){if(O)return $t(15,1,t,e)}function Lt(t,e,n){if(O)return $t(16,1,t,e,n)}function zt(t){Atomics.store(a(),t>>2,1),he()&&_e(t),Atomics.compareExchange(a(),t>>2,1,0)}function Yt(t){return i()[t>>>2]+4294967296*a()[t+4>>>2]}function Bt(t,e,n,r,a,i){return O?$t(17,1,t,e,n,r,a,i):-52}function Gt(t,e,n,r,a,i){if(O)return $t(18,1,t,e,n,r,a,i)}function Nt(t){var n=G(t)+1,r=de(n);return r&&B(t,e(),r,n),r}function Vt(t,e,n){function r(t){return(t=t.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?t[1]:\\\"GMT\\\"}if(O)return $t(19,1,t,e,n);var o=(new Date).getFullYear(),u=new Date(o,0,1),c=new Date(o,6,1);o=u.getTimezoneOffset();var s=c.getTimezoneOffset(),l=Math.max(o,s);a()[t>>2>>>0]=60*l,a()[e>>2>>>0]=Number(o!=s),t=r(u),e=r(c),t=Nt(t),e=Nt(e),s<o?(i()[n>>2>>>0]=t,i()[n+4>>2>>>0]=e):(i()[n>>2>>>0]=e,i()[n+4>>2>>>0]=t)}function $t(t,e){var n=arguments.length-2,r=arguments;return yt((()=>{for(var a=Ce(8*n),i=a>>3,u=0;u<n;u++){var c=r[2+u];o()[i+u>>>0]=c}return we(t,n,a,e)}))}u.executeNotifiedProxyingQueue=zt,wt=_?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:O?()=>performance.now()-u.__performance_now_clock_drift:()=>performance.now();var qt,Xt=[],Jt={};function Zt(){if(!qt){var t,e={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:m||\\\"./this.program\\\"};for(t in Jt)void 0===Jt[t]?delete e[t]:e[t]=Jt[t];var n=[];for(t in e)n.push(t+\\\"=\\\"+e[t]);qt=n}return qt}function Qt(t,n){if(O)return $t(20,1,t,n);var r=0;return Zt().forEach((function(a,o){var u=n+r;for(o=i()[t+4*o>>2>>>0]=u,u=0;u<a.length;++u)e()[o++>>0>>>0]=a.charCodeAt(u);e()[o>>0>>>0]=0,r+=a.length+1})),0}function Kt(t,e){if(O)return $t(21,1,t,e);var n=Zt();i()[t>>2>>>0]=n.length;var r=0;return n.forEach((function(t){r+=t.length+1})),i()[e>>2>>>0]=r,0}function te(t){return O?$t(22,1,t):52}function ee(t,e,n,r){return O?$t(23,1,t,e,n,r):52}function ne(t,e,n,r,a){return O?$t(24,1,t,e,n,r,a):70}var re=[null,[],[]];function ae(t,e){var n=re[t];0===e||10===e?((1===t?C:x)(z(n,0)),n.length=0):n.push(e)}function ie(t,e,n,a){if(O)return $t(25,1,t,e,n,a);for(var o=0,u=0;u<n;u++){var c=i()[e>>2>>>0],s=i()[e+4>>2>>>0];e+=8;for(var l=0;l<s;l++)ae(t,r()[c+l>>>0]);o+=s}return i()[a>>2>>>0]=o,0}var oe=0;function ue(t){return 0==t%4&&(0!=t%100||0==t%400)}var ce=[31,29,31,30,31,30,31,31,30,31,30,31],se=[31,28,31,30,31,30,31,31,30,31,30,31];function le(t,n,r,i){function o(t,e,n){for(t=\\\"number\\\"==typeof t?t.toString():t||\\\"\\\";t.length<e;)t=n[0]+t;return t}function u(t,e){return o(t,e,\\\"0\\\")}function c(t,e){function n(t){return 0>t?-1:0<t?1:0}var r;return 0===(r=n(t.getFullYear()-e.getFullYear()))&&0===(r=n(t.getMonth()-e.getMonth()))&&(r=n(t.getDate()-e.getDate())),r}function s(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function l(t){var e=t.Wb;for(t=new Date(new Date(t.Xb+1900,0,1).getTime());0<e;){var n=t.getMonth(),r=(ue(t.getFullYear())?ce:se)[n];if(!(e>r-t.getDate())){t.setDate(t.getDate()+e);break}e-=r-t.getDate()+1,t.setDate(1),11>n?t.setMonth(n+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return n=new Date(t.getFullYear()+1,0,4),e=s(new Date(t.getFullYear(),0,4)),n=s(n),0>=c(e,t)?0>=c(n,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var f=a()[i+40>>2>>>0];for(var p in i={Lc:a()[i>>2>>>0],Kc:a()[i+4>>2>>>0],dc:a()[i+8>>2>>>0],jc:a()[i+12>>2>>>0],ec:a()[i+16>>2>>>0],Xb:a()[i+20>>2>>>0],Tb:a()[i+24>>2>>>0],Wb:a()[i+28>>2>>>0],Rc:a()[i+32>>2>>>0],Jc:a()[i+36>>2>>>0],Mc:f?Y(f):\\\"\\\"},r=Y(r),f={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})r=r.replace(new RegExp(p,\\\"g\\\"),f[p]);var h=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),d=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(p in f={\\\"%a\\\":function(t){return h[t.Tb].substring(0,3)},\\\"%A\\\":function(t){return h[t.Tb]},\\\"%b\\\":function(t){return d[t.ec].substring(0,3)},\\\"%B\\\":function(t){return d[t.ec]},\\\"%C\\\":function(t){return u((t.Xb+1900)/100|0,2)},\\\"%d\\\":function(t){return u(t.jc,2)},\\\"%e\\\":function(t){return o(t.jc,2,\\\" \\\")},\\\"%g\\\":function(t){return l(t).toString().substring(2)},\\\"%G\\\":function(t){return l(t)},\\\"%H\\\":function(t){return u(t.dc,2)},\\\"%I\\\":function(t){return 0==(t=t.dc)?t=12:12<t&&(t-=12),u(t,2)},\\\"%j\\\":function(t){for(var e=0,n=0;n<=t.ec-1;e+=(ue(t.Xb+1900)?ce:se)[n++]);return u(t.jc+e,3)},\\\"%m\\\":function(t){return u(t.ec+1,2)},\\\"%M\\\":function(t){return u(t.Kc,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(t){return 0<=t.dc&&12>t.dc?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(t){return u(t.Lc,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(t){return t.Tb||7},\\\"%U\\\":function(t){return u(Math.floor((t.Wb+7-t.Tb)/7),2)},\\\"%V\\\":function(t){var e=Math.floor((t.Wb+7-(t.Tb+6)%7)/7);if(2>=(t.Tb+371-t.Wb-2)%7&&e++,e)53==e&&(4==(n=(t.Tb+371-t.Wb)%7)||3==n&&ue(t.Xb)||(e=1));else{e=52;var n=(t.Tb+7-t.Wb-1)%7;(4==n||5==n&&ue(t.Xb%400-1))&&e++}return u(e,2)},\\\"%w\\\":function(t){return t.Tb},\\\"%W\\\":function(t){return u(Math.floor((t.Wb+7-(t.Tb+6)%7)/7),2)},\\\"%y\\\":function(t){return(t.Xb+1900).toString().substring(2)},\\\"%Y\\\":function(t){return t.Xb+1900},\\\"%z\\\":function(t){var e=0<=(t=t.Jc);return t=Math.abs(t)/60,(e?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(t/60*100+t%60)).slice(-4)},\\\"%Z\\\":function(t){return t.Mc},\\\"%%\\\":function(){return\\\"%\\\"}},r=r.replace(/%%/g,\\\"\\\\0\\\\0\\\"),f)r.includes(p)&&(r=r.replace(new RegExp(p,\\\"g\\\"),f[p](i)));return p=function(t){var e=Array(G(t)+1);return B(t,e,0,e.length),e}(r=r.replace(/\\\\0\\\\0/g,\\\"%\\\")),p.length>n?0:(function(t,n){e().set(t,n>>>0)}(p,t),p.length-1)}ht.fc();var fe=[null,ft,bt,Et,Ct,xt,Rt,jt,kt,Dt,Pt,Ut,Ft,It,Wt,Ht,Lt,Bt,Gt,Vt,Qt,Kt,te,ee,ne,ie],pe={b:function(t){return de(t+24)+24},n:function(t){return(t=new St(t)).uc()||(t.hc(!0),Ot--),t.ic(!1),_t.push(t),t.sc(),t.vc()},ma:function(t){throw x(\\\"Unexpected exception thrown, this is not properly supported - aborting\\\"),H=!0,t},x:function(){Se(0);var t=_t.pop();if(t.Hc()&&!t.kc()){var e=t.Dc();e&&gt(e)(t.Zb),Tt(t.Zb)}At=0},e:function(){var t=At;if(!t)return oe=0;var e=new St(t);e.cc(t);var n=e.bc();if(!n)return oe=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(xe(i,n,e.Sb+16))return oe=i,t}return oe=n,t},l:function(){var t=At;if(!t)return oe=0;var e=new St(t);e.cc(t);var n=e.bc();if(!n)return oe=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(xe(i,n,e.Sb+16))return oe=i,t}return oe=n,t},h:function(){var t=At;if(!t)return oe=0;var e=new St(t);e.cc(t);var n=e.bc();if(!n)return oe=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(xe(i,n,e.Sb+16))return oe=i,t}return oe=n,t},t:Tt,M:function(){var t=_t.pop();t||at(\\\"no exception to throw\\\");var e=t.Zb;throw t.kc()||(_t.push(t),t.ic(!0),t.hc(!1),Ot++),At=e,e},c:function(t,e,n){throw new St(t).fc(e,n),At=t,Ot++,t},pa:function(){return Ot},Fa:function(t){ge(t,!w,1,!v),ht.pc()},T:function(t){O?postMessage({cmd:\\\"cleanupThread\\\",thread:t}):st(t)},xa:Mt,j:function(t){throw At||(At=t),t},H:Ct,Ma:xt,ua:Rt,wa:jt,oa:kt,Ka:Dt,Ca:Pt,Ja:Ut,V:Ft,va:It,sa:Wt,La:Ht,ta:Lt,Ta:function(){},X:function(){at(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Ua:function(){at(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},W:function(){return Date.now()},ya:function(){return 2097152},Oa:function(){return!0},za:function(t,e,n,r){if(t==e)setTimeout((()=>zt(r)));else if(O)postMessage({targetThread:t,cmd:\\\"processProxyingQueue\\\",queue:r});else{if(!(t=ht.Vb[t]))return;t.postMessage({cmd:\\\"processProxyingQueue\\\",queue:r})}return 1},Ea:function(){return-1},Pa:function(t,e){t=new Date(1e3*Yt(t)),a()[e>>2>>>0]=t.getUTCSeconds(),a()[e+4>>2>>>0]=t.getUTCMinutes(),a()[e+8>>2>>>0]=t.getUTCHours(),a()[e+12>>2>>>0]=t.getUTCDate(),a()[e+16>>2>>>0]=t.getUTCMonth(),a()[e+20>>2>>>0]=t.getUTCFullYear()-1900,a()[e+24>>2>>>0]=t.getUTCDay(),t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[e+28>>2>>>0]=t},Qa:function(t,e){t=new Date(1e3*Yt(t)),a()[e>>2>>>0]=t.getSeconds(),a()[e+4>>2>>>0]=t.getMinutes(),a()[e+8>>2>>>0]=t.getHours(),a()[e+12>>2>>>0]=t.getDate(),a()[e+16>>2>>>0]=t.getMonth(),a()[e+20>>2>>>0]=t.getFullYear()-1900,a()[e+24>>2>>>0]=t.getDay();var n=new Date(t.getFullYear(),0,1),r=(t.getTime()-n.getTime())/864e5|0;a()[e+28>>2>>>0]=r,a()[e+36>>2>>>0]=-60*t.getTimezoneOffset(),r=new Date(t.getFullYear(),6,1).getTimezoneOffset(),t=0|(r!=(n=n.getTimezoneOffset())&&t.getTimezoneOffset()==Math.min(n,r)),a()[e+32>>2>>>0]=t},Ra:function(t){var e=new Date(a()[t+20>>2>>>0]+1900,a()[t+16>>2>>>0],a()[t+12>>2>>>0],a()[t+8>>2>>>0],a()[t+4>>2>>>0],a()[t>>2>>>0],0),n=a()[t+32>>2>>>0],r=e.getTimezoneOffset(),i=new Date(e.getFullYear(),0,1),o=new Date(e.getFullYear(),6,1).getTimezoneOffset(),u=i.getTimezoneOffset(),c=Math.min(u,o);return 0>n?a()[t+32>>2>>>0]=Number(o!=u&&c==r):0<n!=(c==r)&&(o=Math.max(u,o),e.setTime(e.getTime()+6e4*((0<n?c:o)-r))),a()[t+24>>2>>>0]=e.getDay(),n=(e.getTime()-i.getTime())/864e5|0,a()[t+28>>2>>>0]=n,a()[t>>2>>>0]=e.getSeconds(),a()[t+4>>2>>>0]=e.getMinutes(),a()[t+8>>2>>>0]=e.getHours(),a()[t+12>>2>>>0]=e.getDate(),a()[t+16>>2>>>0]=e.getMonth(),e.getTime()/1e3|0},Aa:Bt,Ba:Gt,Sa:function t(e,n,r){t.Ac||(t.Ac=!0,Vt(e,n,r))},y:function(){at(\\\"\\\")},U:function(){if(!_&&!w){var t=\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\";vt||(vt={}),vt[t]||(vt[t]=1,_&&(t=\\\"warning: \\\"+t),x(t))}},ra:function(){return 4294901760},B:wt,Ia:function(t,e,n){r().copyWithin(t>>>0,e>>>0,e+n>>>0)},F:function(){return _?n(993).cpus().length:navigator.hardwareConcurrency},Da:function(t,e,n){Xt.length=e,n>>=3;for(var r=0;r<e;r++)Xt[r]=o()[n+r>>>0];return(0>t?ut[-t-1]:fe[t]).apply(null,Xt)},qa:function(t){var e=r().length;if((t>>>=0)<=e||4294901760<t)return!1;for(var n=1;4>=n;n*=2){var a=e*(1+.2/n);a=Math.min(a,t+100663296);var i=Math;a=Math.max(t,a),i=i.min.call(i,4294901760,a+(65536-a%65536)%65536);t:{try{j.grow(i-D.byteLength+65535>>>16),N(j.buffer);var o=1;break t}catch(t){}o=void 0}if(o)return!0}return!1},Na:function(){throw\\\"unwind\\\"},Ga:Qt,Ha:Kt,J:pt,I:te,S:ee,ga:ne,R:ie,d:function(){return oe},na:function t(r,a){t.lc||(t.lc=function(){if(\\\"object\\\"==typeof crypto&&\\\"function\\\"==typeof crypto.getRandomValues){var t=new Uint8Array(1);return()=>(crypto.getRandomValues(t),t[0])}if(_)try{var e=n(Object(function(){var t=new Error(\\\"Cannot find module 'crypto'\\\");throw t.code=\\\"MODULE_NOT_FOUND\\\",t}()));return()=>e.randomBytes(1)[0]}catch(t){}return()=>at(\\\"randomDevice\\\")}());for(var i=0;i<a;i++)e()[r+i>>0>>>0]=t.lc();return 0},ia:function(t,e,n){var r=Ee();try{return gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},ja:function(t,e,n){var r=Ee();try{return gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},K:function(t){var e=Ee();try{return gt(t)()}catch(t){if(Me(e),t!==t+0)throw t;Se(1,0)}},f:function(t,e){var n=Ee();try{return gt(t)(e)}catch(t){if(Me(n),t!==t+0)throw t;Se(1,0)}},P:function(t,e,n){var r=Ee();try{return gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},Q:function(t,e,n){var r=Ee();try{return gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},k:function(t,e,n){var r=Ee();try{return gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},p:function(t,e,n,r){var a=Ee();try{return gt(t)(e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Se(1,0)}},q:function(t,e,n,r,a){var i=Ee();try{return gt(t)(e,n,r,a)}catch(t){if(Me(i),t!==t+0)throw t;Se(1,0)}},N:function(t,e,n,r,a,i){var o=Ee();try{return gt(t)(e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Se(1,0)}},s:function(t,e,n,r,a,i){var o=Ee();try{return gt(t)(e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Se(1,0)}},w:function(t,e,n,r,a,i,o){var u=Ee();try{return gt(t)(e,n,r,a,i,o)}catch(t){if(Me(u),t!==t+0)throw t;Se(1,0)}},L:function(t,e,n,r,a,i,o,u){var c=Ee();try{return gt(t)(e,n,r,a,i,o,u)}catch(t){if(Me(c),t!==t+0)throw t;Se(1,0)}},E:function(t,e,n,r,a,i,o,u,c,s,l,f){var p=Ee();try{return gt(t)(e,n,r,a,i,o,u,c,s,l,f)}catch(t){if(Me(p),t!==t+0)throw t;Se(1,0)}},aa:function(t,e,n,r,a,i,o,u){var c=Ee();try{return He(t,e,n,r,a,i,o,u)}catch(t){if(Me(c),t!==t+0)throw t;Se(1,0)}},_:function(t,e,n,r,a,i,o){var u=Ee();try{return ke(t,e,n,r,a,i,o)}catch(t){if(Me(u),t!==t+0)throw t;Se(1,0)}},Z:function(t,e,n,r,a){var i=Ee();try{return Le(t,e,n,r,a)}catch(t){if(Me(i),t!==t+0)throw t;Se(1,0)}},ca:function(t,e,n,r){var a=Ee();try{return Ie(t,e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Se(1,0)}},$:function(t){var e=Ee();try{return je(t)}catch(t){if(Me(e),t!==t+0)throw t;Se(1,0)}},ba:function(t,e){var n=Ee();try{return We(t,e)}catch(t){if(Me(n),t!==t+0)throw t;Se(1,0)}},Y:function(t,e,n){var r=Ee();try{return De(t,e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},g:function(t){var e=Ee();try{gt(t)()}catch(t){if(Me(e),t!==t+0)throw t;Se(1,0)}},r:function(t,e){var n=Ee();try{gt(t)(e)}catch(t){if(Me(n),t!==t+0)throw t;Se(1,0)}},i:function(t,e,n){var r=Ee();try{gt(t)(e,n)}catch(t){if(Me(r),t!==t+0)throw t;Se(1,0)}},ha:function(t,e,n,r){var a=Ee();try{gt(t)(e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Se(1,0)}},m:function(t,e,n,r){var a=Ee();try{gt(t)(e,n,r)}catch(t){if(Me(a),t!==t+0)throw t;Se(1,0)}},v:function(t,e,n,r,a){var i=Ee();try{gt(t)(e,n,r,a)}catch(t){if(Me(i),t!==t+0)throw t;Se(1,0)}},u:function(t,e,n,r,a,i){var o=Ee();try{gt(t)(e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Se(1,0)}},O:function(t,e,n,r,a,i,o){var u=Ee();try{gt(t)(e,n,r,a,i,o)}catch(t){if(Me(u),t!==t+0)throw t;Se(1,0)}},A:function(t,e,n,r,a,i,o,u){var c=Ee();try{gt(t)(e,n,r,a,i,o,u)}catch(t){if(Me(c),t!==t+0)throw t;Se(1,0)}},ka:function(t,e,n,r,a,i,o,u,c){var s=Ee();try{gt(t)(e,n,r,a,i,o,u,c)}catch(t){if(Me(s),t!==t+0)throw t;Se(1,0)}},C:function(t,e,n,r,a,i,o,u,c,s,l){var f=Ee();try{gt(t)(e,n,r,a,i,o,u,c,s,l)}catch(t){if(Me(f),t!==t+0)throw t;Se(1,0)}},D:function(t,e,n,r,a,i,o,u,c,s,l,f,p,h,d,y){var b=Ee();try{gt(t)(e,n,r,a,i,o,u,c,s,l,f,p,h,d,y)}catch(t){if(Me(b),t!==t+0)throw t;Se(1,0)}},fa:function(t,e,n,r,a,i,o,u){var c=Ee();try{Pe(t,e,n,r,a,i,o,u)}catch(t){if(Me(c),t!==t+0)throw t;Se(1,0)}},da:function(t,e,n,r,a,i,o,u,c,s,l,f){var p=Ee();try{Fe(t,e,n,r,a,i,o,u,c,s,l,f)}catch(t){if(Me(p),t!==t+0)throw t;Se(1,0)}},ea:function(t,e,n,r,a,i){var o=Ee();try{Ue(t,e,n,r,a,i)}catch(t){if(Me(o),t!==t+0)throw t;Se(1,0)}},o:function(t){return t},a:j||u.wasmMemory,G:function(t){oe=t},la:le,z:function(t,e,n,r){return le(t,e,n,r)}};!function(){function t(t,e){u.asm=t.exports,ht.qc.push(u.asm.sb),$=u.asm.ub,X.unshift(u.asm.Va),k=e,O||(et--,u.monitorRunDependencies&&u.monitorRunDependencies(et),0==et&&(null!==nt&&(clearInterval(nt),nt=null),rt&&(t=rt,rt=null,t())))}function e(e){t(e.instance,e.module)}function n(t){return function(){if(!M&&(v||w)){if(\\\"function\\\"==typeof fetch&&!tt.startsWith(\\\"file://\\\"))return fetch(tt,{credentials:\\\"same-origin\\\"}).then((function(t){if(!t.ok)throw\\\"failed to load wasm binary file at '\\\"+tt+\\\"'\\\";return t.arrayBuffer()})).catch((function(){return ot()}));if(f)return new Promise((function(t,e){f(tt,(function(e){t(new Uint8Array(e))}),e)}))}return Promise.resolve().then((function(){return ot()}))}().then((function(t){return WebAssembly.instantiate(t,r)})).then((function(t){return t})).then(t,(function(t){x(\\\"failed to asynchronously prepare wasm: \\\"+t),at(t)}))}var r={a:pe};if(O||(et++,u.monitorRunDependencies&&u.monitorRunDependencies(et)),u.instantiateWasm)try{return u.instantiateWasm(r,t)}catch(t){return x(\\\"Module.instantiateWasm callback failed with error: \\\"+t),!1}(M||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||it()||tt.startsWith(\\\"file://\\\")||_||\\\"function\\\"!=typeof fetch?n(e):fetch(tt,{credentials:\\\"same-origin\\\"}).then((function(t){return WebAssembly.instantiateStreaming(t,r).then(e,(function(t){return x(\\\"wasm streaming compile failed: \\\"+t),x(\\\"falling back to ArrayBuffer instantiation\\\"),n(e)}))}))).catch(s)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.Va).apply(null,arguments)},u._OrtInit=function(){return(u._OrtInit=u.asm.Wa).apply(null,arguments)},u._OrtCreateSessionOptions=function(){return(u._OrtCreateSessionOptions=u.asm.Xa).apply(null,arguments)},u._OrtAppendExecutionProvider=function(){return(u._OrtAppendExecutionProvider=u.asm.Ya).apply(null,arguments)},u._OrtAddSessionConfigEntry=function(){return(u._OrtAddSessionConfigEntry=u.asm.Za).apply(null,arguments)},u._OrtReleaseSessionOptions=function(){return(u._OrtReleaseSessionOptions=u.asm._a).apply(null,arguments)},u._OrtCreateSession=function(){return(u._OrtCreateSession=u.asm.$a).apply(null,arguments)},u._OrtReleaseSession=function(){return(u._OrtReleaseSession=u.asm.ab).apply(null,arguments)},u._OrtGetInputCount=function(){return(u._OrtGetInputCount=u.asm.bb).apply(null,arguments)},u._OrtGetOutputCount=function(){return(u._OrtGetOutputCount=u.asm.cb).apply(null,arguments)},u._OrtGetInputName=function(){return(u._OrtGetInputName=u.asm.db).apply(null,arguments)},u._OrtGetOutputName=function(){return(u._OrtGetOutputName=u.asm.eb).apply(null,arguments)},u._OrtFree=function(){return(u._OrtFree=u.asm.fb).apply(null,arguments)},u._OrtCreateTensor=function(){return(u._OrtCreateTensor=u.asm.gb).apply(null,arguments)},u._OrtGetTensorData=function(){return(u._OrtGetTensorData=u.asm.hb).apply(null,arguments)},u._OrtReleaseTensor=function(){return(u._OrtReleaseTensor=u.asm.ib).apply(null,arguments)},u._OrtCreateRunOptions=function(){return(u._OrtCreateRunOptions=u.asm.jb).apply(null,arguments)},u._OrtAddRunConfigEntry=function(){return(u._OrtAddRunConfigEntry=u.asm.kb).apply(null,arguments)},u._OrtReleaseRunOptions=function(){return(u._OrtReleaseRunOptions=u.asm.lb).apply(null,arguments)},u._OrtRun=function(){return(u._OrtRun=u.asm.mb).apply(null,arguments)},u._OrtEndProfiling=function(){return(u._OrtEndProfiling=u.asm.nb).apply(null,arguments)};var he=u._pthread_self=function(){return(he=u._pthread_self=u.asm.ob).apply(null,arguments)},de=u._malloc=function(){return(de=u._malloc=u.asm.pb).apply(null,arguments)},ye=u._free=function(){return(ye=u._free=u.asm.qb).apply(null,arguments)},be=u._fflush=function(){return(be=u._fflush=u.asm.rb).apply(null,arguments)};u.__emscripten_tls_init=function(){return(u.__emscripten_tls_init=u.asm.sb).apply(null,arguments)};var me=u.___funcs_on_exit=function(){return(me=u.___funcs_on_exit=u.asm.tb).apply(null,arguments)},ge=u.__emscripten_thread_init=function(){return(ge=u.__emscripten_thread_init=u.asm.vb).apply(null,arguments)};u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm.wb).apply(null,arguments)};var ve,we=u._emscripten_run_in_main_runtime_thread_js=function(){return(we=u._emscripten_run_in_main_runtime_thread_js=u.asm.xb).apply(null,arguments)},_e=u.__emscripten_proxy_execute_task_queue=function(){return(_e=u.__emscripten_proxy_execute_task_queue=u.asm.yb).apply(null,arguments)},Oe=u.__emscripten_thread_free_data=function(){return(Oe=u.__emscripten_thread_free_data=u.asm.zb).apply(null,arguments)},Ae=u.__emscripten_thread_exit=function(){return(Ae=u.__emscripten_thread_exit=u.asm.Ab).apply(null,arguments)},Se=u._setThrew=function(){return(Se=u._setThrew=u.asm.Bb).apply(null,arguments)},Te=u._emscripten_stack_set_limits=function(){return(Te=u._emscripten_stack_set_limits=u.asm.Cb).apply(null,arguments)},Ee=u.stackSave=function(){return(Ee=u.stackSave=u.asm.Db).apply(null,arguments)},Me=u.stackRestore=function(){return(Me=u.stackRestore=u.asm.Eb).apply(null,arguments)},Ce=u.stackAlloc=function(){return(Ce=u.stackAlloc=u.asm.Fb).apply(null,arguments)},xe=u.___cxa_can_catch=function(){return(xe=u.___cxa_can_catch=u.asm.Gb).apply(null,arguments)},Re=u.___cxa_is_pointer_type=function(){return(Re=u.___cxa_is_pointer_type=u.asm.Hb).apply(null,arguments)},je=u.dynCall_j=function(){return(je=u.dynCall_j=u.asm.Ib).apply(null,arguments)},ke=u.dynCall_iiiiij=function(){return(ke=u.dynCall_iiiiij=u.asm.Jb).apply(null,arguments)},De=u.dynCall_jii=function(){return(De=u.dynCall_jii=u.asm.Kb).apply(null,arguments)},Pe=u.dynCall_viiiiij=function(){return(Pe=u.dynCall_viiiiij=u.asm.Lb).apply(null,arguments)},Ue=u.dynCall_vjji=function(){return(Ue=u.dynCall_vjji=u.asm.Mb).apply(null,arguments)},Fe=u.dynCall_viiijjjii=function(){return(Fe=u.dynCall_viiijjjii=u.asm.Nb).apply(null,arguments)},Ie=u.dynCall_iij=function(){return(Ie=u.dynCall_iij=u.asm.Ob).apply(null,arguments)},We=u.dynCall_ji=function(){return(We=u.dynCall_ji=u.asm.Pb).apply(null,arguments)},He=u.dynCall_iiiiiij=function(){return(He=u.dynCall_iiiiiij=u.asm.Qb).apply(null,arguments)},Le=u.dynCall_iiij=function(){return(Le=u.dynCall_iiij=u.asm.Rb).apply(null,arguments)};function ze(){function t(){if(!ve&&(ve=!0,u.calledRun=!0,!H)&&(O||dt(X),c(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),!O)){if(u.postRun)for(\\\"function\\\"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;){var t=u.postRun.shift();Z.unshift(t)}dt(Z)}}if(!(0<et))if(O)c(u),O||dt(X),postMessage({cmd:\\\"loaded\\\"});else{if(u.preRun)for(\\\"function\\\"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)K();dt(q),0<et||(u.setStatus?(u.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){u.setStatus(\\\"\\\")}),1),t()}),1)):t())}}if(u.UTF8ToString=Y,u.stringToUTF8=function(t,e,n){return B(t,r(),e,n)},u.lengthBytesUTF8=G,u.keepRuntimeAlive=Q,u.wasmMemory=j,u.stackSave=Ee,u.stackRestore=Me,u.stackAlloc=Ce,u.ExitStatus=ct,u.PThread=ht,rt=function t(){ve||ze(),ve||(rt=t)},u.preInit)for(\\\"function\\\"==typeof u.preInit&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();return ze(),t.ready});t.exports=r},932:(t,e,n)=>{var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(t){var e,r,a;t=t||{},e||(e=void 0!==t?t:{}),e.ready=new Promise((function(t,e){r=t,a=e}));var i,o,u,c,s,l,f=Object.assign({},e),p=\\\"./this.program\\\",h=(t,e)=>{throw e},d=\\\"object\\\"==typeof window,y=\\\"function\\\"==typeof importScripts,b=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,m=\\\"\\\";b?(m=y?n(908).dirname(m)+\\\"/\\\":\\\"//\\\",l=()=>{s||(c=n(384),s=n(908))},i=function(t,e){return l(),t=s.normalize(t),c.readFileSync(t,e?void 0:\\\"utf8\\\")},u=t=>((t=i(t,!0)).buffer||(t=new Uint8Array(t)),t),o=(t,e,n)=>{l(),t=s.normalize(t),c.readFile(t,(function(t,r){t?n(t):e(r.buffer)}))},1<process.argv.length&&(p=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(t){if(!(t instanceof J))throw t})),process.on(\\\"unhandledRejection\\\",(function(t){throw t})),h=(t,e)=>{if(_||0<L)throw process.exitCode=t,e;e instanceof J||w(\\\"exiting due to exception: \\\"+e),process.exit(t)},e.inspect=function(){return\\\"[Emscripten Module object]\\\"}):(d||y)&&(y?m=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(m=document.currentScript.src),_scriptDir&&(m=_scriptDir),m=0!==m.indexOf(\\\"blob:\\\")?m.substr(0,m.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",i=t=>{var e=new XMLHttpRequest;return e.open(\\\"GET\\\",t,!1),e.send(null),e.responseText},y&&(u=t=>{var e=new XMLHttpRequest;return e.open(\\\"GET\\\",t,!1),e.responseType=\\\"arraybuffer\\\",e.send(null),new Uint8Array(e.response)}),o=(t,e,n)=>{var r=new XMLHttpRequest;r.open(\\\"GET\\\",t,!0),r.responseType=\\\"arraybuffer\\\",r.onload=()=>{200==r.status||0==r.status&&r.response?e(r.response):n()},r.onerror=n,r.send(null)});var g,v=e.print||console.log.bind(console),w=e.printErr||console.warn.bind(console);Object.assign(e,f),f=null,e.thisProgram&&(p=e.thisProgram),e.quit&&(h=e.quit),e.wasmBinary&&(g=e.wasmBinary);var _=e.noExitRuntime||!1;\\\"object\\\"!=typeof WebAssembly&&V(\\\"no native wasm support detected\\\");var O,A,S,T,E,M,C=!1,x=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function R(t,e,n){var r=(e>>>=0)+n;for(n=e;t[n]&&!(n>=r);)++n;if(16<n-e&&t.buffer&&x)return x.decode(t.subarray(e,n));for(r=\\\"\\\";e<n;){var a=t[e++];if(128&a){var i=63&t[e++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|i);else{var o=63&t[e++];65536>(a=224==(240&a)?(15&a)<<12|i<<6|o:(7&a)<<18|i<<12|o<<6|63&t[e++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function j(t,e){return(t>>>=0)?R(T,t,e):\\\"\\\"}function k(t,e,n,r){if(!(0<r))return 0;var a=n>>>=0;r=n+r-1;for(var i=0;i<t.length;++i){var o=t.charCodeAt(i);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++i)),127>=o){if(n>=r)break;e[n++>>>0]=o}else{if(2047>=o){if(n+1>=r)break;e[n++>>>0]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;e[n++>>>0]=224|o>>12}else{if(n+3>=r)break;e[n++>>>0]=240|o>>18,e[n++>>>0]=128|o>>12&63}e[n++>>>0]=128|o>>6&63}e[n++>>>0]=128|63&o}}return e[n>>>0]=0,n-a}function D(t){for(var e=0,n=0;n<t.length;++n){var r=t.charCodeAt(n);127>=r?e++:2047>=r?e+=2:55296<=r&&57343>=r?(e+=4,++n):e+=3}return e}function P(){var t=O.buffer;A=t,e.HEAP8=S=new Int8Array(t),e.HEAP16=new Int16Array(t),e.HEAP32=E=new Int32Array(t),e.HEAPU8=T=new Uint8Array(t),e.HEAPU16=new Uint16Array(t),e.HEAPU32=M=new Uint32Array(t),e.HEAPF32=new Float32Array(t),e.HEAPF64=new Float64Array(t)}var U,F=[],I=[],W=[],H=[],L=0;function z(){var t=e.preRun.shift();F.unshift(t)}var Y,B=0,G=null,N=null;function V(t){throw e.onAbort&&e.onAbort(t),w(t=\\\"Aborted(\\\"+t+\\\")\\\"),C=!0,t=new WebAssembly.RuntimeError(t+\\\". Build with -sASSERTIONS for more info.\\\"),a(t),t}function $(){return Y.startsWith(\\\"data:application/octet-stream;base64,\\\")}if(Y=\\\"ort-wasm.wasm\\\",!$()){var q=Y;Y=e.locateFile?e.locateFile(q,m):m+q}function X(){var t=Y;try{if(t==Y&&g)return new Uint8Array(g);if(u)return u(t);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(t){V(t)}}function J(t){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+t+\\\")\\\",this.status=t}function Z(t){for(;0<t.length;)t.shift()(e)}var Q=[],K=0,tt=0;function et(t){this.Db=t,this.zb=t-24,this.Ub=function(t){M[this.zb+4>>2>>>0]=t},this.Eb=function(){return M[this.zb+4>>2>>>0]},this.Sb=function(t){M[this.zb+8>>2>>>0]=t},this.Wb=function(){return M[this.zb+8>>2>>>0]},this.Tb=function(){E[this.zb>>2>>>0]=0},this.Ib=function(t){S[this.zb+12>>0>>>0]=t?1:0},this.Pb=function(){return 0!=S[this.zb+12>>0>>>0]},this.Jb=function(t){S[this.zb+13>>0>>>0]=t?1:0},this.Lb=function(){return 0!=S[this.zb+13>>0>>>0]},this.Rb=function(t,e){this.Fb(0),this.Ub(t),this.Sb(e),this.Tb(),this.Ib(!1),this.Jb(!1)},this.Nb=function(){E[this.zb>>2>>>0]+=1},this.Xb=function(){var t=E[this.zb>>2>>>0];return E[this.zb>>2>>>0]=t-1,1===t},this.Fb=function(t){M[this.zb+16>>2>>>0]=t},this.Ob=function(){return M[this.zb+16>>2>>>0]},this.Qb=function(){if(Mt(this.Eb()))return M[this.Db>>2>>>0];var t=this.Ob();return 0!==t?t:this.Db}}function nt(t){return vt(new et(t).zb)}var rt=[];function at(t){var e=rt[t];return e||(t>=rt.length&&(rt.length=t+1),rt[t]=e=U.get(t)),e}function it(t){var e=D(t)+1,n=gt(e);return n&&k(t,S,n,e),n}var ot={};function ut(){if(!ct){var t,e={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:p||\\\"./this.program\\\"};for(t in ot)void 0===ot[t]?delete e[t]:e[t]=ot[t];var n=[];for(t in e)n.push(t+\\\"=\\\"+e[t]);ct=n}return ct}var ct,st=[null,[],[]];function lt(t,e){var n=st[t];0===e||10===e?((1===t?v:w)(R(n,0)),n.length=0):n.push(e)}var ft=0;function pt(t){return 0==t%4&&(0!=t%100||0==t%400)}var ht=[31,29,31,30,31,30,31,31,30,31,30,31],dt=[31,28,31,30,31,30,31,31,30,31,30,31];function yt(t,e,n,r){function a(t,e,n){for(t=\\\"number\\\"==typeof t?t.toString():t||\\\"\\\";t.length<e;)t=n[0]+t;return t}function i(t,e){return a(t,e,\\\"0\\\")}function o(t,e){function n(t){return 0>t?-1:0<t?1:0}var r;return 0===(r=n(t.getFullYear()-e.getFullYear()))&&0===(r=n(t.getMonth()-e.getMonth()))&&(r=n(t.getDate()-e.getDate())),r}function u(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function c(t){var e=t.Bb;for(t=new Date(new Date(t.Cb+1900,0,1).getTime());0<e;){var n=t.getMonth(),r=(pt(t.getFullYear())?ht:dt)[n];if(!(e>r-t.getDate())){t.setDate(t.getDate()+e);break}e-=r-t.getDate()+1,t.setDate(1),11>n?t.setMonth(n+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return n=new Date(t.getFullYear()+1,0,4),e=u(new Date(t.getFullYear(),0,4)),n=u(n),0>=o(e,t)?0>=o(n,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var s=E[r+40>>2>>>0];for(var l in r={$b:E[r>>2>>>0],Zb:E[r+4>>2>>>0],Gb:E[r+8>>2>>>0],Kb:E[r+12>>2>>>0],Hb:E[r+16>>2>>>0],Cb:E[r+20>>2>>>0],Ab:E[r+24>>2>>>0],Bb:E[r+28>>2>>>0],bc:E[r+32>>2>>>0],Yb:E[r+36>>2>>>0],ac:s?j(s):\\\"\\\"},n=j(n),s={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})n=n.replace(new RegExp(l,\\\"g\\\"),s[l]);var f=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),p=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(l in s={\\\"%a\\\":function(t){return f[t.Ab].substring(0,3)},\\\"%A\\\":function(t){return f[t.Ab]},\\\"%b\\\":function(t){return p[t.Hb].substring(0,3)},\\\"%B\\\":function(t){return p[t.Hb]},\\\"%C\\\":function(t){return i((t.Cb+1900)/100|0,2)},\\\"%d\\\":function(t){return i(t.Kb,2)},\\\"%e\\\":function(t){return a(t.Kb,2,\\\" \\\")},\\\"%g\\\":function(t){return c(t).toString().substring(2)},\\\"%G\\\":function(t){return c(t)},\\\"%H\\\":function(t){return i(t.Gb,2)},\\\"%I\\\":function(t){return 0==(t=t.Gb)?t=12:12<t&&(t-=12),i(t,2)},\\\"%j\\\":function(t){for(var e=0,n=0;n<=t.Hb-1;e+=(pt(t.Cb+1900)?ht:dt)[n++]);return i(t.Kb+e,3)},\\\"%m\\\":function(t){return i(t.Hb+1,2)},\\\"%M\\\":function(t){return i(t.Zb,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(t){return 0<=t.Gb&&12>t.Gb?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(t){return i(t.$b,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(t){return t.Ab||7},\\\"%U\\\":function(t){return i(Math.floor((t.Bb+7-t.Ab)/7),2)},\\\"%V\\\":function(t){var e=Math.floor((t.Bb+7-(t.Ab+6)%7)/7);if(2>=(t.Ab+371-t.Bb-2)%7&&e++,e)53==e&&(4==(n=(t.Ab+371-t.Bb)%7)||3==n&&pt(t.Cb)||(e=1));else{e=52;var n=(t.Ab+7-t.Bb-1)%7;(4==n||5==n&&pt(t.Cb%400-1))&&e++}return i(e,2)},\\\"%w\\\":function(t){return t.Ab},\\\"%W\\\":function(t){return i(Math.floor((t.Bb+7-(t.Ab+6)%7)/7),2)},\\\"%y\\\":function(t){return(t.Cb+1900).toString().substring(2)},\\\"%Y\\\":function(t){return t.Cb+1900},\\\"%z\\\":function(t){var e=0<=(t=t.Yb);return t=Math.abs(t)/60,(e?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(t/60*100+t%60)).slice(-4)},\\\"%Z\\\":function(t){return t.ac},\\\"%%\\\":function(){return\\\"%\\\"}},n=n.replace(/%%/g,\\\"\\\\0\\\\0\\\"),s)n.includes(l)&&(n=n.replace(new RegExp(l,\\\"g\\\"),s[l](r)));return l=function(t){var e=Array(D(t)+1);return k(t,e,0,e.length),e}(n=n.replace(/\\\\0\\\\0/g,\\\"%\\\")),l.length>e?0:(S.set(l,t>>>0),l.length-1)}var bt={a:function(t){return gt(t+24)+24},m:function(t){return(t=new et(t)).Pb()||(t.Ib(!0),K--),t.Jb(!1),Q.push(t),t.Nb(),t.Qb()},ia:function(t){throw w(\\\"Unexpected exception thrown, this is not properly supported - aborting\\\"),C=!0,t},w:function(){Ot(0);var t=Q.pop();if(t.Xb()&&!t.Lb()){var e=t.Wb();e&&at(e)(t.Db),nt(t.Db)}tt=0},d:function(){var t=tt;if(!t)return ft=0;var e=new et(t);e.Fb(t);var n=e.Eb();if(!n)return ft=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(Et(i,n,e.zb+16))return ft=i,t}return ft=n,t},k:function(){var t=tt;if(!t)return ft=0;var e=new et(t);e.Fb(t);var n=e.Eb();if(!n)return ft=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(Et(i,n,e.zb+16))return ft=i,t}return ft=n,t},g:function(){var t=tt;if(!t)return ft=0;var e=new et(t);e.Fb(t);var n=e.Eb();if(!n)return ft=0,t;for(var r=Array.prototype.slice.call(arguments),a=0;a<r.length;a++){var i=r[a];if(0===i||i===n)break;if(Et(i,n,e.zb+16))return ft=i,t}return ft=n,t},s:nt,L:function(){var t=Q.pop();t||V(\\\"no exception to throw\\\");var e=t.Db;throw t.Lb()||(Q.push(t),t.Jb(!0),t.Ib(!1),K++),tt=e,e},b:function(t,e,n){throw new et(t).Rb(e,n),tt=t,K++,t},la:function(){return K},i:function(t){throw tt||(tt=t),t},H:function(){return 0},Ba:function(){},pa:function(){},ra:function(){},ka:function(){return 0},za:function(){},ua:function(){},ya:function(){},R:function(){},qa:function(){},na:function(){},Aa:function(){},oa:function(){},Ha:function(){},Ja:function(){V(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Ia:function(){V(\\\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},S:function(){return Date.now()},Ca:function(){return!0},Da:function(t,e){t=new Date(1e3*(M[t>>>2]+4294967296*E[t+4>>>2])),E[e>>2>>>0]=t.getUTCSeconds(),E[e+4>>2>>>0]=t.getUTCMinutes(),E[e+8>>2>>>0]=t.getUTCHours(),E[e+12>>2>>>0]=t.getUTCDate(),E[e+16>>2>>>0]=t.getUTCMonth(),E[e+20>>2>>>0]=t.getUTCFullYear()-1900,E[e+24>>2>>>0]=t.getUTCDay(),E[e+28>>2>>>0]=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Ea:function(t,e){t=new Date(1e3*(M[t>>>2]+4294967296*E[t+4>>>2])),E[e>>2>>>0]=t.getSeconds(),E[e+4>>2>>>0]=t.getMinutes(),E[e+8>>2>>>0]=t.getHours(),E[e+12>>2>>>0]=t.getDate(),E[e+16>>2>>>0]=t.getMonth(),E[e+20>>2>>>0]=t.getFullYear()-1900,E[e+24>>2>>>0]=t.getDay();var n=new Date(t.getFullYear(),0,1);E[e+28>>2>>>0]=(t.getTime()-n.getTime())/864e5|0,E[e+36>>2>>>0]=-60*t.getTimezoneOffset();var r=new Date(t.getFullYear(),6,1).getTimezoneOffset();n=n.getTimezoneOffset(),E[e+32>>2>>>0]=0|(r!=n&&t.getTimezoneOffset()==Math.min(n,r))},Fa:function(t){var e=new Date(E[t+20>>2>>>0]+1900,E[t+16>>2>>>0],E[t+12>>2>>>0],E[t+8>>2>>>0],E[t+4>>2>>>0],E[t>>2>>>0],0),n=E[t+32>>2>>>0],r=e.getTimezoneOffset(),a=new Date(e.getFullYear(),0,1),i=new Date(e.getFullYear(),6,1).getTimezoneOffset(),o=a.getTimezoneOffset(),u=Math.min(o,i);return 0>n?E[t+32>>2>>>0]=Number(i!=o&&u==r):0<n!=(u==r)&&(i=Math.max(o,i),e.setTime(e.getTime()+6e4*((0<n?u:i)-r))),E[t+24>>2>>>0]=e.getDay(),E[t+28>>2>>>0]=(e.getTime()-a.getTime())/864e5|0,E[t>>2>>>0]=e.getSeconds(),E[t+4>>2>>>0]=e.getMinutes(),E[t+8>>2>>>0]=e.getHours(),E[t+12>>2>>>0]=e.getDate(),E[t+16>>2>>>0]=e.getMonth(),e.getTime()/1e3|0},sa:function(){return-52},ta:function(){},Ga:function t(e,n,r){t.Vb||(t.Vb=!0,function(t,e,n){function r(t){return(t=t.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?t[1]:\\\"GMT\\\"}var a=(new Date).getFullYear(),i=new Date(a,0,1),o=new Date(a,6,1);a=i.getTimezoneOffset();var u=o.getTimezoneOffset();E[t>>2>>>0]=60*Math.max(a,u),E[e>>2>>>0]=Number(a!=u),t=r(i),e=r(o),t=it(t),e=it(e),u<a?(M[n>>2>>>0]=t,M[n+4>>2>>>0]=e):(M[n>>2>>>0]=e,M[n+4>>2>>>0]=t)}(e,n,r))},B:function(){V(\\\"\\\")},ma:function(){return 4294901760},I:b?()=>{var t=process.hrtime();return 1e3*t[0]+t[1]/1e6}:()=>performance.now(),xa:function(t,e,n){T.copyWithin(t>>>0,e>>>0,e+n>>>0)},G:function(t){var e=T.length;if(4294901760<(t>>>=0))return!1;for(var n=1;4>=n;n*=2){var r=e*(1+.2/n);r=Math.min(r,t+100663296);var a=Math;r=Math.max(t,r),a=a.min.call(a,4294901760,r+(65536-r%65536)%65536);t:{try{O.grow(a-A.byteLength+65535>>>16),P();var i=1;break t}catch(t){}i=void 0}if(i)return!0}return!1},va:function(t,e){var n=0;return ut().forEach((function(r,a){var i=e+n;for(a=M[t+4*a>>2>>>0]=i,i=0;i<r.length;++i)S[a++>>0>>>0]=r.charCodeAt(i);S[a>>0>>>0]=0,n+=r.length+1})),0},wa:function(t,e){var n=ut();M[t>>2>>>0]=n.length;var r=0;return n.forEach((function(t){r+=t.length+1})),M[e>>2>>>0]=r,0},ba:function(t){_||0<L||(_t(),Z(W),wt(0),st[1].length&&lt(1,10),st[2].length&&lt(2,10)),_||0<L||(e.onExit&&e.onExit(t),C=!0),h(t,new J(t))},E:function(){return 52},Q:function(){return 52},ca:function(){return 70},P:function(t,e,n,r){for(var a=0,i=0;i<n;i++){var o=M[e>>2>>>0],u=M[e+4>>2>>>0];e+=8;for(var c=0;c<u;c++)lt(t,T[o+c>>>0]);a+=u}return M[r>>2>>>0]=a,0},c:function(){return ft},ja:function t(e,r){t.Mb||(t.Mb=function(){if(\\\"object\\\"==typeof crypto&&\\\"function\\\"==typeof crypto.getRandomValues){var t=new Uint8Array(1);return()=>(crypto.getRandomValues(t),t[0])}if(b)try{var e=n(Object(function(){var t=new Error(\\\"Cannot find module 'crypto'\\\");throw t.code=\\\"MODULE_NOT_FOUND\\\",t}()));return()=>e.randomBytes(1)[0]}catch(t){}return()=>V(\\\"randomDevice\\\")}());for(var a=0;a<r;a++)S[e+a>>0>>>0]=t.Mb();return 0},ea:function(t,e,n){var r=At();try{return at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},fa:function(t,e,n){var r=At();try{return at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},J:function(t){var e=At();try{return at(t)()}catch(t){if(St(e),t!==t+0)throw t;Ot(1,0)}},e:function(t,e){var n=At();try{return at(t)(e)}catch(t){if(St(n),t!==t+0)throw t;Ot(1,0)}},N:function(t,e,n){var r=At();try{return at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},O:function(t,e,n){var r=At();try{return at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},j:function(t,e,n){var r=At();try{return at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},o:function(t,e,n,r){var a=At();try{return at(t)(e,n,r)}catch(t){if(St(a),t!==t+0)throw t;Ot(1,0)}},p:function(t,e,n,r,a){var i=At();try{return at(t)(e,n,r,a)}catch(t){if(St(i),t!==t+0)throw t;Ot(1,0)}},M:function(t,e,n,r,a,i){var o=At();try{return at(t)(e,n,r,a,i)}catch(t){if(St(o),t!==t+0)throw t;Ot(1,0)}},r:function(t,e,n,r,a,i){var o=At();try{return at(t)(e,n,r,a,i)}catch(t){if(St(o),t!==t+0)throw t;Ot(1,0)}},v:function(t,e,n,r,a,i,o){var u=At();try{return at(t)(e,n,r,a,i,o)}catch(t){if(St(u),t!==t+0)throw t;Ot(1,0)}},K:function(t,e,n,r,a,i,o,u){var c=At();try{return at(t)(e,n,r,a,i,o,u)}catch(t){if(St(c),t!==t+0)throw t;Ot(1,0)}},D:function(t,e,n,r,a,i,o,u,c,s,l,f){var p=At();try{return at(t)(e,n,r,a,i,o,u,c,s,l,f)}catch(t){if(St(p),t!==t+0)throw t;Ot(1,0)}},X:function(t,e,n,r,a,i,o,u){var c=At();try{return Ft(t,e,n,r,a,i,o,u)}catch(t){if(St(c),t!==t+0)throw t;Ot(1,0)}},V:function(t,e,n,r,a,i,o){var u=At();try{return xt(t,e,n,r,a,i,o)}catch(t){if(St(u),t!==t+0)throw t;Ot(1,0)}},U:function(t,e,n,r,a){var i=At();try{return It(t,e,n,r,a)}catch(t){if(St(i),t!==t+0)throw t;Ot(1,0)}},Z:function(t,e,n,r){var a=At();try{return Pt(t,e,n,r)}catch(t){if(St(a),t!==t+0)throw t;Ot(1,0)}},W:function(t){var e=At();try{return Ct(t)}catch(t){if(St(e),t!==t+0)throw t;Ot(1,0)}},Y:function(t,e){var n=At();try{return Ut(t,e)}catch(t){if(St(n),t!==t+0)throw t;Ot(1,0)}},T:function(t,e,n){var r=At();try{return Rt(t,e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},f:function(t){var e=At();try{at(t)()}catch(t){if(St(e),t!==t+0)throw t;Ot(1,0)}},q:function(t,e){var n=At();try{at(t)(e)}catch(t){if(St(n),t!==t+0)throw t;Ot(1,0)}},h:function(t,e,n){var r=At();try{at(t)(e,n)}catch(t){if(St(r),t!==t+0)throw t;Ot(1,0)}},da:function(t,e,n,r){var a=At();try{at(t)(e,n,r)}catch(t){if(St(a),t!==t+0)throw t;Ot(1,0)}},l:function(t,e,n,r){var a=At();try{at(t)(e,n,r)}catch(t){if(St(a),t!==t+0)throw t;Ot(1,0)}},t:function(t,e,n,r,a){var i=At();try{at(t)(e,n,r,a)}catch(t){if(St(i),t!==t+0)throw t;Ot(1,0)}},u:function(t,e,n,r,a,i){var o=At();try{at(t)(e,n,r,a,i)}catch(t){if(St(o),t!==t+0)throw t;Ot(1,0)}},x:function(t,e,n,r,a,i,o){var u=At();try{at(t)(e,n,r,a,i,o)}catch(t){if(St(u),t!==t+0)throw t;Ot(1,0)}},z:function(t,e,n,r,a,i,o,u){var c=At();try{at(t)(e,n,r,a,i,o,u)}catch(t){if(St(c),t!==t+0)throw t;Ot(1,0)}},ga:function(t,e,n,r,a,i,o,u,c){var s=At();try{at(t)(e,n,r,a,i,o,u,c)}catch(t){if(St(s),t!==t+0)throw t;Ot(1,0)}},A:function(t,e,n,r,a,i,o,u,c,s,l){var f=At();try{at(t)(e,n,r,a,i,o,u,c,s,l)}catch(t){if(St(f),t!==t+0)throw t;Ot(1,0)}},C:function(t,e,n,r,a,i,o,u,c,s,l,f,p,h,d,y){var b=At();try{at(t)(e,n,r,a,i,o,u,c,s,l,f,p,h,d,y)}catch(t){if(St(b),t!==t+0)throw t;Ot(1,0)}},aa:function(t,e,n,r,a,i,o,u){var c=At();try{jt(t,e,n,r,a,i,o,u)}catch(t){if(St(c),t!==t+0)throw t;Ot(1,0)}},_:function(t,e,n,r,a,i,o,u,c,s,l,f){var p=At();try{Dt(t,e,n,r,a,i,o,u,c,s,l,f)}catch(t){if(St(p),t!==t+0)throw t;Ot(1,0)}},$:function(t,e,n,r,a,i){var o=At();try{kt(t,e,n,r,a,i)}catch(t){if(St(o),t!==t+0)throw t;Ot(1,0)}},n:function(t){return t},F:function(t){ft=t},ha:yt,y:function(t,e,n,r){return yt(t,e,n,r)}};!function(){function t(t){e.asm=t.exports,O=e.asm.Ka,P(),U=e.asm.ib,I.unshift(e.asm.La),B--,e.monitorRunDependencies&&e.monitorRunDependencies(B),0==B&&(null!==G&&(clearInterval(G),G=null),N&&(t=N,N=null,t()))}function n(e){t(e.instance)}function r(t){return function(){if(!g&&(d||y)){if(\\\"function\\\"==typeof fetch&&!Y.startsWith(\\\"file://\\\"))return fetch(Y,{credentials:\\\"same-origin\\\"}).then((function(t){if(!t.ok)throw\\\"failed to load wasm binary file at '\\\"+Y+\\\"'\\\";return t.arrayBuffer()})).catch((function(){return X()}));if(o)return new Promise((function(t,e){o(Y,(function(e){t(new Uint8Array(e))}),e)}))}return Promise.resolve().then((function(){return X()}))}().then((function(t){return WebAssembly.instantiate(t,i)})).then((function(t){return t})).then(t,(function(t){w(\\\"failed to asynchronously prepare wasm: \\\"+t),V(t)}))}var i={a:bt};if(B++,e.monitorRunDependencies&&e.monitorRunDependencies(B),e.instantiateWasm)try{return e.instantiateWasm(i,t)}catch(t){return w(\\\"Module.instantiateWasm callback failed with error: \\\"+t),!1}(g||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||$()||Y.startsWith(\\\"file://\\\")||b||\\\"function\\\"!=typeof fetch?r(n):fetch(Y,{credentials:\\\"same-origin\\\"}).then((function(t){return WebAssembly.instantiateStreaming(t,i).then(n,(function(t){return w(\\\"wasm streaming compile failed: \\\"+t),w(\\\"falling back to ArrayBuffer instantiation\\\"),r(n)}))}))).catch(a)}(),e.___wasm_call_ctors=function(){return(e.___wasm_call_ctors=e.asm.La).apply(null,arguments)},e._OrtInit=function(){return(e._OrtInit=e.asm.Ma).apply(null,arguments)},e._OrtCreateSessionOptions=function(){return(e._OrtCreateSessionOptions=e.asm.Na).apply(null,arguments)},e._OrtAppendExecutionProvider=function(){return(e._OrtAppendExecutionProvider=e.asm.Oa).apply(null,arguments)},e._OrtAddSessionConfigEntry=function(){return(e._OrtAddSessionConfigEntry=e.asm.Pa).apply(null,arguments)},e._OrtReleaseSessionOptions=function(){return(e._OrtReleaseSessionOptions=e.asm.Qa).apply(null,arguments)},e._OrtCreateSession=function(){return(e._OrtCreateSession=e.asm.Ra).apply(null,arguments)},e._OrtReleaseSession=function(){return(e._OrtReleaseSession=e.asm.Sa).apply(null,arguments)},e._OrtGetInputCount=function(){return(e._OrtGetInputCount=e.asm.Ta).apply(null,arguments)},e._OrtGetOutputCount=function(){return(e._OrtGetOutputCount=e.asm.Ua).apply(null,arguments)},e._OrtGetInputName=function(){return(e._OrtGetInputName=e.asm.Va).apply(null,arguments)},e._OrtGetOutputName=function(){return(e._OrtGetOutputName=e.asm.Wa).apply(null,arguments)},e._OrtFree=function(){return(e._OrtFree=e.asm.Xa).apply(null,arguments)},e._OrtCreateTensor=function(){return(e._OrtCreateTensor=e.asm.Ya).apply(null,arguments)},e._OrtGetTensorData=function(){return(e._OrtGetTensorData=e.asm.Za).apply(null,arguments)},e._OrtReleaseTensor=function(){return(e._OrtReleaseTensor=e.asm._a).apply(null,arguments)},e._OrtCreateRunOptions=function(){return(e._OrtCreateRunOptions=e.asm.$a).apply(null,arguments)},e._OrtAddRunConfigEntry=function(){return(e._OrtAddRunConfigEntry=e.asm.ab).apply(null,arguments)},e._OrtReleaseRunOptions=function(){return(e._OrtReleaseRunOptions=e.asm.bb).apply(null,arguments)},e._OrtRun=function(){return(e._OrtRun=e.asm.cb).apply(null,arguments)},e._OrtEndProfiling=function(){return(e._OrtEndProfiling=e.asm.db).apply(null,arguments)};var mt,gt=e._malloc=function(){return(gt=e._malloc=e.asm.eb).apply(null,arguments)},vt=e._free=function(){return(vt=e._free=e.asm.fb).apply(null,arguments)},wt=e._fflush=function(){return(wt=e._fflush=e.asm.gb).apply(null,arguments)},_t=e.___funcs_on_exit=function(){return(_t=e.___funcs_on_exit=e.asm.hb).apply(null,arguments)},Ot=e._setThrew=function(){return(Ot=e._setThrew=e.asm.jb).apply(null,arguments)},At=e.stackSave=function(){return(At=e.stackSave=e.asm.kb).apply(null,arguments)},St=e.stackRestore=function(){return(St=e.stackRestore=e.asm.lb).apply(null,arguments)},Tt=e.stackAlloc=function(){return(Tt=e.stackAlloc=e.asm.mb).apply(null,arguments)},Et=e.___cxa_can_catch=function(){return(Et=e.___cxa_can_catch=e.asm.nb).apply(null,arguments)},Mt=e.___cxa_is_pointer_type=function(){return(Mt=e.___cxa_is_pointer_type=e.asm.ob).apply(null,arguments)},Ct=e.dynCall_j=function(){return(Ct=e.dynCall_j=e.asm.pb).apply(null,arguments)},xt=e.dynCall_iiiiij=function(){return(xt=e.dynCall_iiiiij=e.asm.qb).apply(null,arguments)},Rt=e.dynCall_jii=function(){return(Rt=e.dynCall_jii=e.asm.rb).apply(null,arguments)},jt=e.dynCall_viiiiij=function(){return(jt=e.dynCall_viiiiij=e.asm.sb).apply(null,arguments)},kt=e.dynCall_vjji=function(){return(kt=e.dynCall_vjji=e.asm.tb).apply(null,arguments)},Dt=e.dynCall_viiijjjii=function(){return(Dt=e.dynCall_viiijjjii=e.asm.ub).apply(null,arguments)},Pt=e.dynCall_iij=function(){return(Pt=e.dynCall_iij=e.asm.vb).apply(null,arguments)},Ut=e.dynCall_ji=function(){return(Ut=e.dynCall_ji=e.asm.wb).apply(null,arguments)},Ft=e.dynCall_iiiiiij=function(){return(Ft=e.dynCall_iiiiiij=e.asm.xb).apply(null,arguments)},It=e.dynCall_iiij=function(){return(It=e.dynCall_iiij=e.asm.yb).apply(null,arguments)};function Wt(){function t(){if(!mt&&(mt=!0,e.calledRun=!0,!C)){if(Z(I),r(e),e.onRuntimeInitialized&&e.onRuntimeInitialized(),e.postRun)for(\\\"function\\\"==typeof e.postRun&&(e.postRun=[e.postRun]);e.postRun.length;){var t=e.postRun.shift();H.unshift(t)}Z(H)}}if(!(0<B)){if(e.preRun)for(\\\"function\\\"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;)z();Z(F),0<B||(e.setStatus?(e.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){e.setStatus(\\\"\\\")}),1),t()}),1)):t())}}if(e.UTF8ToString=j,e.stringToUTF8=function(t,e,n){return k(t,T,e,n)},e.lengthBytesUTF8=D,e.stackSave=At,e.stackRestore=St,e.stackAlloc=Tt,N=function t(){mt||Wt(),mt||(N=t)},e.preInit)for(\\\"function\\\"==typeof e.preInit&&(e.preInit=[e.preInit]);0<e.preInit.length;)e.preInit.pop()();return Wt(),t.ready});t.exports=r},967:(t,e)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.iterateExtraOptions=void 0,e.iterateExtraOptions=(t,n,r,a)=>{if(\\\"object\\\"==typeof t&&null!==t){if(r.has(t))throw new Error(\\\"Circular reference in options\\\");r.add(t)}Object.entries(t).forEach((([t,i])=>{const o=n?n+t:t;if(\\\"object\\\"==typeof i)(0,e.iterateExtraOptions)(i,o+\\\".\\\",r,a);else if(\\\"string\\\"==typeof i||\\\"number\\\"==typeof i)a(o,i.toString());else{if(\\\"boolean\\\"!=typeof i)throw new Error(\\\"Can't handle extra config type: \\\"+typeof i);a(o,i?\\\"1\\\":\\\"0\\\")}}))}},586:(t,e,n)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.setRunOptions=void 0;const r=n(967),a=n(983),i=n(361);e.setRunOptions=t=>{const e=(0,i.getInstance)();let n=0;const o=[],u=t||{};try{if(void 0===(null==t?void 0:t.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof t.logSeverityLevel||!Number.isInteger(t.logSeverityLevel)||t.logSeverityLevel<0||t.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${t.logSeverityLevel}`);if(void 0===(null==t?void 0:t.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof t.logVerbosityLevel||!Number.isInteger(t.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${t.logVerbosityLevel}`);void 0===(null==t?void 0:t.terminate)&&(u.terminate=!1);let i=0;if(void 0!==(null==t?void 0:t.tag)&&(i=(0,a.allocWasmString)(t.tag,o)),n=e._OrtCreateRunOptions(u.logSeverityLevel,u.logVerbosityLevel,!!u.terminate,i),0===n)throw new Error(\\\"Can't create run options\\\");return void 0!==(null==t?void 0:t.extra)&&(0,r.iterateExtraOptions)(t.extra,\\\"\\\",new WeakSet,((t,r)=>{const i=(0,a.allocWasmString)(t,o),u=(0,a.allocWasmString)(r,o);if(0!==e._OrtAddRunConfigEntry(n,i,u))throw new Error(`Can't set a run config entry: ${t} - ${r}`)})),[n,o]}catch(t){throw 0!==n&&e._OrtReleaseRunOptions(n),o.forEach(e._free),t}}},919:(t,e,n)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.setSessionOptions=void 0;const r=n(967),a=n(983),i=n(361);e.setSessionOptions=t=>{const e=(0,i.getInstance)();let n=0;const o=[],u=t||{};(t=>{t.extra||(t.extra={}),t.extra.session||(t.extra.session={});const e=t.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly=\\\"1\\\")})(u);try{void 0===(null==t?void 0:t.graphOptimizationLevel)&&(u.graphOptimizationLevel=\\\"all\\\");const c=(t=>{switch(t){case\\\"disabled\\\":return 0;case\\\"basic\\\":return 1;case\\\"extended\\\":return 2;case\\\"all\\\":return 99;default:throw new Error(`unsupported graph optimization level: ${t}`)}})(u.graphOptimizationLevel);void 0===(null==t?void 0:t.enableCpuMemArena)&&(u.enableCpuMemArena=!0),void 0===(null==t?void 0:t.enableMemPattern)&&(u.enableMemPattern=!0),void 0===(null==t?void 0:t.executionMode)&&(u.executionMode=\\\"sequential\\\");const s=(t=>{switch(t){case\\\"sequential\\\":return 0;case\\\"parallel\\\":return 1;default:throw new Error(`unsupported execution mode: ${t}`)}})(u.executionMode);let l=0;if(void 0!==(null==t?void 0:t.logId)&&(l=(0,a.allocWasmString)(t.logId,o)),void 0===(null==t?void 0:t.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof t.logSeverityLevel||!Number.isInteger(t.logSeverityLevel)||t.logSeverityLevel<0||t.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${t.logSeverityLevel}`);if(void 0===(null==t?void 0:t.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof t.logVerbosityLevel||!Number.isInteger(t.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${t.logVerbosityLevel}`);if(void 0===(null==t?void 0:t.enableProfiling)&&(u.enableProfiling=!1),n=e._OrtCreateSessionOptions(c,!!u.enableCpuMemArena,!!u.enableMemPattern,s,!!u.enableProfiling,0,l,u.logSeverityLevel,u.logVerbosityLevel),0===n)throw new Error(\\\"Can't create session options\\\");return(null==t?void 0:t.executionProviders)&&((t,e,n)=>{for(const r of e){let e=\\\"string\\\"==typeof r?r:r.name;switch(e){case\\\"xnnpack\\\":e=\\\"XNNPACK\\\";break;case\\\"wasm\\\":case\\\"cpu\\\":continue;default:throw new Error(`not supported EP: ${e}`)}const o=(0,a.allocWasmString)(e,n);if(0!==(0,i.getInstance)()._OrtAppendExecutionProvider(t,o))throw new Error(`Can't append execution provider: ${e}`)}})(n,t.executionProviders,o),void 0!==(null==t?void 0:t.extra)&&(0,r.iterateExtraOptions)(t.extra,\\\"\\\",new WeakSet,((t,r)=>{const i=(0,a.allocWasmString)(t,o),u=(0,a.allocWasmString)(r,o);if(0!==e._OrtAddSessionConfigEntry(n,i,u))throw new Error(`Can't set a session config entry: ${t} - ${r}`)})),[n,o]}catch(t){throw 0!==n&&e._OrtReleaseSessionOptions(n),o.forEach(e._free),t}}},983:(t,e,n)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.allocWasmString=void 0;const r=n(361);e.allocWasmString=(t,e)=>{const n=(0,r.getInstance)(),a=n.lengthBytesUTF8(t)+1,i=n._malloc(a);return n.stringToUTF8(t,i,a),e.push(i),i}},349:(t,e,n)=>{\\\"use strict\\\";Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.extractTransferableBuffers=e.endProfiling=e.run=e.releaseSession=e.createSession=e.createSessionFinalize=e.createSessionAllocate=e.initOrt=void 0;const r=n(586),a=n(919),i=n(983),o=n(361);e.initOrt=(t,e)=>{const n=(0,o.getInstance)()._OrtInit(t,e);if(0!==n)throw new Error(`Can't initialize onnxruntime. error code = ${n}`)};const u=new Map;e.createSessionAllocate=t=>{const e=(0,o.getInstance)(),n=e._malloc(t.byteLength);return e.HEAPU8.set(t,n),[n,t.byteLength]},e.createSessionFinalize=(t,e)=>{const n=(0,o.getInstance)();let r=0,i=0,c=[];try{if([i,c]=(0,a.setSessionOptions)(e),r=n._OrtCreateSession(t[0],t[1],i),0===r)throw new Error(\\\"Can't create a session\\\")}finally{n._free(t[0]),n._OrtReleaseSessionOptions(i),c.forEach(n._free)}const s=n._OrtGetInputCount(r),l=n._OrtGetOutputCount(r),f=[],p=[],h=[],d=[];for(let t=0;t<s;t++){const e=n._OrtGetInputName(r,t);if(0===e)throw new Error(\\\"Can't get an input name\\\");p.push(e),f.push(n.UTF8ToString(e))}for(let t=0;t<l;t++){const e=n._OrtGetOutputName(r,t);if(0===e)throw new Error(\\\"Can't get an output name\\\");d.push(e),h.push(n.UTF8ToString(e))}return u.set(r,[r,p,d]),[r,f,h]},e.createSession=(t,n)=>{const r=(0,e.createSessionAllocate)(t);return(0,e.createSessionFinalize)(r,n)},e.releaseSession=t=>{const e=(0,o.getInstance)(),n=u.get(t);if(!n)throw new Error(\\\"invalid session id\\\");const r=n[0],a=n[1],i=n[2];a.forEach(e._OrtFree),i.forEach(e._OrtFree),e._OrtReleaseSession(r),u.delete(t)};const c=t=>{switch(t){case\\\"int8\\\":return 3;case\\\"uint8\\\":return 2;case\\\"bool\\\":return 9;case\\\"int16\\\":return 5;case\\\"uint16\\\":return 4;case\\\"int32\\\":return 6;case\\\"uint32\\\":return 12;case\\\"float32\\\":return 1;case\\\"float64\\\":return 11;case\\\"string\\\":return 8;case\\\"int64\\\":return 7;case\\\"uint64\\\":return 13;default:throw new Error(`unsupported data type: ${t}`)}},s=t=>{switch(t){case 3:return\\\"int8\\\";case 2:return\\\"uint8\\\";case 9:return\\\"bool\\\";case 5:return\\\"int16\\\";case 4:return\\\"uint16\\\";case 6:return\\\"int32\\\";case 12:return\\\"uint32\\\";case 1:return\\\"float32\\\";case 11:return\\\"float64\\\";case 8:return\\\"string\\\";case 7:return\\\"int64\\\";case 13:return\\\"uint64\\\";default:throw new Error(`unsupported data type: ${t}`)}},l=t=>{switch(t){case\\\"float32\\\":return Float32Array;case\\\"uint8\\\":case\\\"bool\\\":return Uint8Array;case\\\"int8\\\":return Int8Array;case\\\"uint16\\\":return Uint16Array;case\\\"int16\\\":return Int16Array;case\\\"int32\\\":return Int32Array;case\\\"float64\\\":return Float64Array;case\\\"uint32\\\":return Uint32Array;case\\\"int64\\\":return BigInt64Array;case\\\"uint64\\\":return BigUint64Array;default:throw new Error(`unsupported type: ${t}`)}};e.run=(t,e,n,a,f)=>{const p=(0,o.getInstance)(),h=u.get(t);if(!h)throw new Error(\\\"invalid session id\\\");const d=h[0],y=h[1],b=h[2],m=e.length,g=a.length;let v=0,w=[];const _=[],O=[];try{[v,w]=(0,r.setRunOptions)(f);for(let t=0;t<m;t++){const e=n[t][0],r=n[t][1],a=n[t][2];let o,u;if(Array.isArray(a)){u=4*a.length,o=p._malloc(u),O.push(o);let t=o/4;for(let e=0;e<a.length;e++){if(\\\"string\\\"!=typeof a[e])throw new TypeError(`tensor data at index ${e} is not a string`);p.HEAPU32[t++]=(0,i.allocWasmString)(a[e],O)}}else u=a.byteLength,o=p._malloc(u),O.push(o),p.HEAPU8.set(new Uint8Array(a.buffer,a.byteOffset,u),o);const s=p.stackSave(),l=p.stackAlloc(4*r.length);try{let t=l/4;r.forEach((e=>p.HEAP32[t++]=e));const n=p._OrtCreateTensor(c(e),o,u,l,r.length);if(0===n)throw new Error(\\\"Can't create a tensor\\\");_.push(n)}finally{p.stackRestore(s)}}const t=p.stackSave(),o=p.stackAlloc(4*m),u=p.stackAlloc(4*m),h=p.stackAlloc(4*g),A=p.stackAlloc(4*g);try{let n=o/4,r=u/4,i=h/4,c=A/4;for(let t=0;t<m;t++)p.HEAPU32[n++]=_[t],p.HEAPU32[r++]=y[e[t]];for(let t=0;t<g;t++)p.HEAPU32[i++]=0,p.HEAPU32[c++]=b[a[t]];let f=p._OrtRun(d,u,o,m,A,g,h,v);const w=[];if(0===f)for(let t=0;t<g;t++){const e=p.HEAPU32[h/4+t],n=p.stackSave(),r=p.stackAlloc(16);let a,i=0;try{if(f=p._OrtGetTensorData(e,r,r+4,r+8,r+12),0!==f)throw new Error(`Can't access output tensor data. error code = ${f}`);let t=r/4;const o=p.HEAPU32[t++];i=p.HEAPU32[t++];const u=p.HEAPU32[t++],c=p.HEAPU32[t++],h=[];for(let t=0;t<c;t++)h.push(p.HEAPU32[u/4+t]);p._OrtFree(u);const d=0===h.length?1:h.reduce(((t,e)=>t*e));if(a=s(o),\\\"string\\\"===a){const t=[];let e=i/4;for(let n=0;n<d;n++){const r=p.HEAPU32[e++],a=n===d-1?void 0:p.HEAPU32[e]-r;t.push(p.UTF8ToString(r,a))}w.push([a,h,t])}else{const t=new(l(a))(d);new Uint8Array(t.buffer,t.byteOffset,t.byteLength).set(p.HEAPU8.subarray(i,i+t.byteLength)),w.push([a,h,t])}}finally{p.stackRestore(n),\\\"string\\\"===a&&i&&p._free(i),p._OrtReleaseTensor(e)}}if(0===f)return w;throw new Error(`failed to call OrtRun(). error code = ${f}.`)}finally{p.stackRestore(t)}}finally{_.forEach(p._OrtReleaseTensor),O.forEach(p._free),p._OrtReleaseRunOptions(v),w.forEach(p._free)}},e.endProfiling=t=>{const e=(0,o.getInstance)(),n=u.get(t);if(!n)throw new Error(\\\"invalid session id\\\");const r=n[0],a=e._OrtEndProfiling(r);if(0===a)throw new Error(\\\"Can't get an profile file name\\\");e._OrtFree(a)},e.extractTransferableBuffers=t=>{const e=[];for(const n of t){const t=n[2];!Array.isArray(t)&&t.buffer&&e.push(t.buffer)}return e}},361:function(t,e,n){\\\"use strict\\\";var r=this&&this.__createBinding||(Object.create?function(t,e,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(e,n);a&&!(\\\"get\\\"in a?!e.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return e[n]}}),Object.defineProperty(t,r,a)}:function(t,e,n,r){void 0===r&&(r=n),t[r]=e[n]}),a=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,\\\"default\\\",{enumerable:!0,value:e})}:function(t,e){t.default=e}),i=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)\\\"default\\\"!==n&&Object.prototype.hasOwnProperty.call(t,n)&&r(e,t,n);return a(e,t),e},o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,\\\"__esModule\\\",{value:!0}),e.dispose=e.getInstance=e.initializeWebAssembly=void 0;const u=i(n(449)),c=o(n(932)),s=n(474);let l,f=!1,p=!1,h=!1;const d=(t,e)=>e?t?\\\"ort-wasm-simd-threaded.wasm\\\":\\\"ort-wasm-threaded.wasm\\\":t?\\\"ort-wasm-simd.wasm\\\":\\\"ort-wasm.wasm\\\";e.initializeWebAssembly=async t=>{if(f)return Promise.resolve();if(p)throw new Error(\\\"multiple calls to 'initializeWebAssembly()' detected.\\\");if(h)throw new Error(\\\"previous call to 'initializeWebAssembly()' failed.\\\");p=!0;const e=t.initTimeout,r=t.numThreads,a=t.simd,i=r>1&&(()=>{try{return\\\"undefined\\\"!=typeof SharedArrayBuffer&&(\\\"undefined\\\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(t){return!1}})(),o=a&&(()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch(t){return!1}})(),y=\\\"string\\\"==typeof t.wasmPaths?t.wasmPaths:void 0,b=d(!1,i),m=d(o,i),g=\\\"object\\\"==typeof t.wasmPaths?t.wasmPaths[m]:void 0;let v=!1;const w=[];if(e>0&&w.push(new Promise((t=>{setTimeout((()=>{v=!0,t()}),e)}))),w.push(new Promise(((t,e)=>{const r=i?s:c.default,a={locateFile:(t,e)=>i&&t.endsWith(\\\".worker.js\\\")&&\\\"undefined\\\"!=typeof Blob?URL.createObjectURL(new Blob([n(154)],{type:\\\"text/javascript\\\"})):t===b?null!=g?g:(null!=y?y:e)+m:e+t};if(i)if(\\\"undefined\\\"==typeof Blob)a.mainScriptUrlOrBlob=u.join(\\\"/\\\",\\\"ort-wasm-threaded.js\\\");else{const t=`var ortWasmThreaded=(function(){var _scriptDir;return ${r.toString()}})();`;a.mainScriptUrlOrBlob=new Blob([t],{type:\\\"text/javascript\\\"})}r(a).then((e=>{p=!1,f=!0,l=e,t()}),(t=>{p=!1,h=!0,e(t)}))}))),await Promise.race(w),v)throw new Error(`WebAssembly backend initializing failed due to timeout: ${e}ms`)},e.getInstance=()=>{if(f&&l)return l;throw new Error(\\\"WebAssembly is not initialized yet.\\\")},e.dispose=()=>{var t;!f||p||h||(p=!0,null===(t=l.PThread)||void 0===t||t.terminateAllThreads(),l=void 0,p=!1,f=!1,h=!0)}},154:t=>{\\\"use strict\\\";t.exports='\\\"use strict\\\";var e={},t=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node;if(t){var r=require(\\\"worker_threads\\\"),a=r.parentPort;a.on(\\\"message\\\",(e=>onmessage({data:e})));var o=require(\\\"fs\\\");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:r.Worker,importScripts:function(e){(0,eval)(o.readFileSync(e,\\\"utf8\\\"))},postMessage:function(e){a.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var s=!1,n=[],i=function(){var e=Array.prototype.slice.call(arguments).join(\\\" \\\");t?o.writeSync(2,e+\\\"\\\\\\\\n\\\"):console.error(e)};self.alert=function(){var t=Array.prototype.slice.call(arguments).join(\\\" \\\");postMessage({cmd:\\\"alert\\\",text:t,threadId:e._pthread_self()})},e.instantiateWasm=(t,r)=>{var a=new WebAssembly.Instance(e.wasmModule,t);return r(a),e.wasmModule=null,a.exports},self.onunhandledrejection=e=>{throw e.reason??e},self.onmessage=t=>{try{if(\\\"load\\\"===t.data.cmd){if(e.wasmModule=t.data.wasmModule,e.wasmMemory=t.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,\\\"string\\\"==typeof t.data.urlOrBlob)importScripts(t.data.urlOrBlob);else{var r=URL.createObjectURL(t.data.urlOrBlob);importScripts(r),URL.revokeObjectURL(r)}ortWasmThreaded(e).then((function(t){e=t}))}else if(\\\"run\\\"===t.data.cmd){e.__performance_now_clock_drift=performance.now()-t.data.time,e.__emscripten_thread_init(t.data.pthread_ptr,0,0,1),e.establishStackSpace(),e.PThread.receiveObjectTransfer(t.data),e.PThread.threadInitTLS(),s||(n.forEach((t=>{e.executeNotifiedProxyingQueue(t)})),n=[],s=!0);try{e.invokeEntryPoint(t.data.start_routine,t.data.arg)}catch(t){if(\\\"unwind\\\"!=t){if(!(t instanceof e.ExitStatus))throw t;e.keepRuntimeAlive()||e.__emscripten_thread_exit(t.status)}}}else\\\"cancel\\\"===t.data.cmd?e._pthread_self()&&e.__emscripten_thread_exit(-1):\\\"setimmediate\\\"===t.data.target||(\\\"processProxyingQueue\\\"===t.data.cmd?s?e.executeNotifiedProxyingQueue(t.data.queue):n.push(t.data.queue):(i(\\\"worker.js received unknown command \\\"+t.data.cmd),i(t.data)))}catch(t){throw i(\\\"worker.js onmessage() captured an uncaught exception: \\\"+t),t&&t.stack&&i(t.stack),e.__emscripten_thread_crashed&&e.__emscripten_thread_crashed(),t}};\\\\n'},384:()=>{},993:()=>{},908:()=>{},953:()=>{},925:()=>{},449:()=>{}},e={};function n(r){var a=e[r];if(void 0!==a)return a.exports;var i=e[r]={exports:{}};return t[r].call(i.exports,i,i.exports,n),i.exports}n.g=function(){if(\\\"object\\\"==typeof globalThis)return globalThis;try{return this||new Function(\\\"return this\\\")()}catch(t){if(\\\"object\\\"==typeof window)return window}}(),(()=>{\\\"use strict\\\";const t=n(349),e=n(361);self.onmessage=n=>{switch(n.data.type){case\\\"init-wasm\\\":(0,e.initializeWebAssembly)(n.data.in).then((()=>postMessage({type:\\\"init-wasm\\\"})),(t=>postMessage({type:\\\"init-wasm\\\",err:t})));break;case\\\"init-ort\\\":try{const{numThreads:e,loggingLevel:r}=n.data.in;(0,t.initOrt)(e,r),postMessage({type:\\\"init-ort\\\"})}catch(t){postMessage({type:\\\"init-ort\\\",err:t})}break;case\\\"create_allocate\\\":try{const{model:e}=n.data.in,r=(0,t.createSessionAllocate)(e);postMessage({type:\\\"create_allocate\\\",out:r})}catch(t){postMessage({type:\\\"create_allocate\\\",err:t})}break;case\\\"create_finalize\\\":try{const{modeldata:e,options:r}=n.data.in,a=(0,t.createSessionFinalize)(e,r);postMessage({type:\\\"create_finalize\\\",out:a})}catch(t){postMessage({type:\\\"create_finalize\\\",err:t})}break;case\\\"create\\\":try{const{model:e,options:r}=n.data.in,a=(0,t.createSession)(e,r);postMessage({type:\\\"create\\\",out:a})}catch(t){postMessage({type:\\\"create\\\",err:t})}break;case\\\"release\\\":try{const e=n.data.in;(0,t.releaseSession)(e),postMessage({type:\\\"release\\\"})}catch(t){postMessage({type:\\\"release\\\",err:t})}break;case\\\"run\\\":try{const{sessionId:e,inputIndices:r,inputs:a,outputIndices:i,options:o}=n.data.in,u=(0,t.run)(e,r,a,i,o);postMessage({type:\\\"run\\\",out:u},(0,t.extractTransferableBuffers)(u))}catch(t){postMessage({type:\\\"run\\\",err:t})}break;case\\\"end-profiling\\\":try{const e=n.data.in;(0,t.endProfiling)(e),postMessage({type:\\\"end-profiling\\\"})}catch(t){postMessage({type:\\\"end-profiling\\\",err:t})}}}})()})();\\n\", \"Worker\", undefined, undefined);\n}\n","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","module.exports = __WEBPACK_EXTERNAL_MODULE__1670__;","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZE_PREFIX_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {!flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {!Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {!flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n * @param {boolean=} opt_size_prefix\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier, opt_size_prefix) {\n  var size_prefix = opt_size_prefix ? flatbuffers.SIZE_PREFIX_LENGTH : 0;\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH + size_prefix);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT + size_prefix);\n  this.addOffset(root_table);\n  if (size_prefix) {\n    this.addInt32(this.bb.capacity() - this.space);\n  }\n  this.bb.setPosition(this.space);\n};\n\n/**\n * Finalize a size prefixed buffer, pointing to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finishSizePrefixed = function (root_table, opt_file_identifier) {\n  this.finish(root_table, opt_file_identifier, true);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {!flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|!Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(6018);\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\nvar possibleConstructorReturn = require(\"./possibleConstructorReturn.js\");\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}\nmodule.exports = _createSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableRest = require(\"./nonIterableRest.js\");\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH$3) ||\n                        flush === Z_NO_FLUSH$2 ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH$2 && flush !== Z_FINISH$3 &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH$3) && flush !== Z_NO_FLUSH$2 &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH$3 && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR$2;\n  }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\n/* ========================================================================= */\nconst deflate$2 = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK$3;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 16209;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n"],"names":["module","exports","e","t","n","r","s","o","u","i","f","Error","code","l","call","length","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","len","immediate","task","push","this","self","window","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","value","returnValue","reject","resolve","getThen","obj","then","apply","arguments","thenable","onError","onSuccess","tryToUnwrap","result","tryCatch","status","out","reason","all","iterable","Object","prototype","toString","values","Array","resolved","allResolver","resolveFromAll","outValue","error","race","response","constructor","_typeof","Symbol","iterator","_classCallCheck","instance","Constructor","getIDB","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","idb","isIndexedDBValid","open","isSafari","openDatabase","test","navigator","userAgent","platform","hasFetch","fetch","indexOf","IDBKeyRange","createBlob","parts","properties","Blob","name","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","type","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","key","console","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_checkBlobSupportWithoutCaching","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","match","matchedEdge","parseInt","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","createDbContext","db","close","dbArgs","version","openreq","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","onversionchange","target","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","base64","btoa","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_tryReconnect","forages","forage","createTransaction","mode","retries","undefined","tx","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","getItem","req","get","iterate","openCursor","iterationNumber","cursor","setItem","blobSupport","store","removeItem","clear","count","advanced","openKeyCursor","advance","keys","dropInstance","currentConfig","config","dbPromise","dropObjectPromise","deleteObjectStore","_forage2","dropDBPromise","deleteDatabase","onblocked","asyncStorage","_driver","_support","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","buffer","bytes","bufferToString","base64String","substring","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","localforageSerializer","createDbTable","executeSql","_initStorage$1","dbInfoPromise","description","size","serializer","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","getItem$1","item","iterate$1","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","setItem$1","removeItem$1","clear$1","length$1","c","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","operations","webSQLStorage","isLocalStorageValid","localStorage","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","x","y","isNaN","includes","array","searchElement","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","LocalForage","driverTypeKey","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","configureMissingMethods","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance","localforage_js","backends","backendsSortedByPriority","registerBackend","backend","priority","init","createSessionHandler","currentBackend","splice","resolveBackend","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","backendHints","backendNames","errors","_iterator","_step","backendName","backendInfo","isInitializing","wrap","_context","prev","next","_createForOfIteratorHelper","done","initialized","abrupt","aborted","initPromise","t0","finish","t1","map","join","stop","_x","env","EnvImpl","wasm","webgl","logLevelInternal","_createClass","set","isBigInt64ArrayAvailable","BigInt64Array","from","isBigUint64ArrayAvailable","BigUint64Array","NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP","Map","NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP","Tensor","arg0","arg1","arg2","dims","typedArrayConstructor","firstElementType","mappedType","dim","Number","isSafeInteger","RangeError","calculateSize","image","pixels2DContext","getContext","width","height","channels","inputformat","format","normMean","_a","norm","mean","normBias","_b","bias","offset","rImagePointer","gImagePointer","bImagePointer","aImagePointer","rTensorPointer","gTensorPointer","bTensorPointer","aTensorPointer","createImageData","bitmapFormat","outputformat","tensorFormat","float32Data","step","_fromImage","isHTMLImageEle","isImageDataEle","isImageBitmap","isURL","tensorConfig","canvas","_height","_width","tempCanvas","_pixels2DContext","_pixels2DContext2","_height2","_width2","HTMLImageElement","ImageData","ImageBitmap","naturalHeight","naturalWidth","resizedHeight","resizedWidth","drawImage","getImageData","putImageData","bufferToTensor","context","newImage","Image","crossOrigin","src","img","_x2","TensorImpl","InferenceSession","handler","_run","feeds","fetches","isFetchesEmpty","isFetches","arg1Keys","_iterator2","_step2","_name","v","_iterator3","_step3","_name3","_iterator4","_step4","_name2","outputNames","getOwnPropertyNames","inputNames","run","sent","_x3","startProfiling","endProfiling","_create","_callee2","arg3","filePathOrUint8Array","byteOffset","byteLength","eps","_context2","SharedArrayBuffer","executionProviders","_x4","_x5","_x6","_x7","InferenceSessionImpl","__WEBPACK_EXTERNAL_MODULE__1670__","_scriptDir","currentScript","$","C","H","F","N","L","R","a","d","h","g","b","assign","m","_","importScripts","w","process","versions","node","ENVIRONMENT_IS_PTHREAD","T","S","locateFile","dirname","normalize","readFileSync","readFile","argv","on","ut","J","exitCode","P","exit","inspect","Worker","location","href","substr","lastIndexOf","XMLHttpRequest","send","responseText","responseType","performance","O","log","bind","A","writeSync","E","I","print","printErr","thisProgram","quit","wasmBinary","D","noExitRuntime","WebAssembly","it","M","U","TextDecoder","V","decode","subarray","fromCharCode","B","z","G","HEAP8","HEAP16","HEAP32","HEAPU8","HEAPU16","HEAPU32","HEAPF32","HEAPF64","W","INITIAL_MEMORY","wasmMemory","Memory","initial","maximum","shared","q","X","Y","K","Z","Q","preRun","shift","unshift","tt","et","nt","rt","cmd","onAbort","RuntimeError","ot","startsWith","at","st","message","ct","dt","Vb","mc","lt","Cc","ac","Ub","start_routine","Ic","zc","pthread_ptr","$b","time","now","Nc","loaded","pt","qt","oc","onExit","ft","bt","me","ht","be","re","ie","Yb","qc","fc","Ec","Pc","receiveObjectTransfer","Gc","threadInitTLS","pc","setExitStatus","nc","_Object$values","terminate","xe","forEach","Fc","Bc","targetThread","de","Qc","transferList","Vt","thread","threadId","text","alert","filename","lineno","urlOrBlob","mainScriptUrlOrBlob","wasmModule","yc","PThread","establishStackSpace","Oe","Ee","mt","yt","invokeEntryPoint","Te","_t","vt","wt","xt","Tt","St","Zb","Sb","xc","bc","wc","Dc","rc","hc","uc","ic","kc","cc","sc","Atomics","add","Hc","sub","tc","vc","De","Ot","ge","At","Et","Oc","It","Pt","Dt","$t","kt","Ct","Ft","Nt","Lt","Rt","jt","Mt","Ut","we","compareExchange","Bt","zt","Gt","Ht","he","Wt","toTimeString","Date","getFullYear","getTimezoneOffset","Math","max","Ae","gt","Ie","ve","executeNotifiedProxyingQueue","hrtime","__performance_now_clock_drift","Xt","Yt","Kt","Zt","USER","LOGNAME","PATH","PWD","HOME","LANG","languages","Jt","Qt","te","ee","ne","oe","ae","se","ue","ce","le","getMonth","getDate","getDay","Wb","Xb","getTime","setDate","setMonth","setFullYear","Lc","Kc","dc","jc","ec","Tb","Rc","Jc","Mc","RegExp","split","floor","abs","pe","fe","ma","Se","Pe","pa","Fa","ye","xa","Ma","ua","wa","oa","Ka","Ca","Ja","va","sa","La","ta","Ta","Ua","ya","Oa","za","Ea","Pa","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","Qa","getSeconds","getMinutes","getHours","min","Ra","setTime","Aa","Ba","Sa","Ac","ra","Ia","copyWithin","cpus","hardwareConcurrency","Da","qa","grow","Na","Ga","Ha","ga","na","lc","crypto","getRandomValues","randomBytes","ia","ja","aa","Me","ke","Ue","ca","Re","$e","ba","je","Ce","ha","ka","fa","Fe","da","Le","ea","Ne","la","asm","sb","ub","Va","monitorRunDependencies","clearInterval","credentials","ok","arrayBuffer","catch","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","_OrtInit","Wa","_OrtCreateSessionOptions","Xa","_OrtAppendExecutionProvider","Ya","_OrtAddSessionConfigEntry","Za","_OrtReleaseSessionOptions","_OrtCreateSession","$a","_OrtReleaseSession","ab","_OrtGetInputCount","bb","_OrtGetOutputCount","cb","_OrtGetInputName","_OrtGetOutputName","eb","_OrtFree","fb","_OrtCreateTensor","gb","_OrtGetTensorData","hb","_OrtReleaseTensor","ib","_OrtCreateRunOptions","jb","_OrtAddRunConfigEntry","kb","_OrtReleaseRunOptions","lb","_OrtRun","mb","_OrtEndProfiling","nb","_pthread_self","ob","_malloc","pb","_free","qb","_fflush","rb","__emscripten_tls_init","___funcs_on_exit","tb","__emscripten_thread_init","vb","__emscripten_thread_crashed","wb","_e","_emscripten_run_in_main_runtime_thread_js","xb","__emscripten_proxy_execute_task_queue","yb","__emscripten_thread_free_data","zb","__emscripten_thread_exit","Ab","_setThrew","Bb","_emscripten_stack_set_limits","Cb","stackSave","Db","stackRestore","Eb","stackAlloc","Fb","___cxa_can_catch","Gb","___cxa_is_pointer_type","Hb","dynCall_j","Ib","dynCall_iiiiij","Jb","dynCall_jii","Kb","dynCall_viiiiij","Lb","dynCall_vjji","Mb","dynCall_viiijjjii","Nb","dynCall_iij","Ob","dynCall_ji","Pb","dynCall_iiiiiij","Qb","dynCall_iiij","Rb","Ve","calledRun","onRuntimeInitialized","postRun","setStatus","UTF8ToString","stringToUTF8","lengthBytesUTF8","keepRuntimeAlive","ExitStatus","preInit","charAt","ceil","encode","_listeners","fn","ctx","off","emit","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","round","LN2","pow","NaN","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","inquire","moduleName","mod","eval","read","write","__esModule","EMPTY","isGuid","validator","create","gen","createEmpty","raw","random","equals","isEmpty","toJSON","Guid","Instance","Module","low","high","unsigned","__isLong__","defineProperty","isLong","neg","fromInt","fromNumber","fromBits","mul","fromString","fromValue","ZERO","UZERO","ONE","UONE","NEG_ONE","MAX_VALUE","MAX_UNSIGNED_VALUE","MIN_VALUE","toInt","toNumber","isZero","isNegative","eq","div","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","eqz","isPositive","isOdd","isEven","notEquals","neq","lessThan","comp","lessThanOrEqual","lte","greaterThan","greaterThanOrEqual","gte","compare","negate","not","subtract","multiply","get_high","divide","div_u","div_s","toUnsigned","shru","shr","shl","modulo","rem_u","rem_s","rem","and","or","xor","shiftLeft","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","Reader","Writer","util","roots","default","onnx","Version","AttributeProto","floats","ints","strings","tensors","graphs","refAttrName","docString","Long","newBuffer","emptyArray","uint32","string","float","int64","TensorProto","fork","ldelim","GraphProto","int32","encodeDelimited","pos","skipType","decodeDelimited","verify","isString","isInteger","fromObject","LongBits","toObject","arrays","defaults","longs","enums","json","isFinite","AttributeType","toJSONOptions","ValueInfoProto","TypeProto","NodeProto","input","output","attribute","opType","domain","ModelProto","opsetImport","metadataProps","irVersion","producerName","producerVersion","modelVersion","graph","OperatorSetIdProto","StringStringEntryProto","TensorAnnotation","quantParameterTensorNames","tensorName","initializer","valueInfo","quantizationAnnotation","floatData","int32Data","stringData","int64Data","externalData","doubleData","uint64Data","dataType","segment","rawData","dataLocation","Segment","double","uint64","DataLocation","DataType","begin","end","TensorShapeProto","Dimension","dimValue","dimParam","denotation","oneOfGetter","oneOfSetter","oneofs","tensorType","elemType","shape","_configure","BufferWriter","BufferReader","build","rpc","configure","utf8","Buffer","isBuffer","lo","hi","_slice","sint32","bool","fixed32","sfixed32","skip","merge","sint64","zzDecode","fixed64","sfixed64","utf8Slice","Service","EventEmitter","rpcImpl","requestDelimited","Boolean","responseDelimited","rpcCall","asPromise","zero","zzEncode","zeroHash","toLong","fromHash","toHash","captureStackTrace","stack","pool","isNode","freeze","emptyObject","isObject","isset","isSet","utf8Write","_Buffer_from","_Buffer_allocUnsafe","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","lcFirst","toLowerCase","newError","ProtocolError","allocUnsafe","val","head","tail","states","alloc","_push","reset","writeBytesBuffer","copy","_class","_init","_createSessionHandler","Session","loadModel","OnnxjsSessionHandler","rX","initTimeout","simd","proxy","numThreads","c8","_class2","_init2","_callee3","_context3","initWasm","_createSessionHandler2","_callee4","_context4","OnnxruntimeWebAssemblySessionHandler","_this","_cacheKey","sort","createAttributeWithCacheKey","onnxruntime","experimental","fbs","_attributes","getValue","getType","Attribute","delete","FLOAT","INT","STRING","TENSOR","FLOATS","INTS","STRINGS","TENSORS","GRAPH","GRAPHS","getValueNoCheck","LongUtil","longToNumber","fromProto","fromOrtTensor","decodeUtf8String","getValueNoCheckFromOnnxFormat","getValueNoCheckFromOrtFormat","floatsArray","intsLength","stringsLength","tensorsLength","_o","_callee6","_e10","_r3","_context6","initialize","dispose","WebGLBackend","_t8","_callee5","_e9","_t10","_n5","_context5","_class3","contextId","matmulMaxBatchSize","textureCacheMode","pack","async","glContext","createWebGLContext","Logger","setWithEnv","verbose","warning","WebGLSessionHandler","_i$GlslLib","_inherits","_super","_createSuper","offsetToCoords","coordsToOffset","toVec","valueFrom","getCommonUtilFuncs","getInputsSamplingSnippets","getOutputSamplingSnippet","GlslLibRoutine","outputTextureLayout","isPacked","getPackedOutputSamplingSnippet","getUnpackedOutputSamplingSnippet","unpackedShape","getOutputScalarCoords","getOutputPacked1DCoords","getOutputPacked2DCoords","getOutputPacked3DCoords","getOutputPackedNDCoords","getGlsl","floatTextureSetRGBA","getOutputUnpacked1DCoords","getOutputUnpacked2DCoords","getOutputUnpacked3DCoords","getOutputUnpacked4DCoords","getOutputUnpacked5DCoords","getOutputUnpacked6DCoords","floatTextureSetR","ArrayUtil","arraysEqual","texture2D","_this2","programInfo","inputTextureLayouts","generateShaderFuncNameFromInputSamplerName","getPackedSamplerFromInput","getUnpackedSamplerFromInput","generateShaderFuncNameFromInputSamplerNameAtOutCoords","getPackedSamplerAtOutputCoords","getUnpackedSamplerAtOutputCoords","BroadcastUtil","getBroadcastDims","getCoordsDataType","getGlChannels","ShapeUtil","getPackedSamplerScalar","getPackedSampler1D","getPackedSampler2D","getPackedSampler3D","getPackedSamplerND","getUnpackedSamplerScalar","getUnpackedSampler1D","getUnpackedSampler2D","getUnpackedSampler3D","getUnpackedSampler4D","getUnpackedSampler5D","getUnpackedSampler6D","squeezeInputShape","routineBody","getSqueezedParams","dependencies","_ref2","squeezeShape","newShape","keptDims","_ref3","reverse","_ref4","_ref5","strides","_this3","getValueFromSingle","GlslLib","CoordsGlslLib","FunctionType","ValueBased","Positional","GlslContext","_class4","_class5","_class6","GlslLibRoutineNode","_class7","TopologicalSortGlslRoutines","_class8","Set","createOrderedNodes","dfsTraverse","has","_r$GlslLib","_super2","encodeFloat32","decodeFloat32","isLittleEndian","EncodingGlslLib","_r$GlslLib2","_super3","setFragColor","getColorAsFloat","FragColorGlslLib","replaceInlines","exec","trim","filter","params","body","_loop","GlslPreprocessor","_class9","_this4","libs","glslLibRoutineDependencyGraph","glslRegistry","getFunctions","addDependency","shaderSource","hasMain","getDefaultFragShaderMain","getFragShaderPreamble","getUniforms","variables","getImports","selectGlslLibRoutinesToBeIncluded","_this5","returnOrderedNodes","_step5","_iterator5","arrayLength","encoding","fragcolor","vec","VecGlslLib","shapeUtils","ShapeUtilsGlslLib","coordinates","_r$GlslLib3","_super4","bcastIndex","bcastMatmulIndex","offsetToIndices","indicesToOffset","incrementIndices","_this6","_this7","_this8","indexToOffsetSingle","_this9","offsetToIndicesSingle","_this10","varyingVertex","varyingFrag","outputDeclaration","getVertexShaderSource","_r$GlslLib4","_super5","binaryVecFunctions","copyVec","setVecItem","getVecItem","WebGLInferenceHandler","_class10","session","packedTextureDataCache","unpackedTextureDataCache","calculateTextureWidthAndHeight","layoutStrategy","inputTypes","getOrCreateTextureData","cacheHint","programManager","getArtifact","createTextureLayoutFromTextureType","textureType","createTextureData","setArtifact","runProgram","executeProgram","tensor","TextureType","packed","getTextureData","dataId","unpack","packedLastDimension","numberData","createTextureLayoutFromShape","reverseWH","textureManager","createTextureFromLayout","createTextureDataFromTexture","unpacked","computeStrides","texture","isReshapeCheap","processDims3D","reshapePacked","createPackedReshape3DProgramInfoLoader","_this11","readTexture","_ref6","_callee7","_context7","readTextureAsync","setTextureData","isInitializer","_this12","clearActiveTextures","releaseTexture","isFloat32DownloadSupported","readUint8TextureAsFloat","encodeAsUint8","_readTextureAsync","_callee8","_context8","_x8","createPackProgramInfoLoader","createUnpackProgramInfoLoader","WEBGL_OP_RESOLVE_RULES","acos","asin","atan","averagePool","parseAveragePoolAttributes","batchNormalization","parseBatchNormalizationAttributes","cast","parseCastAttributes","clip","parseClipAttributes","clipV11","parseConcatAttributes","conv","parseConvAttributes","convTranspose","parseConvTransposeAttributes","cos","identity","depthToSpace","parseDepthToSpaceAttributes","equal","elu","parseEluAttributes","exp","flatten","parseFlattenAttributes","gather","parseGatherAttributes","gemm","parseGemmAttributesV7","parseGemmAttributesV11","globalAveragePool","parseGlobalAveragePoolAttributes","globalMaxPool","greater","imageScaler","parseImageScalerAttributes","instanceNormalization","parseInstanceNormalizationAttributes","leakyRelu","parseLeakyReluAttributes","less","matMul","parseMatMulAttributes","maxPool","parseMaxPoolAttributes","padV2","parsePadAttributesV2","padV11","parsePadAttributesV11","pRelu","reduceLogSum","parseReduceAttributes","reduceMax","reduceMean","reduceMin","reduceProd","reduceSum","reduceLogSumSquare","relu","reshape","resize","parseResizeAttributesV10","parseResizeAttributesV11","sigmoid","sin","sliceV10","parseSliceAttributes","softmax","parseSoftmaxAttributes","softmaxV13","parseSoftmaxAttributesV13","parseSplitAttributes","sqrt","squeeze","parseSqueezeAttributes","squeezeV13","sum","tan","tanh","tile","transpose","parseTransposeAttributes","upsample","parseUpsampleAttributesV7","parseUpsampleAttributesV9","unsqueeze","parseUnsqueezeAttributes","unsqueezeV13","cacheKey","attributes","getFloat","getInt","epsilon","momentum","spatial","_t$calculateTextureWi","_t$calculateTextureWi2","_slicedToArray","glslAdd","glslDiv","glslMul","glslSub","glslEqual","glslGreater","glslLess","glslAnd","glslOr","glslXor","glslPow","glslPRelu","areEqual","calcShape","ProtoUtil","tensorDataTypeFromProto","createPackedConcatProgramInfoLoader","fill","getChannels","unpackFromChannel","axis","_step6","_iterator6","createUnpackedGroupedConvProgramInfoLoader","group","autoPad","dilations","kernelShape","pads","calculateOutputShape","_ref7","getActivationSnippet","activationFunction","applyActivation","conv2DPackedPointwise","createPackedMatmulProgramInfoLoader","conv2DPacked","createPackedIm2ColProgramInfoLoader","_toConsumableArray","outputShape","_ref8","outputPadding","parseInternalActivationAttributes","getString","getInts","_ref9","reshapeUnpacked","createMatmulProgramInfoLoader","createIm2ColProgramInfoLoader","createDotProductProgramInfoLoader","PoolConvUtil","adjustPadsBasedOnAutoPad","blocksize","perm","_ref10","activationCacheKey","calculateIm2ColDims","_t$calculateTextureWi3","_t$calculateTextureWi4","_t$calculateTextureWi5","_t$calculateTextureWi6","_ref12","flattenShape","activation","glslRelu","glslSigmoid","glslClip","clipMin","clipMax","_t$getFloats","getFloats","MIN_CLIP","MAX_CLIP","_t$getFloats2","normalizeAxis","NUMBER_TYPES","transA","transB","alpha","beta","isOptionalC","_i$GemmUtil$getShapeO","GemmUtil","getShapeOfGemmResult","_i$GemmUtil$getShapeO2","scale","_t$calculateTextureWi7","_t$calculateTextureWi8","_ref13","getBiasForMatmul","_ref14","unpackedReversed","getVecChannels","integerData","padShape","_t$calculateTextureWi9","_t$calculateTextureWi10","ceilMode","countIncludePad","_u18","_u19","storageOrder","_u20","_u21","adjustPoolAttributes","computePoolOutputShape","reduce","axes","keepDims","normalizeAxes","calculateReshapedDims","validateInputs","parseUpsampleAttributes","_l4","_l5","every","coordinateTransformMode","scales","scalesInputIdx","sizesInputIdx","isResize","scalesValidation","starts","ends","some","sizeToDimension","sizeFromDimension","_t$calculateTextureWi11","_t$calculateTextureWi12","_t$calculateTextureWi13","_t$calculateTextureWi14","_t$calculateTextureWi15","_t$calculateTextureWi16","_loop2","_i15","outputs","numOutputs","_i$SplitUtil$splitSha","SplitUtil","splitShape","_i$SplitUtil$splitSha3","_i$SplitUtil$splitSha4","sortBasedOnPerm","downloadUint8AsFloat","glslAbs","glslAcos","glslAsin","glslAtan","glslCeil","glslCos","glslElu","glslExp","glslFloor","glslIdentity","glslLeakyRelu","glslLog","glslNeg","glslNot","glslSin","glslSqrt","glslTan","glslTanh","createUnpackProgramInfo","unsqueezeShape","inputs","opset","extrapolationValue","useExtrapolation","needRoiInput","nearestMode","cubicCoefficientA","excludeOutside","useNearest2xOptimization","roiInputIdx","_t$calculateTextureWi17","_t$calculateTextureWi18","_t$calculateTextureWi19","_t$calculateTextureWi20","_step7","_iterator7","_step8","_iterator8","ProgramManager","_class11","profiler","textureLayoutStrategy","repo","attributesBound","_this13","event","gl","program","useProgram","bindOutput","bindAttributes","attribLocations","bindUniforms","uniformLocations","draw","_this14","vertexShader","deleteShader","deleteProgram","_this15","preprocess","compile","getUniformLocations","getAttribLocations","compileShader","VERTEX_SHADER","debug","FRAGMENT_SHADER","createProgram","attachFramebuffer","position","textureCoord","setVertexAttributes","_step9","_this16","_iterator9","_loop3","_step9$value","find","bindTexture","uniform1fv","uniform1f","uniform1iv","uniform1i","bindTextureToUniform","getAttribLocation","_step10","_iterator10","getUniformLocation","_step11","_iterator11","_class12","PreferLogicalStrategy","maxTextureSize","TextureManager","reuseTextures","pack2unpackMap","unpack2packMap","getValues","initializers","_this17","resolveOperator","impl","opImpl","opInit","RedFloat32DataEncoder","_class13","internalFormat","R32F","RED","channelSize","RGBA32F","RGBA","allocate","RGBAFloatDataEncoder","_class14","Uint8DataEncoder","_class15","ALPHA","UNSIGNED_BYTE","assert","AlwaysKeepOriginalSizeStrategy","_class16","breakAxis","_class17","computeTexture","parseAxisParam","isInt","sizeFromShape","getRowsCols","sizeToSquarishShape","getBatchDim","_t$computeTextureWH","computeTextureWH","_t$computeTextureWH2","reversedWH","_class18","pendingRead","inUseTextures","idleTextures","textureLookup","toEncoderType","getEncoder","updateTexture","toTextureData","allocateTexture","_this18","toTensorData","_readTextureAsync2","_callee10","_t48","_this19","_context10","_callee9","_context9","createAndWaitForFence","_x9","_x10","_x11","_this20","deleteTexture","getPackedShape","repeatedTry","_ref16","_callee11","_args11","_context11","_x12","toUpperCase","OffscreenCanvas","depth","antialias","stencil","preserveDrawingBuffer","premultipliedAlpha","failIfMajorPerformanceCaveat","WebGLContext","webgl2","isContextLost","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","createNewWebGLContext","linearSearchLastTrue","_class19","frameBufferBound","itemsToPoll","getExtensions","vertexbuffer","createVertexbuffer","framebuffer","createFramebuffer","queryVitalParameters","createTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","checkError","texSubImage2D","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","viewport","scissor","readPixels","getParameter","ACTIVE_TEXTURE","TEXTURE0","TEXTURE_BINDING_2D","FRAMEBUFFER_BINDING","vertexAttribPointer","enableVertexAttribArray","attachShader","linkProgram","createShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","activeTexture","drawArrays","TRIANGLE_STRIP","getError","NO_ERROR","INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","INVALID_FRAMEBUFFER_OPERATION","OUT_OF_MEMORY","CONTEXT_LOST_WEBGL","isRenderFloat32Supported","textureHalfFloatExtension","HALF_FLOAT_OES","maxTextureImageUnits","disposed","deleteFramebuffer","bindBuffer","ARRAY_BUFFER","deleteBuffer","ELEMENT_ARRAY_BUFFER","createBuffer","createDefaultGeometry","bufferData","STATIC_DRAW","isFloatTextureAttachableToFrameBuffer","checkFloatTextureAttachableToFrameBuffer","checkRenderFloat32","checkFloat32Download","isBlendSupported","checkFloat32Blend","MAX_TEXTURE_SIZE","MAX_TEXTURE_IMAGE_UNITS","colorBufferFloatExtension","getExtension","disjointTimerQueryWebgl2Extension","textureFloatExtension","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","POINTS","createQuery","beginQuery","TIME_ELAPSED_EXT","endQuery","getQueryParameter","QUERY_RESULT_AVAILABLE","GPU_DISJOINT_EXT","QUERY_RESULT","deleteQuery","_waitForQueryAndGetTime","_callee12","_this21","_context12","isTimerResultAvailable","getTimerResult","_x13","_createAndWaitForFence","_callee13","_context13","createFence","pollFence","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","clientWaitSync","ALREADY_SIGNALED","CONDITION_SATISFIED","query","isFencePassed","_pollFence","_callee14","_this22","_context14","addItemToPoll","_x14","isDoneFn","resolveFn","_addItemToPoll","_callee15","_this23","_context15","pollItems","_x15","_x16","op","ExecutionPlan","_class20","_this24","getNodes","_ops","_starter","_step12","_iterator12","_values","getInputIndices","_execute","_callee18","_this25","_context19","_callee17","_loop4","_t53","_e43","_n35","_context18","createInferenceHandler","_context17","_callee16","_context16","_step13","_iterator13","to","_step14","_iterator14","delegateYield","getOutputIndices","getData","_x17","_x18","Graph","_from","_to","tensorValueTypeFromProto","Node","tensorAttributesFromORTFormat","executeNode","buildGraph","transformGraph","checkIsAcyclic","_allInputIndices","_allInputNames","_allOutputIndices","_allOutputNames","_allData","_nodes","buildGraphFromOnnxFormat","buildGraphFromOrtFormat","_step15","_iterator15","_step16","_iterator16","tensorDimsFromProto","_step17","_iterator17","_step18","_iterator18","_step19","_iterator19","_step20","_iterator20","inputsLength","nodeArgsLength","nodeArgs","TypeInfoValue","tensor_type","TensorTypeAndShape","dimLength","initializersLength","tensorDimsFromORTFormat","outputsLength","nodes","nodesLength","attributesLength","_this26","_loop5","removeAllIdentityNodes","removeAllDropoutNodes","fuseConvActivationNodes","finalizeGraph","_this27","_loop6","_e54","_e53","_loop7","_e56","_e55","_step21","_iterator21","_step22","_iterator22","deleteNode","_step23","_iterator23","_step24","_iterator24","isActivation","fatal","none","_class21","_class22","color","provider","minimalSeverity","logDateTime","logSourceLocation","toISOString","logLevel","category","startTime","endCallback","timer","_checkTimer","_callee19","_context20","endTimer","waitForQueryAndGetTime","endTime","Profiler","_class23","_started","_flushPointer","_maxNumberEvents","_flushBatchSize","_flushIntervalInMilliseconds","_timingEvents","_flushTime","logOneEvent","_ref19","_callee20","_context21","_x19","_ref20","_callee21","_context22","_x20","_this28","endSync","beginTimer","_ref21","_callee22","_context23","_x21","_end","_callee23","_context24","checkTimer","_x22","toFixed","maxNumberEvents","flushBatchSize","flushIntervalInMilliseconds","Model","_class24","loadFromOnnxFormat","loadFromOrtFormat","_opsets","_graph","flatbuffers","ByteBuffer","getRootAsInferenceSession","model","opsetImportLength","INT_TYPES","FLOAT_TYPES","endsWith","_step25","_iterator25","_step26","_iterator26","UNDEFINED","SPARSE_TENSOR","SPARSE_TENSORS","UNKNOWN","VALUE","PARAM","DimensionValueType","UINT8","INT8","UINT16","INT16","INT32","INT64","BOOL","FLOAT16","DOUBLE","UINT32","UINT64","COMPLEX64","COMPLEX128","BFLOAT16","TensorDataType","Primitive","Fused","NodeType","NONE","sequence_type","map_type","bb_pos","__offset","__init","__indirect","__vector","__vector_len","readInt32","setPosition","SIZE_PREFIX_LENGTH","startObject","addFieldOffset","startVector","addOffset","endVector","endObject","startShape","addDim","endShape","Shape","DimensionValue","__string","startDimension","addValue","addDenotation","endDimension","readInt8","readInt64","createLong","addFieldInt8","addFieldInt64","startDimensionValue","addDimType","addDimValue","addDimParam","endDimensionValue","addFieldInt32","startTensorTypeAndShape","addElemType","addShape","endTensorTypeAndShape","TypeInfo","startMapType","addKeyType","addValueType","endMapType","MapType","startSequenceType","endSequenceType","SequenceType","EdgeEnd","_class25","readUint32","prep","writeInt32","startNodeEdge","addNodeIndex","addInputEdges","addOutputEdges","endNodeEdge","NodeEdge","addInt32","startNode","addName","addDocString","addDomain","addSinceVersion","addIndex","addOpType","addType","addExecutionProviderType","addInputs","addOutputs","addAttributes","addInputArgCounts","addImplicitInputs","endNode","startValueInfo","endValueInfo","ValueInfo","readUint8","__union","startTypeInfo","endTypeInfo","startOperatorSetId","addVersion","endOperatorSetId","OperatorSetId","addInt64","addInt8","startTensor","addDims","addDataType","addRawData","addStringData","endTensor","startSparseTensor","addValues","addIndices","endSparseTensor","SparseTensor","readFloat32","addFieldFloat32","addFloat32","startAttribute","addF","addI","addS","addT","addG","addFloats","addInts","addStrings","addTensors","addGraphs","endAttribute","startGraph","addInitializers","addNodeArgs","addNodes","addMaxNodeIndex","addNodeEdges","addSparseInitializers","endGraph","startModel","addIrVersion","addOpsetImport","addProducerName","addProducerVersion","addModelVersion","addGraph","addGraphDocString","endModel","readUint64","startKernelCreateInfos","addNodeIndices","addKernelDefHashes","endKernelCreateInfos","KernelCreateInfos","SessionState","requiredField","startSubGraphSessionState","addGraphId","addSessionState","endSubGraphSessionState","SubGraphSessionState","startSessionState","addKernels","addSubGraphSessionStates","endSessionState","__has_identifier","startInferenceSession","addOrtVersion","addModel","endInferenceSession","_class26","_dispose","_callee24","_context25","_callee25","_e77","_n142","_context26","_x23","_x24","_x25","_class27","_initialized","backendHint","graphInputTypes","graphInputDims","_model","getInputNames","getOutputNames","start","_loadModel","_callee27","_this29","_context28","_callee26","_e78","_n143","_n144","_r36","_r37","_context27","sessionHandler","promisify","isView","_x26","_x27","_x28","_this30","load","onGraphInitialized","initializeOps","_executionPlan","_run2","_callee29","_this31","_context30","_callee28","_context29","normalizeAndValidateInputs","execute","createOutput","_x29","validateInputTensorDims","validateInputTensorTypes","compareTensorDims","opsets","dataProvider","asyncDataProvider","cache","validateDimsAndCalcSize","_getData","_callee30","_context31","_strides","DataView","stringDataLength","rawDataArray","rawDataLength","getUint8","getInt8","getUint16","getInt16","getFloat32","getInt32","getUint32","getFloat64","checkInputsShape","_class28","MatMulUtil","calcMatMulShape","_n155","fillIndex","arrayCopyHelper","_class29","isValidBroadcast","dimsLength","getSizeFromDimensionRange","_this32","_step27","_iterator27","MathUtil","_class30","determineSplit","calcReduceShape","calcReduceByAxis","ReduceUtil","adjustPadAndReturnShape","computeShapeHelper","iterateExtraOptions","entries","_ref24","_ref25","_callee31","_context32","wasmPaths","in","initializeWebAssembly","initOrt","_ref27","_callee32","_context33","loggingLevel","createSessionAllocate","_ref28","_callee33","_context34","_x32","createSessionFinalize","_ref29","_callee34","_context35","modeldata","_x33","_x34","createSession","_ref30","_callee35","_context36","_x35","_x36","releaseSession","_ref31","_callee36","_context37","_ref32","_callee37","_context38","sessionId","inputIndices","outputIndices","extractTransferableBuffers","_x38","_x39","_x40","_x41","_x42","_ref33","_callee38","_context39","setRunOptions","getInstance","logSeverityLevel","logVerbosityLevel","tag","allocWasmString","extra","WeakSet","_class31","_createSessionAllocate","_callee39","_context40","_x44","_loadModel2","_callee40","_n163","_yield","_yield2","_n164","_yield3","_yield4","_yield5","_yield6","_context41","_x45","_x46","_dispose2","_callee41","_context42","_run3","_callee42","_t91","_this33","_context43","_x47","_x48","_x49","setSessionOptions","use_ort_model_bytes_directly","graphOptimizationLevel","enableCpuMemArena","enableMemPattern","executionMode","logId","enableProfiling","_step28","_iterator28","_ref34","_ref35","_ref36","_ref37","_loop8","_step29","_iterator29","_ref38","_callee43","_context44","validate","URL","createObjectURL","terminateAllThreads","webkitURL","revokeObjectURL","encodeURIComponent","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","float32","float64","toFloat64","Builder","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","capacity","forceDefaults","dataBuffer","asUint8Array","growByteBuffer","pad","writeInt8","writeInt16","writeInt64","writeFloat32","writeFloat64","addInt16","addFloat64","slot","addFieldInt16","addFieldFloat64","addFieldStruct","nested","notNested","readInt16","finishSizePrefixed","createString","bytes_","position_","readUint16","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","__webpack_module_cache__","__webpack_require__","__webpack_modules__","enumerable","globalThis","Function","toStringTag","__webpack_exports__","require","arr2","arrayLikeToArray","ReferenceError","asyncGeneratorStep","_next","_throw","toPropertyKey","_defineProperties","props","descriptor","configurable","writable","protoProps","staticProps","unsupportedIterableToArray","allowArrayLike","normalCompletion","didErr","_e2","getPrototypeOf","isNativeReflectConstruct","possibleConstructorReturn","Derived","hasNativeReflectConstruct","Super","NewTarget","Reflect","construct","_getPrototypeOf","setPrototypeOf","__proto__","subClass","superClass","sham","Proxy","valueOf","iter","_s","_r","_arr","_n","_d","assertThisInitialized","Op","hasOwn","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","makeInvokeMethod","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","record","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","_sent","dispatchException","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","awrap","object","skipTempReset","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","_setPrototypeOf","arrayWithHoles","iterableToArrayLimit","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","hint","prim","toPrimitive","res","minLen","_arrayLikeToArray","_toPropertyKey","_unsupportedIterableToArray","moduleId","cachedModule","getter","definition","prop","_defineProperty","_construct","Parent","Class","proxyMarker","createEndpoint","releaseProxy","throwMarker","transferHandlers","canHandle","_MessageChannel","expose","port","createProxy","isError","serialized","ep","addEventListener","ev","_Object$assign","path","id","argumentList","fromWireValue","parent","rawValue","_MessageChannel2","transfers","transferCache","transfer","_toWireValue2","toWireValue","wireValue","transferables","removeEventListener","closeEndPoint","endpoint","isMessagePort","throwIfProxyReleased","isReleased","isProxyReleased","_target","requestResponseMessage","_toWireValue4","_thisArg","rawArgumentList","last","_processArguments2","processArguments","_processArguments4","processed","WeakMap","_step$value","_handler$serialize2","msg","MAX_SAFE_INTEGER","zero$1","LITERALS$1","L_CODES$1","D_CODES$1","MAX_BITS$1","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","_dist_code","_length_code","MAX_MATCH$1","base_length","static_l_desc","static_d_desc","static_bl_desc","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","TreeDesc","dyn_tree","stat_desc","max_code","d_code","dist","put_short","pending_buf","pending","send_bits","bi_valid","bi_buf","send_code","tree","bi_reverse","gen_codes","bl_count","bits","next_code","init_block","dyn_ltree","dyn_dtree","bl_tree","END_BLOCK","opt_len","static_len","sym_next","matches","bi_windup","smaller","_n2","_m2","pqdownheap","heap","heap_len","compress_block","ltree","dtree","sx","sym_buf","build_tree","stree","heap_max","xbits","base","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","_tr_stored_block$1","stored_len","_tr_flush_block_1","opt_lenb","static_lenb","max_blindex","level","strm","data_type","block_mask","detect_data_type","l_desc","d_desc","bl_desc","BL_CODES$1","build_bl_tree","strategy","lcodes","dcodes","blcodes","rank","send_all_trees","trees","_tr_init","LENGTH_CODES$1","tr_static_init","_tr_stored_block","_tr_flush_block","_tr_tally","sym_end","_tr_align","STATIC_TREES","bi_flush","adler32_1","adler","s1","s2","crcTable","table","makeTable","crc32_1","crc","messages","constants$2","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","Z_NO_FLUSH$2","Z_FULL_FLUSH$1","Z_FINISH$3","Z_BLOCK$1","Z_OK$3","Z_STREAM_END$3","Z_STREAM_ERROR$2","Z_DATA_ERROR$2","Z_BUF_ERROR$1","Z_DEFAULT_COMPRESSION$1","Z_DEFAULT_STRATEGY$1","Z_DEFLATED$2","MAX_MATCH","MIN_LOOKAHEAD","INIT_STATE","BUSY_STATE","FINISH_STATE","errorCode","slide_hash","wsize","w_size","hash_size","HASH","hash_shift","hash_mask","flush_pending","avail_out","pending_out","next_out","total_out","flush_block_only","block_start","strstart","put_byte","putShortMSB","read_buf","avail_in","next_in","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","limit","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","more","_w_size","window_size","insert","ins_h","deflate_stored","left","have","min_block","pending_buf_size","used","high_water","deflate_fast","hash_head","bflush","match_length","max_lazy_match","MIN_MATCH","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","configuration_table","DeflateState","gzhead","gzindex","last_flush","w_bits","hash_bits","HEAP_SIZE","MAX_BITS","lit_bufsize","deflateStateCheck","deflateResetKeep","deflateReset","ret","deflateInit2","windowBits","memLevel","deflateSetDictionary_1","dictionary","dictLength","tmpDict","avail","deflate_1$2","deflateInit","deflateSetHeader","deflate","old_flush","header","hcrc","comment","os","beg","gzhead_extra","bstate","deflate_huff","deflate_rle","deflateEnd","deflateSetDictionary","deflateInfo","_has","common","sources","source","flattenChunks","chunks","chunk","STR_APPLY_UIA_OK","__","_utf8len","string2buf","TextEncoder","c2","m_pos","str_len","buf_len","buf2string","utf16buf","c_len","buf2binstring","utf8border","zstream","Z_NO_FLUSH$1","Z_FINISH$2","Z_OK$2","Z_STREAM_END$2","Z_DEFLATED$1","Deflate$1","chunkSize","opt","gzip","ended","dict","_dict_set","flush_mode","_flush_mode","onData","onEnd","BAD$1","inffast","_in","_out","dmax","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","from_source","lencode","distcode","lenbits","distbits","top","dolen","dodist","sane","MAXBITS","lbase","lext","dbase","dext","inftrees","lens","lens_index","codes","table_index","work","opts","incr","mask","here_bits","here_op","here_val","sym","root","curr","drop","huff","offs","Z_FINISH$1","Z_OK$1","Z_STREAM_END$1","Z_NEED_DICT$1","Z_STREAM_ERROR$1","Z_DATA_ERROR$1","Z_MEM_ERROR$1","HEAD","DICT","TYPE","TYPEDO","COPY_","LEN_","LEN","CHECK","BAD","zswap32","InflateState","havedict","flags","check","total","wbits","ncode","nlen","ndist","lendyn","distdyn","back","was","lenfix","distfix","inflateStateCheck","inflateResetKeep","inflateReset","inflateReset2","inflateInit2","virgin","fixedtables","updatewindow","inflate_1$2","inflateInit","inflate","last_bits","last_op","last_val","hbuf","order","inf_leave","xflags","extra_len","inflateEnd","inflateGetHeader","inflateSetDictionary","inflateInfo","gzheader","Inflate$1","inflate$1","inflator","last_avail_out","next_out_utf8","utf8str","inflate_1$1","Inflate","inflateRaw","ungzip","constants","inflate_1","modelPath","modelData","cachedData","ort","wasmRoot","localforage","fetchData","ortSession","extension","resp","pako","cacheSize","validateCache","cacheKeys","_cacheSize","cacheItemSizes","newCacheSize","_cacheItemSizes$entri","cacheSizeMB","Comlink"],"sourceRoot":""}